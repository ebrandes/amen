0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/bin/npm', 'update' ]
2 info using npm@1.4.10
3 info using node@v0.10.26
4 verbose node symlink /usr/bin/node
5 verbose url raw grunt-shell
6 verbose url resolving [ 'https://registry.npmjs.org/', './grunt-shell' ]
7 verbose url resolved https://registry.npmjs.org/grunt-shell
8 info trying registry request attempt 1 at 20:00:04
9 http GET https://registry.npmjs.org/grunt-shell
10 verbose url raw jade
11 verbose url resolving [ 'https://registry.npmjs.org/', './jade' ]
12 verbose url resolved https://registry.npmjs.org/jade
13 info trying registry request attempt 1 at 20:00:04
14 verbose etag "73ULH7RMK1J453ANPAXW4NK9R"
15 http GET https://registry.npmjs.org/jade
16 verbose url raw mongoose
17 verbose url resolving [ 'https://registry.npmjs.org/', './mongoose' ]
18 verbose url resolved https://registry.npmjs.org/mongoose
19 info trying registry request attempt 1 at 20:00:04
20 verbose etag "1SXLDIFGJG479WYOGNUMN8E7G"
21 http GET https://registry.npmjs.org/mongoose
22 verbose url raw grunt-contrib-watch
23 verbose url resolving [ 'https://registry.npmjs.org/', './grunt-contrib-watch' ]
24 verbose url resolved https://registry.npmjs.org/grunt-contrib-watch
25 info trying registry request attempt 1 at 20:00:04
26 verbose etag "LYYYUOP0VSGWKRRIQU3KR09B"
27 http GET https://registry.npmjs.org/grunt-contrib-watch
28 verbose url raw grunt-cli
29 verbose url resolving [ 'https://registry.npmjs.org/', './grunt-cli' ]
30 verbose url resolved https://registry.npmjs.org/grunt-cli
31 info trying registry request attempt 1 at 20:00:04
32 verbose etag "2N4Q2HZ7WUVGJJXGJU5D7XSNX"
33 http GET https://registry.npmjs.org/grunt-cli
34 verbose url raw bower
35 verbose url resolving [ 'https://registry.npmjs.org/', './bower' ]
36 verbose url resolved https://registry.npmjs.org/bower
37 info trying registry request attempt 1 at 20:00:07
38 verbose etag "EB0VPH5GMQV0FUMN1FKMVTPH0"
39 http GET https://registry.npmjs.org/bower
40 verbose url raw express
41 verbose url resolving [ 'https://registry.npmjs.org/', './express' ]
42 verbose url resolved https://registry.npmjs.org/express
43 info trying registry request attempt 1 at 20:00:07
44 verbose etag "EH1SG5WPZ264AUA6QWDC7BFZC"
45 http GET https://registry.npmjs.org/express
46 http 304 https://registry.npmjs.org/grunt-contrib-watch
47 silly registry.get cb [ 304,
47 silly registry.get   { date: 'Tue, 20 May 2014 23:00:07 GMT',
47 silly registry.get     server: 'Apache',
47 silly registry.get     via: '1.1 varnish',
47 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:07 GMT',
47 silly registry.get     'cache-control': 'max-age=1',
47 silly registry.get     etag: '"LYYYUOP0VSGWKRRIQU3KR09B"',
47 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
47 silly registry.get     'x-cache': 'HIT',
47 silly registry.get     'x-cache-hits': '1',
47 silly registry.get     'x-timer': 'S1400626807.316173792,VS0,VE7',
47 silly registry.get     vary: 'Accept',
47 silly registry.get     'content-length': '0',
47 silly registry.get     'keep-alive': 'timeout=10, max=50',
47 silly registry.get     connection: 'Keep-Alive' } ]
48 verbose etag grunt-contrib-watch from cache
49 verbose url raw gaze
50 verbose url resolving [ 'https://registry.npmjs.org/', './gaze' ]
51 verbose url resolved https://registry.npmjs.org/gaze
52 info trying registry request attempt 1 at 20:00:10
53 verbose etag "Y68W0K0MA3N9QI4A7DS1QFJ1"
54 http GET https://registry.npmjs.org/gaze
55 verbose url raw tiny-lr-fork
56 verbose url resolving [ 'https://registry.npmjs.org/', './tiny-lr-fork' ]
57 verbose url resolved https://registry.npmjs.org/tiny-lr-fork
58 info trying registry request attempt 1 at 20:00:10
59 verbose etag "46ESTL2S9NWWO748E2HDZK9C6"
60 http GET https://registry.npmjs.org/tiny-lr-fork
61 verbose url raw lodash
62 verbose url resolving [ 'https://registry.npmjs.org/', './lodash' ]
63 verbose url resolved https://registry.npmjs.org/lodash
64 info trying registry request attempt 1 at 20:00:10
65 verbose etag "3FB4V66BB91VTY4RMP1Q5CHW"
66 http GET https://registry.npmjs.org/lodash
67 verbose url raw async
68 verbose url resolving [ 'https://registry.npmjs.org/', './async' ]
69 verbose url resolved https://registry.npmjs.org/async
70 info trying registry request attempt 1 at 20:00:10
71 verbose etag "7ZKFJZOT0QX071XX77HV1DEZA"
72 http GET https://registry.npmjs.org/async
73 http 304 https://registry.npmjs.org/bower
74 silly registry.get cb [ 304,
74 silly registry.get   { date: 'Tue, 20 May 2014 23:00:07 GMT',
74 silly registry.get     server: 'Apache',
74 silly registry.get     via: '1.1 varnish',
74 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:07 GMT',
74 silly registry.get     'cache-control': 'max-age=1',
74 silly registry.get     etag: '"EB0VPH5GMQV0FUMN1FKMVTPH0"',
74 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
74 silly registry.get     'x-cache': 'HIT',
74 silly registry.get     'x-cache-hits': '1',
74 silly registry.get     'x-timer': 'S1400626807.931228638,VS0,VE7',
74 silly registry.get     vary: 'Accept',
74 silly registry.get     'content-length': '0',
74 silly registry.get     'keep-alive': 'timeout=10, max=49',
74 silly registry.get     connection: 'Keep-Alive' } ]
75 verbose etag bower from cache
76 http 304 https://registry.npmjs.org/jade
77 silly registry.get cb [ 304,
77 silly registry.get   { date: 'Tue, 20 May 2014 23:00:08 GMT',
77 silly registry.get     server: 'Apache',
77 silly registry.get     via: '1.1 varnish',
77 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:08 GMT',
77 silly registry.get     'cache-control': 'max-age=1',
77 silly registry.get     etag: '"73ULH7RMK1J453ANPAXW4NK9R"',
77 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
77 silly registry.get     'x-cache': 'HIT',
77 silly registry.get     'x-cache-hits': '1',
77 silly registry.get     'x-timer': 'S1400626808.286993265,VS0,VE96',
77 silly registry.get     vary: 'Accept',
77 silly registry.get     'content-length': '0',
77 silly registry.get     'keep-alive': 'timeout=10, max=50',
77 silly registry.get     connection: 'Keep-Alive' } ]
78 verbose etag jade from cache
79 verbose url raw abbrev
80 verbose url resolving [ 'https://registry.npmjs.org/', './abbrev' ]
81 verbose url resolved https://registry.npmjs.org/abbrev
82 info trying registry request attempt 1 at 20:00:11
83 verbose etag "6XOGUYVKMN52268Z2JJYBDTZD"
84 http GET https://registry.npmjs.org/abbrev
85 verbose url raw bower-config
86 verbose url resolving [ 'https://registry.npmjs.org/', './bower-config' ]
87 verbose url resolved https://registry.npmjs.org/bower-config
88 info trying registry request attempt 1 at 20:00:11
89 verbose etag "7K1Q5A5KOF51LZ9IWDBQO0KV2"
90 http GET https://registry.npmjs.org/bower-config
91 verbose url raw archy
92 verbose url resolving [ 'https://registry.npmjs.org/', './archy' ]
93 verbose url resolved https://registry.npmjs.org/archy
94 info trying registry request attempt 1 at 20:00:11
95 verbose etag "1896SOVEFOO0AU9N6HHSVIPJK"
96 http GET https://registry.npmjs.org/archy
97 verbose url raw bower-json
98 verbose url resolving [ 'https://registry.npmjs.org/', './bower-json' ]
99 verbose url resolved https://registry.npmjs.org/bower-json
100 info trying registry request attempt 1 at 20:00:11
101 verbose etag "F17HJ6K9ZIM4FVSJ5O46ISS2L"
102 http GET https://registry.npmjs.org/bower-json
103 verbose url raw bower-logger
104 verbose url resolving [ 'https://registry.npmjs.org/', './bower-logger' ]
105 verbose url resolved https://registry.npmjs.org/bower-logger
106 info trying registry request attempt 1 at 20:00:11
107 verbose etag "86JMPIKZA2O1XENJDL0CA4WPK"
108 http GET https://registry.npmjs.org/bower-logger
109 verbose url raw bower-endpoint-parser
110 verbose url resolving [ 'https://registry.npmjs.org/', './bower-endpoint-parser' ]
111 verbose url resolved https://registry.npmjs.org/bower-endpoint-parser
112 info trying registry request attempt 1 at 20:00:11
113 verbose etag "7QKNUTZCNYRGMOM9SMJTMVS5P"
114 http GET https://registry.npmjs.org/bower-endpoint-parser
115 verbose url raw bower-registry-client
116 verbose url resolving [ 'https://registry.npmjs.org/', './bower-registry-client' ]
117 verbose url resolved https://registry.npmjs.org/bower-registry-client
118 info trying registry request attempt 1 at 20:00:11
119 verbose etag "2BQLM9Z98X3IJWP5S24LQBXB8"
120 http GET https://registry.npmjs.org/bower-registry-client
121 verbose url raw chmodr
122 verbose url resolving [ 'https://registry.npmjs.org/', './chmodr' ]
123 verbose url resolved https://registry.npmjs.org/chmodr
124 info trying registry request attempt 1 at 20:00:11
125 verbose etag "AFSD6L8HHVJ4KTV3OAI8WCEEN"
126 http GET https://registry.npmjs.org/chmodr
127 verbose url raw fstream
128 verbose url resolving [ 'https://registry.npmjs.org/', './fstream' ]
129 verbose url resolved https://registry.npmjs.org/fstream
130 info trying registry request attempt 1 at 20:00:11
131 verbose etag "5GR1U9ZQ7P3NOQJ2GFSC47N3P"
132 http GET https://registry.npmjs.org/fstream
133 verbose url raw fstream-ignore
134 verbose url resolving [ 'https://registry.npmjs.org/', './fstream-ignore' ]
135 verbose url resolved https://registry.npmjs.org/fstream-ignore
136 info trying registry request attempt 1 at 20:00:11
137 verbose etag "AM5CUEE4UTMY7GQBULUVOVPRA"
138 http GET https://registry.npmjs.org/fstream-ignore
139 verbose url raw glob
140 verbose url resolving [ 'https://registry.npmjs.org/', './glob' ]
141 verbose url resolved https://registry.npmjs.org/glob
142 info trying registry request attempt 1 at 20:00:11
143 verbose etag "3IMLZ6TYGHPDWRT881SY4RGIK"
144 http GET https://registry.npmjs.org/glob
145 verbose url raw cardinal
146 verbose url resolving [ 'https://registry.npmjs.org/', './cardinal' ]
147 verbose url resolved https://registry.npmjs.org/cardinal
148 info trying registry request attempt 1 at 20:00:11
149 verbose etag "2U37I1LUMOQHSXJXTWPF7KSGU"
150 http GET https://registry.npmjs.org/cardinal
151 verbose url raw handlebars
152 verbose url resolving [ 'https://registry.npmjs.org/', './handlebars' ]
153 verbose url resolved https://registry.npmjs.org/handlebars
154 info trying registry request attempt 1 at 20:00:11
155 verbose etag "68DJB5XBWXGOVQ98I8HX2IIEH"
156 http GET https://registry.npmjs.org/handlebars
157 verbose url raw inquirer
158 verbose url resolving [ 'https://registry.npmjs.org/', './inquirer' ]
159 verbose url resolved https://registry.npmjs.org/inquirer
160 info trying registry request attempt 1 at 20:00:11
161 verbose etag "56VGPLTPR7OUGBMB5TNHNPNAV"
162 http GET https://registry.npmjs.org/inquirer
163 verbose url raw insight
164 verbose url resolving [ 'https://registry.npmjs.org/', './insight' ]
165 verbose url resolved https://registry.npmjs.org/insight
166 info trying registry request attempt 1 at 20:00:11
167 verbose etag "EV044IPU0XNAFUMKZDTEADMPN"
168 http GET https://registry.npmjs.org/insight
169 verbose url raw is-root
170 verbose url resolving [ 'https://registry.npmjs.org/', './is-root' ]
171 verbose url resolved https://registry.npmjs.org/is-root
172 info trying registry request attempt 1 at 20:00:11
173 verbose etag "DO5OE6EOI4QAGTOEFMMXUSV4F"
174 http GET https://registry.npmjs.org/is-root
175 verbose url raw junk
176 verbose url resolving [ 'https://registry.npmjs.org/', './junk' ]
177 verbose url resolved https://registry.npmjs.org/junk
178 info trying registry request attempt 1 at 20:00:11
179 verbose etag "570K5D8QDMTCRMOHPGBWLK9AD"
180 http GET https://registry.npmjs.org/junk
181 verbose url raw graceful-fs
182 verbose url resolving [ 'https://registry.npmjs.org/', './graceful-fs' ]
183 verbose url resolved https://registry.npmjs.org/graceful-fs
184 info trying registry request attempt 1 at 20:00:11
185 verbose etag "8QQOCCU264QJY11TWJH4MT2R3"
186 http GET https://registry.npmjs.org/graceful-fs
187 verbose url raw chalk
188 verbose url resolving [ 'https://registry.npmjs.org/', './chalk' ]
189 verbose url resolved https://registry.npmjs.org/chalk
190 info trying registry request attempt 1 at 20:00:11
191 verbose etag "8OXNV1HJLE107O11EL6U9AHE4"
192 http GET https://registry.npmjs.org/chalk
193 verbose url raw mkdirp
194 verbose url resolving [ 'https://registry.npmjs.org/', './mkdirp' ]
195 verbose url resolved https://registry.npmjs.org/mkdirp
196 info trying registry request attempt 1 at 20:00:11
197 verbose etag "C0HL0ZN6H94P4HY9GA5M441DZ"
198 http GET https://registry.npmjs.org/mkdirp
199 verbose url raw lockfile
200 verbose url resolving [ 'https://registry.npmjs.org/', './lockfile' ]
201 verbose url resolved https://registry.npmjs.org/lockfile
202 info trying registry request attempt 1 at 20:00:11
203 verbose etag "BE6HUPSNPXI5QOIOUTQKTZG1O"
204 http GET https://registry.npmjs.org/lockfile
205 verbose url raw mout
206 verbose url resolving [ 'https://registry.npmjs.org/', './mout' ]
207 verbose url resolved https://registry.npmjs.org/mout
208 info trying registry request attempt 1 at 20:00:12
209 verbose etag "EO8H8J6WJ8LMBJBXQLXVENMSZ"
210 http GET https://registry.npmjs.org/mout
211 verbose url raw nopt
212 verbose url resolving [ 'https://registry.npmjs.org/', './nopt' ]
213 verbose url resolved https://registry.npmjs.org/nopt
214 info trying registry request attempt 1 at 20:00:12
215 verbose etag "2QJE527XNT91MVCKDI9C7WMYZ"
216 http GET https://registry.npmjs.org/nopt
217 verbose url raw opn
218 verbose url resolving [ 'https://registry.npmjs.org/', './opn' ]
219 verbose url resolved https://registry.npmjs.org/opn
220 info trying registry request attempt 1 at 20:00:12
221 verbose etag "A25NT3NOOESTXFAGSEQ3TAI7N"
222 http GET https://registry.npmjs.org/opn
223 verbose url raw p-throttler
224 verbose url resolving [ 'https://registry.npmjs.org/', './p-throttler' ]
225 verbose url resolved https://registry.npmjs.org/p-throttler
226 info trying registry request attempt 1 at 20:00:12
227 verbose etag "68WEPGHPQAO4AMIJTX2ILZ86T"
228 http GET https://registry.npmjs.org/p-throttler
229 verbose url raw osenv
230 verbose url resolving [ 'https://registry.npmjs.org/', './osenv' ]
231 verbose url resolved https://registry.npmjs.org/osenv
232 info trying registry request attempt 1 at 20:00:12
233 verbose etag "7ZZCZDQYWD6OZS7NQ0LLLANNZ"
234 http GET https://registry.npmjs.org/osenv
235 verbose url raw request
236 verbose url resolving [ 'https://registry.npmjs.org/', './request' ]
237 verbose url resolved https://registry.npmjs.org/request
238 info trying registry request attempt 1 at 20:00:12
239 verbose etag "F24CCFZBRRHRM9QYIIT463SVB"
240 http GET https://registry.npmjs.org/request
241 verbose url raw q
242 verbose url resolving [ 'https://registry.npmjs.org/', './q' ]
243 verbose url resolved https://registry.npmjs.org/q
244 info trying registry request attempt 1 at 20:00:12
245 verbose etag "BZBSW861DDQQDA76ALY8BWX4S"
246 http GET https://registry.npmjs.org/q
247 verbose url raw promptly
248 verbose url resolving [ 'https://registry.npmjs.org/', './promptly' ]
249 verbose url resolved https://registry.npmjs.org/promptly
250 info trying registry request attempt 1 at 20:00:12
251 verbose etag "7XQ80S52I0TQ5Y1XM3S96X706"
252 http GET https://registry.npmjs.org/promptly
253 verbose url raw request-progress
254 verbose url resolving [ 'https://registry.npmjs.org/', './request-progress' ]
255 verbose url resolved https://registry.npmjs.org/request-progress
256 info trying registry request attempt 1 at 20:00:12
257 verbose etag "2WKUQLWDEA3BQ81OQNNS5NV4F"
258 http GET https://registry.npmjs.org/request-progress
259 verbose url raw retry
260 verbose url resolving [ 'https://registry.npmjs.org/', './retry' ]
261 verbose url resolved https://registry.npmjs.org/retry
262 info trying registry request attempt 1 at 20:00:12
263 verbose etag "CYGCHTT54PZV8D99ORYCFYHNQ"
264 http GET https://registry.npmjs.org/retry
265 verbose url raw rimraf
266 verbose url resolving [ 'https://registry.npmjs.org/', './rimraf' ]
267 verbose url resolved https://registry.npmjs.org/rimraf
268 info trying registry request attempt 1 at 20:00:12
269 verbose etag "CQHWPTC3KAPIU8K8Z8GLW2G8O"
270 http GET https://registry.npmjs.org/rimraf
271 verbose url raw shell-quote
272 verbose url resolving [ 'https://registry.npmjs.org/', './shell-quote' ]
273 verbose url resolved https://registry.npmjs.org/shell-quote
274 info trying registry request attempt 1 at 20:00:12
275 verbose etag "D29OI0Q1ZFQ5W6G4PFWVENSTE"
276 http GET https://registry.npmjs.org/shell-quote
277 verbose url raw stringify-object
278 verbose url resolving [ 'https://registry.npmjs.org/', './stringify-object' ]
279 verbose url resolved https://registry.npmjs.org/stringify-object
280 info trying registry request attempt 1 at 20:00:12
281 verbose etag "EAVRKN9SV484EY5XMLJFQ6M7T"
282 http GET https://registry.npmjs.org/stringify-object
283 verbose url raw tar
284 verbose url resolving [ 'https://registry.npmjs.org/', './tar' ]
285 verbose url resolved https://registry.npmjs.org/tar
286 info trying registry request attempt 1 at 20:00:12
287 verbose etag "37OKGFYQ1HCUIWP3DR80PA6U8"
288 http GET https://registry.npmjs.org/tar
289 verbose url raw semver
290 verbose url resolving [ 'https://registry.npmjs.org/', './semver' ]
291 verbose url resolved https://registry.npmjs.org/semver
292 info trying registry request attempt 1 at 20:00:12
293 verbose etag "DSNOBFDMQF0O78I2FJMMGUY31"
294 http GET https://registry.npmjs.org/semver
295 verbose url raw update-notifier
296 verbose url resolving [ 'https://registry.npmjs.org/', './update-notifier' ]
297 verbose url resolved https://registry.npmjs.org/update-notifier
298 info trying registry request attempt 1 at 20:00:12
299 verbose etag "19GNVBSP9NG5Q5JWS89AUT8N3"
300 http GET https://registry.npmjs.org/update-notifier
301 verbose url raw which
302 verbose url resolving [ 'https://registry.npmjs.org/', './which' ]
303 verbose url resolved https://registry.npmjs.org/which
304 info trying registry request attempt 1 at 20:00:12
305 verbose etag "4U42AUANZD43I26W7W04SHTG3"
306 http GET https://registry.npmjs.org/which
307 verbose url raw tmp
308 verbose url resolving [ 'https://registry.npmjs.org/', './tmp' ]
309 verbose url resolved https://registry.npmjs.org/tmp
310 info trying registry request attempt 1 at 20:00:12
311 verbose etag "7EEX0B275AFWTKLXBU24JHYBQ"
312 http GET https://registry.npmjs.org/tmp
313 verbose url raw lru-cache
314 verbose url resolving [ 'https://registry.npmjs.org/', './lru-cache' ]
315 verbose url resolved https://registry.npmjs.org/lru-cache
316 info trying registry request attempt 1 at 20:00:12
317 verbose etag "6EAH4E2XKATH9G2WW7G1L4L00"
318 http GET https://registry.npmjs.org/lru-cache
319 verbose url raw decompress-zip
320 verbose url resolving [ 'https://registry.npmjs.org/', './decompress-zip' ]
321 verbose url resolved https://registry.npmjs.org/decompress-zip
322 info trying registry request attempt 1 at 20:00:12
323 verbose etag "60UOKSHAYZ2UY4T6ADITWKD28"
324 http GET https://registry.npmjs.org/decompress-zip
325 verbose url raw transformers
326 verbose url resolving [ 'https://registry.npmjs.org/', './transformers' ]
327 verbose url resolved https://registry.npmjs.org/transformers
328 info trying registry request attempt 1 at 20:00:12
329 http GET https://registry.npmjs.org/transformers
330 verbose url raw character-parser
331 verbose url resolving [ 'https://registry.npmjs.org/', './character-parser' ]
332 verbose url resolved https://registry.npmjs.org/character-parser
333 info trying registry request attempt 1 at 20:00:12
334 http GET https://registry.npmjs.org/character-parser
335 verbose url raw monocle
336 verbose url resolving [ 'https://registry.npmjs.org/', './monocle' ]
337 verbose url resolved https://registry.npmjs.org/monocle
338 info trying registry request attempt 1 at 20:00:12
339 http GET https://registry.npmjs.org/monocle
340 verbose url raw with
341 verbose url resolving [ 'https://registry.npmjs.org/', './with' ]
342 verbose url resolved https://registry.npmjs.org/with
343 info trying registry request attempt 1 at 20:00:12
344 http GET https://registry.npmjs.org/with
345 verbose url raw constantinople
346 verbose url resolving [ 'https://registry.npmjs.org/', './constantinople' ]
347 verbose url resolved https://registry.npmjs.org/constantinople
348 info trying registry request attempt 1 at 20:00:12
349 http GET https://registry.npmjs.org/constantinople
350 verbose url raw mkdirp
351 verbose url resolving [ 'https://registry.npmjs.org/', './mkdirp' ]
352 verbose url resolved https://registry.npmjs.org/mkdirp
353 info trying registry request attempt 1 at 20:00:12
354 verbose etag "C0HL0ZN6H94P4HY9GA5M441DZ"
355 http GET https://registry.npmjs.org/mkdirp
356 verbose url raw commander
357 verbose url resolving [ 'https://registry.npmjs.org/', './commander' ]
358 verbose url resolved https://registry.npmjs.org/commander
359 info trying registry request attempt 1 at 20:00:12
360 verbose etag "CV23IHZEEK5NHN7YNI695HJ80"
361 http GET https://registry.npmjs.org/commander
362 http 304 https://registry.npmjs.org/grunt-cli
363 silly registry.get cb [ 304,
363 silly registry.get   { date: 'Tue, 20 May 2014 23:00:09 GMT',
363 silly registry.get     server: 'Apache',
363 silly registry.get     via: '1.1 varnish',
363 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:09 GMT',
363 silly registry.get     'cache-control': 'max-age=1',
363 silly registry.get     etag: '"2N4Q2HZ7WUVGJJXGJU5D7XSNX"',
363 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
363 silly registry.get     'x-cache': 'HIT',
363 silly registry.get     'x-cache-hits': '1',
363 silly registry.get     'x-timer': 'S1400626809.669052362,VS0,VE7',
363 silly registry.get     vary: 'Accept',
363 silly registry.get     'content-length': '0',
363 silly registry.get     'keep-alive': 'timeout=10, max=50',
363 silly registry.get     connection: 'Keep-Alive' } ]
364 verbose etag grunt-cli from cache
365 verbose url raw nopt
366 verbose url resolving [ 'https://registry.npmjs.org/', './nopt' ]
367 verbose url resolved https://registry.npmjs.org/nopt
368 info trying registry request attempt 1 at 20:00:12
369 verbose etag "2QJE527XNT91MVCKDI9C7WMYZ"
370 http GET https://registry.npmjs.org/nopt
371 verbose url raw resolve
372 verbose url resolving [ 'https://registry.npmjs.org/', './resolve' ]
373 verbose url resolved https://registry.npmjs.org/resolve
374 info trying registry request attempt 1 at 20:00:12
375 verbose etag "DJUVR9M4REEHGE93VUY2Y6BZE"
376 http GET https://registry.npmjs.org/resolve
377 verbose url raw findup-sync
378 verbose url resolving [ 'https://registry.npmjs.org/', './findup-sync' ]
379 verbose url resolved https://registry.npmjs.org/findup-sync
380 info trying registry request attempt 1 at 20:00:12
381 verbose etag "A5GURQYFPZTMB7CQMGUCB2RJ6"
382 http GET https://registry.npmjs.org/findup-sync
383 http 304 https://registry.npmjs.org/tiny-lr-fork
384 silly registry.get cb [ 304,
384 silly registry.get   { date: 'Tue, 20 May 2014 23:00:10 GMT',
384 silly registry.get     server: 'Apache',
384 silly registry.get     via: '1.1 varnish',
384 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:10 GMT',
384 silly registry.get     'cache-control': 'max-age=1',
384 silly registry.get     etag: '"46ESTL2S9NWWO748E2HDZK9C6"',
384 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
384 silly registry.get     'x-cache': 'HIT',
384 silly registry.get     'x-cache-hits': '1',
384 silly registry.get     'x-timer': 'S1400626810.785975218,VS0,VE17',
384 silly registry.get     vary: 'Accept',
384 silly registry.get     'content-length': '0',
384 silly registry.get     'keep-alive': 'timeout=10, max=49',
384 silly registry.get     connection: 'Keep-Alive' } ]
385 verbose etag tiny-lr-fork from cache
386 verbose url raw noptify
387 verbose url resolving [ 'https://registry.npmjs.org/', './noptify' ]
388 verbose url resolved https://registry.npmjs.org/noptify
389 info trying registry request attempt 1 at 20:00:13
390 verbose etag "F0NTY67SI8ZEM4RV82K7E0NJA"
391 http GET https://registry.npmjs.org/noptify
392 verbose url raw qs
393 verbose url resolving [ 'https://registry.npmjs.org/', './qs' ]
394 verbose url resolved https://registry.npmjs.org/qs
395 info trying registry request attempt 1 at 20:00:13
396 verbose etag "2LQ8NG6NFNSWA4YZA00E067EN"
397 http GET https://registry.npmjs.org/qs
398 verbose url raw debug
399 verbose url resolving [ 'https://registry.npmjs.org/', './debug' ]
400 verbose url resolved https://registry.npmjs.org/debug
401 info trying registry request attempt 1 at 20:00:13
402 verbose etag "34MCHRG9G5B3KUGY4R3IYH612"
403 http GET https://registry.npmjs.org/debug
404 verbose url raw faye-websocket
405 verbose url resolving [ 'https://registry.npmjs.org/', './faye-websocket' ]
406 verbose url resolved https://registry.npmjs.org/faye-websocket
407 info trying registry request attempt 1 at 20:00:13
408 verbose etag "9VQZL6Y7ZU0EIUH7VJ2YSDQC2"
409 http GET https://registry.npmjs.org/faye-websocket
410 http 200 https://registry.npmjs.org/gaze
411 silly registry.get cb [ 200,
411 silly registry.get   { date: 'Tue, 20 May 2014 23:00:08 GMT',
411 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
411 silly registry.get     etag: '"89ZS2QHTPOEQ99P7PUGYB6988"',
411 silly registry.get     'content-type': 'application/json',
411 silly registry.get     via: '1.1 varnish',
411 silly registry.get     'cache-control': 'max-age=1',
411 silly registry.get     'content-length': '50239',
411 silly registry.get     'accept-ranges': 'bytes',
411 silly registry.get     age: '181',
411 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-jfk1022-JFK',
411 silly registry.get     'x-cache': 'HIT, HIT',
411 silly registry.get     'x-cache-hits': '2, 1',
411 silly registry.get     'x-timer': 'S1400468172.308685303,VS0,VS6,VE6,VE158636559',
411 silly registry.get     vary: 'Accept',
411 silly registry.get     'keep-alive': 'timeout=10, max=49',
411 silly registry.get     connection: 'Keep-Alive' } ]
412 http 200 https://registry.npmjs.org/lodash
413 silly registry.get cb [ 200,
413 silly registry.get   { date: 'Tue, 20 May 2014 23:00:11 GMT',
413 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
413 silly registry.get     etag: '"7Z7E8QMEXQNF34B78JE7J9QTN"',
413 silly registry.get     'content-type': 'application/json',
413 silly registry.get     via: '1.1 varnish',
413 silly registry.get     'cache-control': 'max-age=1',
413 silly registry.get     'content-length': '71282',
413 silly registry.get     'accept-ranges': 'bytes',
413 silly registry.get     age: '10',
413 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-jfk1031-JFK',
413 silly registry.get     'x-cache': 'HIT, HIT',
413 silly registry.get     'x-cache-hits': '1, 1',
413 silly registry.get     'x-timer': 'S1400626018.261842728,VS0,VS4,VE4,VE792955',
413 silly registry.get     vary: 'Accept',
413 silly registry.get     'keep-alive': 'timeout=10, max=48',
413 silly registry.get     connection: 'Keep-Alive' } ]
414 http 200 https://registry.npmjs.org/express
415 silly registry.get cb [ 200,
415 silly registry.get   { date: 'Tue, 20 May 2014 23:00:08 GMT',
415 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
415 silly registry.get     etag: '"DZ5NKQ50MT6T79H7ACEC3VOOC"',
415 silly registry.get     'content-type': 'application/json',
415 silly registry.get     via: '1.1 varnish',
415 silly registry.get     'cache-control': 'max-age=1',
415 silly registry.get     'content-length': '192334',
415 silly registry.get     'accept-ranges': 'bytes',
415 silly registry.get     age: '9',
415 silly registry.get     'x-served-by': 'cache-v43-ASH, cache-jfk1033-JFK',
415 silly registry.get     'x-cache': 'HIT, HIT',
415 silly registry.get     'x-cache-hits': '1, 1',
415 silly registry.get     'x-timer': 'S1400607110.818410397,VS0,VS0,VE83,VE19697755',
415 silly registry.get     vary: 'Accept',
415 silly registry.get     'keep-alive': 'timeout=10, max=48',
415 silly registry.get     connection: 'Keep-Alive' } ]
416 http 200 https://registry.npmjs.org/abbrev
417 silly registry.get cb [ 200,
417 silly registry.get   { date: 'Tue, 20 May 2014 23:00:13 GMT',
417 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
417 silly registry.get     etag: '"562MFFHMNLG6OBIB7FGGMIS35"',
417 silly registry.get     'content-type': 'application/json',
417 silly registry.get     via: '1.1 varnish',
417 silly registry.get     'cache-control': 'max-age=1',
417 silly registry.get     'content-length': '3712',
417 silly registry.get     'accept-ranges': 'bytes',
417 silly registry.get     age: '13',
417 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-jfk1031-JFK',
417 silly registry.get     'x-cache': 'HIT, HIT',
417 silly registry.get     'x-cache-hits': '15, 1',
417 silly registry.get     'x-timer': 'S1400626594.344334602,VS0,VS5,VE5,VE219453',
417 silly registry.get     vary: 'Accept',
417 silly registry.get     'keep-alive': 'timeout=10, max=47',
417 silly registry.get     connection: 'Keep-Alive' } ]
418 http 304 https://registry.npmjs.org/bower-config
419 silly registry.get cb [ 304,
419 silly registry.get   { date: 'Tue, 20 May 2014 23:00:14 GMT',
419 silly registry.get     server: 'Apache',
419 silly registry.get     via: '1.1 varnish',
419 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:14 GMT',
419 silly registry.get     'cache-control': 'max-age=1',
419 silly registry.get     etag: '"7K1Q5A5KOF51LZ9IWDBQO0KV2"',
419 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
419 silly registry.get     'x-cache': 'HIT',
419 silly registry.get     'x-cache-hits': '1',
419 silly registry.get     'x-timer': 'S1400626814.433459282,VS0,VE9',
419 silly registry.get     vary: 'Accept',
419 silly registry.get     'content-length': '0',
419 silly registry.get     'keep-alive': 'timeout=10, max=47',
419 silly registry.get     connection: 'Keep-Alive' } ]
420 verbose etag bower-config from cache
421 http 304 https://registry.npmjs.org/archy
422 silly registry.get cb [ 304,
422 silly registry.get   { date: 'Tue, 20 May 2014 23:00:14 GMT',
422 silly registry.get     server: 'Apache',
422 silly registry.get     via: '1.1 varnish',
422 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:14 GMT',
422 silly registry.get     'cache-control': 'max-age=1',
422 silly registry.get     etag: '"1896SOVEFOO0AU9N6HHSVIPJK"',
422 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
422 silly registry.get     'x-cache': 'HIT',
422 silly registry.get     'x-cache-hits': '1',
422 silly registry.get     'x-timer': 'S1400626814.515138388,VS0,VE7',
422 silly registry.get     vary: 'Accept',
422 silly registry.get     'content-length': '0',
422 silly registry.get     'keep-alive': 'timeout=10, max=46',
422 silly registry.get     connection: 'Keep-Alive' } ]
423 verbose etag archy from cache
424 verbose url raw graceful-fs
425 verbose url resolving [ 'https://registry.npmjs.org/', './graceful-fs' ]
426 verbose url resolved https://registry.npmjs.org/graceful-fs
427 info trying registry request attempt 1 at 20:00:17
428 verbose etag "8QQOCCU264QJY11TWJH4MT2R3"
429 http GET https://registry.npmjs.org/graceful-fs
430 verbose url raw mout
431 verbose url resolving [ 'https://registry.npmjs.org/', './mout' ]
432 verbose url resolved https://registry.npmjs.org/mout
433 info trying registry request attempt 1 at 20:00:17
434 verbose etag "EO8H8J6WJ8LMBJBXQLXVENMSZ"
435 http GET https://registry.npmjs.org/mout
436 verbose url raw osenv
437 verbose url resolving [ 'https://registry.npmjs.org/', './osenv' ]
438 verbose url resolved https://registry.npmjs.org/osenv
439 info trying registry request attempt 1 at 20:00:17
440 verbose etag "7ZZCZDQYWD6OZS7NQ0LLLANNZ"
441 http GET https://registry.npmjs.org/osenv
442 verbose url raw optimist
443 verbose url resolving [ 'https://registry.npmjs.org/', './optimist' ]
444 verbose url resolved https://registry.npmjs.org/optimist
445 info trying registry request attempt 1 at 20:00:17
446 verbose etag "7LSSPLXSR5F4M24ADMOD1YR02"
447 http GET https://registry.npmjs.org/optimist
448 http 200 https://registry.npmjs.org/async
449 silly registry.get cb [ 200,
449 silly registry.get   { date: 'Tue, 20 May 2014 23:00:11 GMT',
449 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
449 silly registry.get     etag: '"7FQMJTMF88EDGEIUF6FBGCLOI"',
449 silly registry.get     'content-type': 'application/json',
449 silly registry.get     via: '1.1 varnish',
449 silly registry.get     'cache-control': 'max-age=1',
449 silly registry.get     'content-length': '103032',
449 silly registry.get     'accept-ranges': 'bytes',
449 silly registry.get     age: '10',
449 silly registry.get     'x-served-by': 'cache-v36-ASH, cache-jfk1022-JFK',
449 silly registry.get     'x-cache': 'HIT, HIT',
449 silly registry.get     'x-cache-hits': '1, 1',
449 silly registry.get     'x-timer': 'S1400626005.855668545,VS0,VS5,VE246,VE805550',
449 silly registry.get     vary: 'Accept',
449 silly registry.get     'keep-alive': 'timeout=10, max=48',
449 silly registry.get     connection: 'Keep-Alive' } ]
450 http 304 https://registry.npmjs.org/bower-json
451 silly registry.get cb [ 304,
451 silly registry.get   { date: 'Tue, 20 May 2014 23:00:14 GMT',
451 silly registry.get     server: 'Apache',
451 silly registry.get     via: '1.1 varnish',
451 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:14 GMT',
451 silly registry.get     'cache-control': 'max-age=1',
451 silly registry.get     etag: '"F17HJ6K9ZIM4FVSJ5O46ISS2L"',
451 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
451 silly registry.get     'x-cache': 'HIT',
451 silly registry.get     'x-cache-hits': '1',
451 silly registry.get     'x-timer': 'S1400626814.872326612,VS0,VE6',
451 silly registry.get     vary: 'Accept',
451 silly registry.get     'content-length': '0',
451 silly registry.get     'keep-alive': 'timeout=10, max=46',
451 silly registry.get     connection: 'Keep-Alive' } ]
452 verbose etag bower-json from cache
453 verbose url raw graceful-fs
454 verbose url resolving [ 'https://registry.npmjs.org/', './graceful-fs' ]
455 verbose url resolved https://registry.npmjs.org/graceful-fs
456 info trying registry request attempt 1 at 20:00:17
457 verbose etag "8QQOCCU264QJY11TWJH4MT2R3"
458 http GET https://registry.npmjs.org/graceful-fs
459 http 304 https://registry.npmjs.org/bower-logger
460 silly registry.get cb [ 304,
460 silly registry.get   { date: 'Tue, 20 May 2014 23:00:14 GMT',
460 silly registry.get     server: 'Apache',
460 silly registry.get     via: '1.1 varnish',
460 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:14 GMT',
460 silly registry.get     'cache-control': 'max-age=1',
460 silly registry.get     etag: '"86JMPIKZA2O1XENJDL0CA4WPK"',
460 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
460 silly registry.get     'x-cache': 'HIT',
460 silly registry.get     'x-cache-hits': '1',
460 silly registry.get     'x-timer': 'S1400626814.997001171,VS0,VE0',
460 silly registry.get     vary: 'Accept',
460 silly registry.get     'content-length': '0',
460 silly registry.get     'keep-alive': 'timeout=10, max=45',
460 silly registry.get     connection: 'Keep-Alive' } ]
461 verbose etag bower-logger from cache
462 http 304 https://registry.npmjs.org/bower-endpoint-parser
463 silly registry.get cb [ 304,
463 silly registry.get   { date: 'Tue, 20 May 2014 23:00:15 GMT',
463 silly registry.get     server: 'Apache',
463 silly registry.get     via: '1.1 varnish',
463 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:15 GMT',
463 silly registry.get     'cache-control': 'max-age=1',
463 silly registry.get     etag: '"7QKNUTZCNYRGMOM9SMJTMVS5P"',
463 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
463 silly registry.get     'x-cache': 'HIT',
463 silly registry.get     'x-cache-hits': '1',
463 silly registry.get     'x-timer': 'S1400626815.019747972,VS0,VE0',
463 silly registry.get     vary: 'Accept',
463 silly registry.get     'content-length': '0',
463 silly registry.get     'keep-alive': 'timeout=10, max=47',
463 silly registry.get     connection: 'Keep-Alive' } ]
464 verbose etag bower-endpoint-parser from cache
465 verbose url raw intersect
466 verbose url resolving [ 'https://registry.npmjs.org/', './intersect' ]
467 verbose url resolved https://registry.npmjs.org/intersect
468 info trying registry request attempt 1 at 20:00:18
469 verbose etag "5INY0JE2N5WN8SQB3QT1L04DP"
470 http GET https://registry.npmjs.org/intersect
471 verbose url raw deep-extend
472 verbose url resolving [ 'https://registry.npmjs.org/', './deep-extend' ]
473 verbose url resolved https://registry.npmjs.org/deep-extend
474 info trying registry request attempt 1 at 20:00:18
475 verbose etag "3NUAYLIHX3SYZSUOZY9VQBTUV"
476 http GET https://registry.npmjs.org/deep-extend
477 http 304 https://registry.npmjs.org/bower-registry-client
478 silly registry.get cb [ 304,
478 silly registry.get   { date: 'Tue, 20 May 2014 23:00:15 GMT',
478 silly registry.get     server: 'Apache',
478 silly registry.get     via: '1.1 varnish',
478 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:15 GMT',
478 silly registry.get     'cache-control': 'max-age=1',
478 silly registry.get     etag: '"2BQLM9Z98X3IJWP5S24LQBXB8"',
478 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
478 silly registry.get     'x-cache': 'HIT',
478 silly registry.get     'x-cache-hits': '1',
478 silly registry.get     'x-timer': 'S1400626815.449267626,VS0,VE0',
478 silly registry.get     vary: 'Accept',
478 silly registry.get     'content-length': '0',
478 silly registry.get     'keep-alive': 'timeout=10, max=45',
478 silly registry.get     connection: 'Keep-Alive' } ]
479 verbose etag bower-registry-client from cache
480 verbose registry.get async not expired, no request
481 verbose registry.get bower-config not expired, no request
482 verbose url raw graceful-fs
483 verbose url resolving [ 'https://registry.npmjs.org/', './graceful-fs' ]
484 verbose url resolved https://registry.npmjs.org/graceful-fs
485 info trying registry request attempt 1 at 20:00:18
486 verbose etag "8QQOCCU264QJY11TWJH4MT2R3"
487 http GET https://registry.npmjs.org/graceful-fs
488 verbose url raw lru-cache
489 verbose url resolving [ 'https://registry.npmjs.org/', './lru-cache' ]
490 verbose url resolved https://registry.npmjs.org/lru-cache
491 info trying registry request attempt 1 at 20:00:18
492 verbose etag "6EAH4E2XKATH9G2WW7G1L4L00"
493 http GET https://registry.npmjs.org/lru-cache
494 verbose url raw request
495 verbose url resolving [ 'https://registry.npmjs.org/', './request' ]
496 verbose url resolved https://registry.npmjs.org/request
497 info trying registry request attempt 1 at 20:00:18
498 verbose etag "F24CCFZBRRHRM9QYIIT463SVB"
499 http GET https://registry.npmjs.org/request
500 verbose url raw rimraf
501 verbose url resolving [ 'https://registry.npmjs.org/', './rimraf' ]
502 verbose url resolved https://registry.npmjs.org/rimraf
503 info trying registry request attempt 1 at 20:00:18
504 verbose etag "CQHWPTC3KAPIU8K8Z8GLW2G8O"
505 http GET https://registry.npmjs.org/rimraf
506 verbose url raw mkdirp
507 verbose url resolving [ 'https://registry.npmjs.org/', './mkdirp' ]
508 verbose url resolved https://registry.npmjs.org/mkdirp
509 info trying registry request attempt 1 at 20:00:18
510 verbose etag "C0HL0ZN6H94P4HY9GA5M441DZ"
511 http GET https://registry.npmjs.org/mkdirp
512 verbose url raw request-replay
513 verbose url resolving [ 'https://registry.npmjs.org/', './request-replay' ]
514 verbose url resolved https://registry.npmjs.org/request-replay
515 info trying registry request attempt 1 at 20:00:18
516 verbose etag "801UYDWZI3UDCQRNWELW4QE19"
517 http GET https://registry.npmjs.org/request-replay
518 http 304 https://registry.npmjs.org/chmodr
519 silly registry.get cb [ 304,
519 silly registry.get   { date: 'Tue, 20 May 2014 23:00:15 GMT',
519 silly registry.get     server: 'Apache',
519 silly registry.get     via: '1.1 varnish',
519 silly registry.get     'last-modified': 'Tue, 20 May 2014 22:57:06 GMT',
519 silly registry.get     'cache-control': 'max-age=1',
519 silly registry.get     etag: '"AFSD6L8HHVJ4KTV3OAI8WCEEN"',
519 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
519 silly registry.get     'x-cache': 'HIT',
519 silly registry.get     'x-cache-hits': '5',
519 silly registry.get     'x-timer': 'S1400626815.538254499,VS0,VE0',
519 silly registry.get     vary: 'Accept',
519 silly registry.get     'content-length': '0',
519 silly registry.get     'keep-alive': 'timeout=10, max=44',
519 silly registry.get     connection: 'Keep-Alive' } ]
520 verbose etag chmodr from cache
521 http 200 https://registry.npmjs.org/fstream-ignore
522 silly registry.get cb [ 200,
522 silly registry.get   { date: 'Tue, 20 May 2014 23:00:15 GMT',
522 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B)',
522 silly registry.get     etag: '"1O62VL9T7C2KOML1PS81J54HB"',
522 silly registry.get     'content-type': 'application/json',
522 silly registry.get     via: '1.1 varnish',
522 silly registry.get     'cache-control': 'max-age=1',
522 silly registry.get     'content-length': '8834',
522 silly registry.get     'accept-ranges': 'bytes',
522 silly registry.get     age: '29',
522 silly registry.get     'x-served-by': 'cache-v36-ASH, cache-jfk1033-JFK',
522 silly registry.get     'x-cache': 'HIT, HIT',
522 silly registry.get     'x-cache-hits': '1, 1',
522 silly registry.get     'x-timer': 'S1400537935.613800526,VS0,VS5,VE6,VE88880088',
522 silly registry.get     vary: 'Accept',
522 silly registry.get     'keep-alive': 'timeout=10, max=44',
522 silly registry.get     connection: 'Keep-Alive' } ]
523 http 304 https://registry.npmjs.org/cardinal
524 silly registry.get cb [ 304,
524 silly registry.get   { date: 'Tue, 20 May 2014 23:00:16 GMT',
524 silly registry.get     server: 'Apache',
524 silly registry.get     via: '1.1 varnish',
524 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:16 GMT',
524 silly registry.get     'cache-control': 'max-age=1',
524 silly registry.get     etag: '"2U37I1LUMOQHSXJXTWPF7KSGU"',
524 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
524 silly registry.get     'x-cache': 'HIT',
524 silly registry.get     'x-cache-hits': '1',
524 silly registry.get     'x-timer': 'S1400626816.271148205,VS0,VE14',
524 silly registry.get     vary: 'Accept',
524 silly registry.get     'content-length': '0',
524 silly registry.get     'keep-alive': 'timeout=10, max=43',
524 silly registry.get     connection: 'Keep-Alive' } ]
525 verbose etag cardinal from cache
526 verbose url raw redeyed
527 verbose url resolving [ 'https://registry.npmjs.org/', './redeyed' ]
528 verbose url resolved https://registry.npmjs.org/redeyed
529 info trying registry request attempt 1 at 20:00:19
530 verbose etag "6LCOEJXI5PYRJ4JW4WH0DMQW"
531 http GET https://registry.npmjs.org/redeyed
532 verbose url raw ansicolors
533 verbose url resolving [ 'https://registry.npmjs.org/', './ansicolors' ]
534 verbose url resolved https://registry.npmjs.org/ansicolors
535 info trying registry request attempt 1 at 20:00:19
536 verbose etag "4HMIPZFGKFYX9KGNISEDHESGA"
537 http GET https://registry.npmjs.org/ansicolors
538 http 200 https://registry.npmjs.org/fstream
539 silly registry.get cb [ 200,
539 silly registry.get   { date: 'Tue, 20 May 2014 23:00:15 GMT',
539 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
539 silly registry.get     etag: '"9EO49ZEGR7G36RBAEI7YLWQBW"',
539 silly registry.get     'content-type': 'application/json',
539 silly registry.get     via: '1.1 varnish',
539 silly registry.get     'cache-control': 'max-age=1',
539 silly registry.get     'content-length': '46349',
539 silly registry.get     'accept-ranges': 'bytes',
539 silly registry.get     age: '108',
539 silly registry.get     'x-served-by': 'cache-v44-ASH, cache-jfk1022-JFK',
539 silly registry.get     'x-cache': 'HIT, HIT',
539 silly registry.get     'x-cache-hits': '1, 1',
539 silly registry.get     'x-timer': 'S1400580944.189284086,VS0,VS9,VE10,VE45871358',
539 silly registry.get     vary: 'Accept',
539 silly registry.get     'keep-alive': 'timeout=10, max=46',
539 silly registry.get     connection: 'Keep-Alive' } ]
540 verbose url raw rimraf
541 verbose url resolving [ 'https://registry.npmjs.org/', './rimraf' ]
542 verbose url resolved https://registry.npmjs.org/rimraf
543 info trying registry request attempt 1 at 20:00:19
544 verbose etag "CQHWPTC3KAPIU8K8Z8GLW2G8O"
545 http GET https://registry.npmjs.org/rimraf
546 verbose url raw mkdirp
547 verbose url resolving [ 'https://registry.npmjs.org/', './mkdirp' ]
548 verbose url resolved https://registry.npmjs.org/mkdirp
549 info trying registry request attempt 1 at 20:00:19
550 verbose etag "C0HL0ZN6H94P4HY9GA5M441DZ"
551 http GET https://registry.npmjs.org/mkdirp
552 verbose url raw graceful-fs
553 verbose url resolving [ 'https://registry.npmjs.org/', './graceful-fs' ]
554 verbose url resolved https://registry.npmjs.org/graceful-fs
555 info trying registry request attempt 1 at 20:00:19
556 verbose etag "8QQOCCU264QJY11TWJH4MT2R3"
557 http GET https://registry.npmjs.org/graceful-fs
558 verbose url raw inherits
559 verbose url resolving [ 'https://registry.npmjs.org/', './inherits' ]
560 verbose url resolved https://registry.npmjs.org/inherits
561 info trying registry request attempt 1 at 20:00:19
562 verbose etag "AOGM9R8UHMTA4Q3A77R3Y6L0C"
563 http GET https://registry.npmjs.org/inherits
564 http 200 https://registry.npmjs.org/glob
565 silly registry.get cb [ 200,
565 silly registry.get   { date: 'Tue, 20 May 2014 23:00:15 GMT',
565 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
565 silly registry.get     etag: '"2CE79VLA7I89QN6CASW442BU7"',
565 silly registry.get     'content-type': 'application/json',
565 silly registry.get     via: '1.1 varnish',
565 silly registry.get     'cache-control': 'max-age=1',
565 silly registry.get     'content-length': '44465',
565 silly registry.get     'accept-ranges': 'bytes',
565 silly registry.get     age: '67',
565 silly registry.get     'x-served-by': 'cache-v37-ASH, cache-jfk1031-JFK',
565 silly registry.get     'x-cache': 'HIT, HIT',
565 silly registry.get     'x-cache-hits': '2, 1',
565 silly registry.get     'x-timer': 'S1400626499.163766384,VS0,VS1,VE87,VE316751',
565 silly registry.get     vary: 'Accept',
565 silly registry.get     'keep-alive': 'timeout=10, max=43',
565 silly registry.get     connection: 'Keep-Alive' } ]
566 http 304 https://registry.npmjs.org/inquirer
567 silly registry.get cb [ 304,
567 silly registry.get   { date: 'Tue, 20 May 2014 23:00:17 GMT',
567 silly registry.get     server: 'Apache',
567 silly registry.get     via: '1.1 varnish',
567 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:17 GMT',
567 silly registry.get     'cache-control': 'max-age=1',
567 silly registry.get     etag: '"56VGPLTPR7OUGBMB5TNHNPNAV"',
567 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
567 silly registry.get     'x-cache': 'HIT',
567 silly registry.get     'x-cache-hits': '1',
567 silly registry.get     'x-timer': 'S1400626817.519943237,VS0,VE100',
567 silly registry.get     vary: 'Accept',
567 silly registry.get     'content-length': '0',
567 silly registry.get     'keep-alive': 'timeout=10, max=45',
567 silly registry.get     connection: 'Keep-Alive' } ]
568 verbose etag inquirer from cache
569 http 304 https://registry.npmjs.org/insight
570 silly registry.get cb [ 304,
570 silly registry.get   { date: 'Tue, 20 May 2014 23:00:17 GMT',
570 silly registry.get     server: 'Apache',
570 silly registry.get     via: '1.1 varnish',
570 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:18 GMT',
570 silly registry.get     'cache-control': 'max-age=1',
570 silly registry.get     etag: '"EV044IPU0XNAFUMKZDTEADMPN"',
570 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
570 silly registry.get     'x-cache': 'HIT',
570 silly registry.get     'x-cache-hits': '1',
570 silly registry.get     'x-timer': 'S1400626817.966978312,VS0,VE95',
570 silly registry.get     vary: 'Accept',
570 silly registry.get     'content-length': '0',
570 silly registry.get     'keep-alive': 'timeout=10, max=42',
570 silly registry.get     connection: 'Keep-Alive' } ]
571 verbose etag insight from cache
572 verbose url raw chalk
573 verbose url resolving [ 'https://registry.npmjs.org/', './chalk' ]
574 verbose url resolved https://registry.npmjs.org/chalk
575 info trying registry request attempt 1 at 20:00:21
576 verbose etag "8OXNV1HJLE107O11EL6U9AHE4"
577 http GET https://registry.npmjs.org/chalk
578 verbose url raw request
579 verbose url resolving [ 'https://registry.npmjs.org/', './request' ]
580 verbose url resolved https://registry.npmjs.org/request
581 info trying registry request attempt 1 at 20:00:21
582 verbose etag "F24CCFZBRRHRM9QYIIT463SVB"
583 http GET https://registry.npmjs.org/request
584 verbose registry.get async not expired, no request
585 verbose registry.get inquirer not expired, no request
586 http 200 https://registry.npmjs.org/handlebars
587 silly registry.get cb [ 200,
587 silly registry.get   { date: 'Tue, 20 May 2014 23:00:16 GMT',
587 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B)',
587 silly registry.get     etag: '"C22VKCLWZEXO0NISNTPLGLEIV"',
587 silly registry.get     'content-type': 'application/json',
587 silly registry.get     via: '1.1 varnish',
587 silly registry.get     'cache-control': 'max-age=1',
587 silly registry.get     'content-length': '48906',
587 silly registry.get     'accept-ranges': 'bytes',
587 silly registry.get     age: '82',
587 silly registry.get     'x-served-by': 'cache-v36-ASH, cache-jfk1033-JFK',
587 silly registry.get     'x-cache': 'HIT, HIT',
587 silly registry.get     'x-cache-hits': '1, 1',
587 silly registry.get     'x-timer': 'S1400625306.589985371,VS0,VS3,VE4,VE1510400',
587 silly registry.get     vary: 'Accept',
587 silly registry.get     'keep-alive': 'timeout=10, max=42',
587 silly registry.get     connection: 'Keep-Alive' } ]
588 verbose url raw lodash.debounce
589 verbose url resolving [ 'https://registry.npmjs.org/', './lodash.debounce' ]
590 verbose url resolved https://registry.npmjs.org/lodash.debounce
591 info trying registry request attempt 1 at 20:00:21
592 verbose etag "AJ9AHM25PBDQ55M7D2IYDV5KM"
593 http GET https://registry.npmjs.org/lodash.debounce
594 verbose url raw object-assign
595 verbose url resolving [ 'https://registry.npmjs.org/', './object-assign' ]
596 verbose url resolved https://registry.npmjs.org/object-assign
597 info trying registry request attempt 1 at 20:00:21
598 verbose etag "6BQC2FXYR4Q3O2OCKTOL4T7YA"
599 http GET https://registry.npmjs.org/object-assign
600 verbose url raw configstore
601 verbose url resolving [ 'https://registry.npmjs.org/', './configstore' ]
602 verbose url resolved https://registry.npmjs.org/configstore
603 info trying registry request attempt 1 at 20:00:21
604 verbose etag "K4S3ZHWVTDGN895342DJ1DBE"
605 http GET https://registry.npmjs.org/configstore
606 http 304 https://registry.npmjs.org/junk
607 silly registry.get cb [ 304,
607 silly registry.get   { date: 'Tue, 20 May 2014 23:00:18 GMT',
607 silly registry.get     server: 'Apache',
607 silly registry.get     via: '1.1 varnish',
607 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:18 GMT',
607 silly registry.get     'cache-control': 'max-age=1',
607 silly registry.get     etag: '"570K5D8QDMTCRMOHPGBWLK9AD"',
607 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
607 silly registry.get     'x-cache': 'HIT',
607 silly registry.get     'x-cache-hits': '1',
607 silly registry.get     'x-timer': 'S1400626818.853098154,VS0,VE7',
607 silly registry.get     vary: 'Accept',
607 silly registry.get     'content-length': '0',
607 silly registry.get     'keep-alive': 'timeout=10, max=41',
607 silly registry.get     connection: 'Keep-Alive' } ]
608 verbose etag junk from cache
609 http 304 https://registry.npmjs.org/graceful-fs
610 silly registry.get cb [ 304,
610 silly registry.get   { date: 'Tue, 20 May 2014 23:00:18 GMT',
610 silly registry.get     server: 'Apache',
610 silly registry.get     via: '1.1 varnish',
610 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:18 GMT',
610 silly registry.get     'cache-control': 'max-age=1',
610 silly registry.get     etag: '"8QQOCCU264QJY11TWJH4MT2R3"',
610 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
610 silly registry.get     'x-cache': 'HIT',
610 silly registry.get     'x-cache-hits': '1',
610 silly registry.get     'x-timer': 'S1400626818.869060278,VS0,VE103',
610 silly registry.get     vary: 'Accept',
610 silly registry.get     'content-length': '0',
610 silly registry.get     'keep-alive': 'timeout=10, max=41',
610 silly registry.get     connection: 'Keep-Alive' } ]
611 verbose etag graceful-fs from cache
612 http 200 https://registry.npmjs.org/chalk
613 silly registry.get cb [ 200,
613 silly registry.get   { date: 'Tue, 20 May 2014 23:00:19 GMT',
613 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
613 silly registry.get     etag: '"3EM11R11LKNP6S8S1XBC3EV3G"',
613 silly registry.get     'content-type': 'application/json',
613 silly registry.get     via: '1.1 varnish',
613 silly registry.get     'cache-control': 'max-age=1',
613 silly registry.get     'content-length': '12647',
613 silly registry.get     'accept-ranges': 'bytes',
613 silly registry.get     age: '20',
613 silly registry.get     'x-served-by': 'cache-v41-ASH, cache-jfk1031-JFK',
613 silly registry.get     'x-cache': 'HIT, HIT',
613 silly registry.get     'x-cache-hits': '1, 1',
613 silly registry.get     'x-timer': 'S1400602764.104753256,VS0,VS5,VE5,VE24055293',
613 silly registry.get     vary: 'Accept',
613 silly registry.get     'keep-alive': 'timeout=10, max=40',
613 silly registry.get     connection: 'Keep-Alive' } ]
614 http 200 https://registry.npmjs.org/grunt-shell
615 silly registry.get cb [ 200,
615 silly registry.get   { date: 'Tue, 20 May 2014 23:00:18 GMT',
615 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
615 silly registry.get     etag: '"AW78T2O27QEZ766UGSNRGX7Z"',
615 silly registry.get     'content-type': 'application/json',
615 silly registry.get     via: '1.1 varnish',
615 silly registry.get     'cache-control': 'max-age=1',
615 silly registry.get     'content-length': '24974',
615 silly registry.get     'accept-ranges': 'bytes',
615 silly registry.get     age: '1809',
615 silly registry.get     'x-served-by': 'cache-v36-ASH, cache-jfk1026-JFK',
615 silly registry.get     'x-cache': 'HIT, HIT',
615 silly registry.get     'x-cache-hits': '1, 1',
615 silly registry.get     'x-timer': 'S1400471773.190645218,VS0,VS5,VE13,VE155044882',
615 silly registry.get     vary: 'Accept',
615 silly registry.get     'keep-alive': 'timeout=10, max=50',
615 silly registry.get     connection: 'Keep-Alive' } ]
616 http 200 https://registry.npmjs.org/mkdirp
617 silly registry.get cb [ 200,
617 silly registry.get   { date: 'Tue, 20 May 2014 23:00:19 GMT',
617 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
617 silly registry.get     etag: '"ZX76IOCGNQ0Y4AWM9E9SZVM7"',
617 silly registry.get     'content-type': 'application/json',
617 silly registry.get     via: '1.1 varnish',
617 silly registry.get     'cache-control': 'max-age=1',
617 silly registry.get     'content-length': '21281',
617 silly registry.get     'accept-ranges': 'bytes',
617 silly registry.get     age: '71',
617 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-jfk1033-JFK',
617 silly registry.get     'x-cache': 'HIT, HIT',
617 silly registry.get     'x-cache-hits': '1, 1',
617 silly registry.get     'x-timer': 'S1400439303.631739616,VS0,VS4,VE5,VE187515782',
617 silly registry.get     vary: 'Accept',
617 silly registry.get     'keep-alive': 'timeout=10, max=40',
617 silly registry.get     connection: 'Keep-Alive' } ]
618 verbose registry.get chalk not expired, no request
619 verbose url raw strip-ansi
620 verbose url resolving [ 'https://registry.npmjs.org/', './strip-ansi' ]
621 verbose url resolved https://registry.npmjs.org/strip-ansi
622 info trying registry request attempt 1 at 20:00:22
623 verbose etag "CVDZ38WVJNSOQWRR5LCBBYV3T"
624 http GET https://registry.npmjs.org/strip-ansi
625 verbose url raw has-color
626 verbose url resolving [ 'https://registry.npmjs.org/', './has-color' ]
627 verbose url resolved https://registry.npmjs.org/has-color
628 info trying registry request attempt 1 at 20:00:22
629 verbose etag "9ET1M9DE6H0H6XWCWO5IDMRTO"
630 http GET https://registry.npmjs.org/has-color
631 verbose url raw ansi-styles
632 verbose url resolving [ 'https://registry.npmjs.org/', './ansi-styles' ]
633 verbose url resolved https://registry.npmjs.org/ansi-styles
634 info trying registry request attempt 1 at 20:00:22
635 verbose etag "6N15JRJDSIWAFV83ADCX7PIC9"
636 http GET https://registry.npmjs.org/ansi-styles
637 verbose url raw has-color
638 verbose url resolving [ 'https://registry.npmjs.org/', './has-color' ]
639 verbose url resolved https://registry.npmjs.org/has-color
640 info trying registry request attempt 1 at 20:00:22
641 verbose etag "9ET1M9DE6H0H6XWCWO5IDMRTO"
642 http GET https://registry.npmjs.org/has-color
643 verbose url raw ansi-styles
644 verbose url resolving [ 'https://registry.npmjs.org/', './ansi-styles' ]
645 verbose url resolved https://registry.npmjs.org/ansi-styles
646 info trying registry request attempt 1 at 20:00:22
647 verbose etag "6N15JRJDSIWAFV83ADCX7PIC9"
648 http GET https://registry.npmjs.org/ansi-styles
649 verbose url raw strip-ansi
650 verbose url resolving [ 'https://registry.npmjs.org/', './strip-ansi' ]
651 verbose url resolved https://registry.npmjs.org/strip-ansi
652 info trying registry request attempt 1 at 20:00:22
653 verbose etag "CVDZ38WVJNSOQWRR5LCBBYV3T"
654 http GET https://registry.npmjs.org/strip-ansi
655 http 304 https://registry.npmjs.org/mout
656 silly registry.get cb [ 304,
656 silly registry.get   { date: 'Tue, 20 May 2014 23:00:19 GMT',
656 silly registry.get     server: 'Apache',
656 silly registry.get     via: '1.1 varnish',
656 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:19 GMT',
656 silly registry.get     'cache-control': 'max-age=1',
656 silly registry.get     etag: '"EO8H8J6WJ8LMBJBXQLXVENMSZ"',
656 silly registry.get     'x-served-by': 'cache-jfk1026-JFK',
656 silly registry.get     'x-cache': 'HIT',
656 silly registry.get     'x-cache-hits': '1',
656 silly registry.get     'x-timer': 'S1400626819.920779467,VS0,VE7',
656 silly registry.get     vary: 'Accept',
656 silly registry.get     'content-length': '0',
656 silly registry.get     'keep-alive': 'timeout=10, max=49',
656 silly registry.get     connection: 'Keep-Alive' } ]
657 verbose etag mout from cache
658 http 304 https://registry.npmjs.org/lockfile
659 silly registry.get cb [ 304,
659 silly registry.get   { date: 'Tue, 20 May 2014 23:00:19 GMT',
659 silly registry.get     server: 'Apache',
659 silly registry.get     via: '1.1 varnish',
659 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:19 GMT',
659 silly registry.get     'cache-control': 'max-age=1',
659 silly registry.get     etag: '"BE6HUPSNPXI5QOIOUTQKTZG1O"',
659 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
659 silly registry.get     'x-cache': 'HIT',
659 silly registry.get     'x-cache-hits': '1',
659 silly registry.get     'x-timer': 'S1400626819.900510788,VS0,VE79',
659 silly registry.get     vary: 'Accept',
659 silly registry.get     'content-length': '0',
659 silly registry.get     'keep-alive': 'timeout=10, max=39',
659 silly registry.get     connection: 'Keep-Alive' } ]
660 verbose etag lockfile from cache
661 http 304 https://registry.npmjs.org/p-throttler
662 silly registry.get cb [ 304,
662 silly registry.get   { date: 'Tue, 20 May 2014 23:00:20 GMT',
662 silly registry.get     server: 'Apache',
662 silly registry.get     via: '1.1 varnish',
662 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:20 GMT',
662 silly registry.get     'cache-control': 'max-age=1',
662 silly registry.get     etag: '"68WEPGHPQAO4AMIJTX2ILZ86T"',
662 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
662 silly registry.get     'x-cache': 'HIT',
662 silly registry.get     'x-cache-hits': '1',
662 silly registry.get     'x-timer': 'S1400626820.490243435,VS0,VE14',
662 silly registry.get     vary: 'Accept',
662 silly registry.get     'content-length': '0',
662 silly registry.get     'keep-alive': 'timeout=10, max=38',
662 silly registry.get     connection: 'Keep-Alive' } ]
663 verbose etag p-throttler from cache
664 verbose url raw q
665 verbose url resolving [ 'https://registry.npmjs.org/', './q' ]
666 verbose url resolved https://registry.npmjs.org/q
667 info trying registry request attempt 1 at 20:00:23
668 verbose etag "BZBSW861DDQQDA76ALY8BWX4S"
669 http GET https://registry.npmjs.org/q
670 http 200 https://registry.npmjs.org/opn
671 silly registry.get cb [ 200,
671 silly registry.get   { date: 'Tue, 20 May 2014 23:00:20 GMT',
671 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
671 silly registry.get     etag: '"GPG4EHN1YHKA9R6PZZGXU1CX"',
671 silly registry.get     'content-type': 'application/json',
671 silly registry.get     via: '1.1 varnish',
671 silly registry.get     'cache-control': 'max-age=1',
671 silly registry.get     'content-length': '5074',
671 silly registry.get     'accept-ranges': 'bytes',
671 silly registry.get     age: '225',
671 silly registry.get     'x-served-by': 'cache-v44-ASH, cache-jfk1026-JFK',
671 silly registry.get     'x-cache': 'HIT, HIT',
671 silly registry.get     'x-cache-hits': '1, 1',
671 silly registry.get     'x-timer': 'S1400605585.198291779,VS0,VS1,VE8,VE21235309',
671 silly registry.get     vary: 'Accept',
671 silly registry.get     'keep-alive': 'timeout=10, max=48',
671 silly registry.get     connection: 'Keep-Alive' } ]
672 http 304 https://registry.npmjs.org/osenv
673 silly registry.get cb [ 304,
673 silly registry.get   { date: 'Tue, 20 May 2014 23:00:20 GMT',
673 silly registry.get     server: 'Apache',
673 silly registry.get     via: '1.1 varnish',
673 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:20 GMT',
673 silly registry.get     'cache-control': 'max-age=1',
673 silly registry.get     etag: '"7ZZCZDQYWD6OZS7NQ0LLLANNZ"',
673 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
673 silly registry.get     'x-cache': 'HIT',
673 silly registry.get     'x-cache-hits': '1',
673 silly registry.get     'x-timer': 'S1400626820.880748987,VS0,VE7',
673 silly registry.get     vary: 'Accept',
673 silly registry.get     'content-length': '0',
673 silly registry.get     'keep-alive': 'timeout=10, max=37',
673 silly registry.get     connection: 'Keep-Alive' } ]
674 verbose etag osenv from cache
675 http 200 https://registry.npmjs.org/nopt
676 silly registry.get cb [ 200,
676 silly registry.get   { date: 'Tue, 20 May 2014 23:00:21 GMT',
676 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
676 silly registry.get     etag: '"5QLU65DX50UPKFOQALW73JMEO"',
676 silly registry.get     'content-type': 'application/json',
676 silly registry.get     via: '1.1 varnish',
676 silly registry.get     'cache-control': 'max-age=1',
676 silly registry.get     'content-length': '24114',
676 silly registry.get     'accept-ranges': 'bytes',
676 silly registry.get     age: '82',
676 silly registry.get     'x-served-by': 'cache-v44-ASH, cache-jfk1033-JFK',
676 silly registry.get     'x-cache': 'MISS, HIT',
676 silly registry.get     'x-cache-hits': '0, 1',
676 silly registry.get     'x-timer': 'S1400626240.231643915,VS0,VS3,VE19,VE580777',
676 silly registry.get     vary: 'Accept',
676 silly registry.get     'keep-alive': 'timeout=10, max=39',
676 silly registry.get     connection: 'Keep-Alive' } ]
677 verbose registry.get abbrev not expired, no request
678 http 200 https://registry.npmjs.org/mongoose
679 silly registry.get cb [ 200,
679 silly registry.get   { date: 'Tue, 20 May 2014 23:00:11 GMT',
679 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R16B)',
679 silly registry.get     etag: '"AC4LH4C3Y93QUO2KAP71PASFH"',
679 silly registry.get     'content-type': 'application/json',
679 silly registry.get     via: '1.1 varnish',
679 silly registry.get     'cache-control': 'max-age=1',
679 silly registry.get     'content-length': '250681',
679 silly registry.get     'accept-ranges': 'bytes',
679 silly registry.get     age: '512',
679 silly registry.get     'x-served-by': 'cache-v36-ASH, cache-jfk1033-JFK',
679 silly registry.get     'x-cache': 'HIT, HIT',
679 silly registry.get     'x-cache-hits': '1, 1',
679 silly registry.get     'x-timer': 'S1400614604.566383600,VS0,VS1,VE9,VE12207090',
679 silly registry.get     vary: 'Accept',
679 silly registry.get     'keep-alive': 'timeout=10, max=50',
679 silly registry.get     connection: 'Keep-Alive' } ]
680 http 304 https://registry.npmjs.org/is-root
681 silly registry.get cb [ 304,
681 silly registry.get   { date: 'Tue, 20 May 2014 23:00:21 GMT',
681 silly registry.get     server: 'Apache',
681 silly registry.get     via: '1.1 varnish',
681 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:21 GMT',
681 silly registry.get     'cache-control': 'max-age=1',
681 silly registry.get     etag: '"DO5OE6EOI4QAGTOEFMMXUSV4F"',
681 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
681 silly registry.get     'x-cache': 'HIT',
681 silly registry.get     'x-cache-hits': '1',
681 silly registry.get     'x-timer': 'S1400626821.141253710,VS0,VE89',
681 silly registry.get     vary: 'Accept',
681 silly registry.get     'content-length': '0',
681 silly registry.get     'keep-alive': 'timeout=10, max=44',
681 silly registry.get     connection: 'Keep-Alive' } ]
682 verbose etag is-root from cache
683 http 304 https://registry.npmjs.org/q
684 silly registry.get cb [ 304,
684 silly registry.get   { date: 'Tue, 20 May 2014 23:00:21 GMT',
684 silly registry.get     server: 'Apache',
684 silly registry.get     via: '1.1 varnish',
684 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:21 GMT',
684 silly registry.get     'cache-control': 'max-age=1',
684 silly registry.get     etag: '"BZBSW861DDQQDA76ALY8BWX4S"',
684 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
684 silly registry.get     'x-cache': 'HIT',
684 silly registry.get     'x-cache-hits': '1',
684 silly registry.get     'x-timer': 'S1400626821.235508204,VS0,VE14',
684 silly registry.get     vary: 'Accept',
684 silly registry.get     'content-length': '0',
684 silly registry.get     'keep-alive': 'timeout=10, max=36',
684 silly registry.get     connection: 'Keep-Alive' } ]
685 verbose etag q from cache
686 http 304 https://registry.npmjs.org/promptly
687 silly registry.get cb [ 304,
687 silly registry.get   { date: 'Tue, 20 May 2014 23:00:22 GMT',
687 silly registry.get     server: 'Apache',
687 silly registry.get     via: '1.1 varnish',
687 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:22 GMT',
687 silly registry.get     'cache-control': 'max-age=1',
687 silly registry.get     etag: '"7XQ80S52I0TQ5Y1XM3S96X706"',
687 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
687 silly registry.get     'x-cache': 'HIT',
687 silly registry.get     'x-cache-hits': '1',
687 silly registry.get     'x-timer': 'S1400626822.014737368,VS0,VE7',
687 silly registry.get     vary: 'Accept',
687 silly registry.get     'content-length': '0',
687 silly registry.get     'keep-alive': 'timeout=10, max=38',
687 silly registry.get     connection: 'Keep-Alive' } ]
688 verbose etag promptly from cache
689 verbose url raw read
690 verbose url resolving [ 'https://registry.npmjs.org/', './read' ]
691 verbose url resolved https://registry.npmjs.org/read
692 info trying registry request attempt 1 at 20:00:24
693 verbose etag "AX4MIK1433873MQ2X0SOFZUZH"
694 http GET https://registry.npmjs.org/read
695 http 304 https://registry.npmjs.org/request-progress
696 silly registry.get cb [ 304,
696 silly registry.get   { date: 'Tue, 20 May 2014 23:00:22 GMT',
696 silly registry.get     server: 'Apache',
696 silly registry.get     via: '1.1 varnish',
696 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:22 GMT',
696 silly registry.get     'cache-control': 'max-age=1',
696 silly registry.get     etag: '"2WKUQLWDEA3BQ81OQNNS5NV4F"',
696 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
696 silly registry.get     'x-cache': 'HIT',
696 silly registry.get     'x-cache-hits': '1',
696 silly registry.get     'x-timer': 'S1400626822.111808777,VS0,VE15',
696 silly registry.get     vary: 'Accept',
696 silly registry.get     'content-length': '0',
696 silly registry.get     'keep-alive': 'timeout=10, max=49',
696 silly registry.get     connection: 'Keep-Alive' } ]
697 verbose etag request-progress from cache
698 verbose url raw throttleit
699 verbose url resolving [ 'https://registry.npmjs.org/', './throttleit' ]
700 verbose url resolved https://registry.npmjs.org/throttleit
701 info trying registry request attempt 1 at 20:00:25
702 verbose etag "EI7SQXHOA0X2YTNUSS6H1EA2F"
703 http GET https://registry.npmjs.org/throttleit
704 http 304 https://registry.npmjs.org/retry
705 silly registry.get cb [ 304,
705 silly registry.get   { date: 'Tue, 20 May 2014 23:00:22 GMT',
705 silly registry.get     server: 'Apache',
705 silly registry.get     via: '1.1 varnish',
705 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:22 GMT',
705 silly registry.get     'cache-control': 'max-age=1',
705 silly registry.get     etag: '"CYGCHTT54PZV8D99ORYCFYHNQ"',
705 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
705 silly registry.get     'x-cache': 'HIT',
705 silly registry.get     'x-cache-hits': '1',
705 silly registry.get     'x-timer': 'S1400626822.114072323,VS0,VE16',
705 silly registry.get     vary: 'Accept',
705 silly registry.get     'content-length': '0',
705 silly registry.get     'keep-alive': 'timeout=10, max=43',
705 silly registry.get     connection: 'Keep-Alive' } ]
706 verbose etag retry from cache
707 http 304 https://registry.npmjs.org/shell-quote
708 silly registry.get cb [ 304,
708 silly registry.get   { date: 'Tue, 20 May 2014 23:00:22 GMT',
708 silly registry.get     server: 'Apache',
708 silly registry.get     via: '1.1 varnish',
708 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:22 GMT',
708 silly registry.get     'cache-control': 'max-age=1',
708 silly registry.get     etag: '"D29OI0Q1ZFQ5W6G4PFWVENSTE"',
708 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
708 silly registry.get     'x-cache': 'HIT',
708 silly registry.get     'x-cache-hits': '1',
708 silly registry.get     'x-timer': 'S1400626822.360020876,VS0,VE15',
708 silly registry.get     vary: 'Accept',
708 silly registry.get     'content-length': '0',
708 silly registry.get     'keep-alive': 'timeout=10, max=37',
708 silly registry.get     connection: 'Keep-Alive' } ]
709 verbose etag shell-quote from cache
710 verbose url raw jsonify
711 verbose url resolving [ 'https://registry.npmjs.org/', './jsonify' ]
712 verbose url resolved https://registry.npmjs.org/jsonify
713 info trying registry request attempt 1 at 20:00:25
714 verbose etag "7VU8SEPVL9CBI4OPOR1Y6QHHL"
715 http GET https://registry.npmjs.org/jsonify
716 verbose url raw array-filter
717 verbose url resolving [ 'https://registry.npmjs.org/', './array-filter' ]
718 verbose url resolved https://registry.npmjs.org/array-filter
719 info trying registry request attempt 1 at 20:00:25
720 verbose etag "DCUSFFZN443VF2CQG666LWFQY"
721 http GET https://registry.npmjs.org/array-filter
722 verbose url raw array-map
723 verbose url resolving [ 'https://registry.npmjs.org/', './array-map' ]
724 verbose url resolved https://registry.npmjs.org/array-map
725 info trying registry request attempt 1 at 20:00:25
726 verbose etag "3N0D584WC9F0JLXDUAJIMD9T6"
727 http GET https://registry.npmjs.org/array-map
728 verbose url raw array-reduce
729 verbose url resolving [ 'https://registry.npmjs.org/', './array-reduce' ]
730 verbose url resolved https://registry.npmjs.org/array-reduce
731 info trying registry request attempt 1 at 20:00:25
732 verbose etag "4OPNMX9RVV5FOMQLF0OFM7K8I"
733 http GET https://registry.npmjs.org/array-reduce
734 http 304 https://registry.npmjs.org/stringify-object
735 silly registry.get cb [ 304,
735 silly registry.get   { date: 'Tue, 20 May 2014 23:00:22 GMT',
735 silly registry.get     server: 'Apache',
735 silly registry.get     via: '1.1 varnish',
735 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:22 GMT',
735 silly registry.get     'cache-control': 'max-age=1',
735 silly registry.get     etag: '"EAVRKN9SV484EY5XMLJFQ6M7T"',
735 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
735 silly registry.get     'x-cache': 'HIT',
735 silly registry.get     'x-cache-hits': '1',
735 silly registry.get     'x-timer': 'S1400626822.416861534,VS0,VE100',
735 silly registry.get     vary: 'Accept',
735 silly registry.get     'content-length': '0',
735 silly registry.get     'keep-alive': 'timeout=10, max=48',
735 silly registry.get     connection: 'Keep-Alive' } ]
736 verbose etag stringify-object from cache
737 http 304 https://registry.npmjs.org/tar
738 silly registry.get cb [ 304,
738 silly registry.get   { date: 'Tue, 20 May 2014 23:00:22 GMT',
738 silly registry.get     server: 'Apache',
738 silly registry.get     via: '1.1 varnish',
738 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:22 GMT',
738 silly registry.get     'cache-control': 'max-age=1',
738 silly registry.get     etag: '"37OKGFYQ1HCUIWP3DR80PA6U8"',
738 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
738 silly registry.get     'x-cache': 'HIT',
738 silly registry.get     'x-cache-hits': '1',
738 silly registry.get     'x-timer': 'S1400626822.420331478,VS0,VE111',
738 silly registry.get     vary: 'Accept',
738 silly registry.get     'content-length': '0',
738 silly registry.get     'keep-alive': 'timeout=10, max=42',
738 silly registry.get     connection: 'Keep-Alive' } ]
739 verbose etag tar from cache
740 verbose url raw inherits
741 verbose url resolving [ 'https://registry.npmjs.org/', './inherits' ]
742 verbose url resolved https://registry.npmjs.org/inherits
743 info trying registry request attempt 1 at 20:00:25
744 verbose etag "AOGM9R8UHMTA4Q3A77R3Y6L0C"
745 http GET https://registry.npmjs.org/inherits
746 verbose registry.get fstream not expired, no request
747 verbose url raw block-stream
748 verbose url resolving [ 'https://registry.npmjs.org/', './block-stream' ]
749 verbose url resolved https://registry.npmjs.org/block-stream
750 info trying registry request attempt 1 at 20:00:25
751 verbose etag "BESVSEW8U199B9UI369ZXVW8Q"
752 http GET https://registry.npmjs.org/block-stream
753 http 200 https://registry.npmjs.org/rimraf
754 silly registry.get cb [ 200,
754 silly registry.get   { date: 'Tue, 20 May 2014 23:00:22 GMT',
754 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
754 silly registry.get     etag: '"1STEDQ3FCRDH7RYNOV8FGGQ3J"',
754 silly registry.get     'content-type': 'application/json',
754 silly registry.get     via: '1.1 varnish',
754 silly registry.get     'cache-control': 'max-age=1',
754 silly registry.get     'content-length': '32308',
754 silly registry.get     'accept-ranges': 'bytes',
754 silly registry.get     age: '34',
754 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-jfk1031-JFK',
754 silly registry.get     'x-cache': 'HIT, HIT',
754 silly registry.get     'x-cache-hits': '8, 1',
754 silly registry.get     'x-timer': 'S1400626274.549840689,VS0,VS3,VE3,VE547594',
754 silly registry.get     vary: 'Accept',
754 silly registry.get     'keep-alive': 'timeout=10, max=35',
754 silly registry.get     connection: 'Keep-Alive' } ]
755 http 304 https://registry.npmjs.org/which
756 silly registry.get cb [ 304,
756 silly registry.get   { date: 'Tue, 20 May 2014 23:00:22 GMT',
756 silly registry.get     server: 'Apache',
756 silly registry.get     via: '1.1 varnish',
756 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:22 GMT',
756 silly registry.get     'cache-control': 'max-age=1',
756 silly registry.get     etag: '"4U42AUANZD43I26W7W04SHTG3"',
756 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
756 silly registry.get     'x-cache': 'HIT',
756 silly registry.get     'x-cache-hits': '1',
756 silly registry.get     'x-timer': 'S1400626822.943210602,VS0,VE0',
756 silly registry.get     vary: 'Accept',
756 silly registry.get     'content-length': '0',
756 silly registry.get     'keep-alive': 'timeout=10, max=41',
756 silly registry.get     connection: 'Keep-Alive' } ]
757 verbose etag which from cache
758 http 304 https://registry.npmjs.org/tmp
759 silly registry.get cb [ 304,
759 silly registry.get   { date: 'Tue, 20 May 2014 23:00:23 GMT',
759 silly registry.get     server: 'Apache',
759 silly registry.get     via: '1.1 varnish',
759 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:23 GMT',
759 silly registry.get     'cache-control': 'max-age=1',
759 silly registry.get     etag: '"7EEX0B275AFWTKLXBU24JHYBQ"',
759 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
759 silly registry.get     'x-cache': 'HIT',
759 silly registry.get     'x-cache-hits': '1',
759 silly registry.get     'x-timer': 'S1400626823.309743404,VS0,VE100',
759 silly registry.get     vary: 'Accept',
759 silly registry.get     'content-length': '0',
759 silly registry.get     'keep-alive': 'timeout=10, max=34',
759 silly registry.get     connection: 'Keep-Alive' } ]
760 verbose etag tmp from cache
761 http 304 https://registry.npmjs.org/lru-cache
762 silly registry.get cb [ 304,
762 silly registry.get   { date: 'Tue, 20 May 2014 23:00:23 GMT',
762 silly registry.get     server: 'Apache',
762 silly registry.get     via: '1.1 varnish',
762 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:23 GMT',
762 silly registry.get     'cache-control': 'max-age=1',
762 silly registry.get     etag: '"6EAH4E2XKATH9G2WW7G1L4L00"',
762 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
762 silly registry.get     'x-cache': 'HIT',
762 silly registry.get     'x-cache-hits': '1',
762 silly registry.get     'x-timer': 'S1400626823.418366671,VS0,VE7',
762 silly registry.get     vary: 'Accept',
762 silly registry.get     'content-length': '0',
762 silly registry.get     'keep-alive': 'timeout=10, max=40',
762 silly registry.get     connection: 'Keep-Alive' } ]
763 verbose etag lru-cache from cache
764 http 200 https://registry.npmjs.org/semver
765 silly registry.get cb [ 200,
765 silly registry.get   { date: 'Tue, 20 May 2014 23:00:22 GMT',
765 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
765 silly registry.get     etag: '"5T6MUUO9XMCIT4W783K8VECVS"',
765 silly registry.get     'content-type': 'application/json',
765 silly registry.get     via: '1.1 varnish',
765 silly registry.get     'cache-control': 'max-age=1',
765 silly registry.get     'content-length': '37161',
765 silly registry.get     'accept-ranges': 'bytes',
765 silly registry.get     age: '105',
765 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-jfk1033-JFK',
765 silly registry.get     'x-cache': 'HIT, HIT',
765 silly registry.get     'x-cache-hits': '1, 1',
765 silly registry.get     'x-timer': 'S1400626514.533052921,VS0,VS4,VE129,VE308240',
765 silly registry.get     vary: 'Accept',
765 silly registry.get     'keep-alive': 'timeout=10, max=36',
765 silly registry.get     connection: 'Keep-Alive' } ]
766 http 200 https://registry.npmjs.org/request
767 silly registry.get cb [ 200,
767 silly registry.get   { date: 'Tue, 20 May 2014 23:00:20 GMT',
767 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
767 silly registry.get     etag: '"4O75K7KOXW0FZN04B45251FQC"',
767 silly registry.get     'content-type': 'application/json',
767 silly registry.get     via: '1.1 varnish',
767 silly registry.get     'cache-control': 'max-age=1',
767 silly registry.get     'content-length': '87619',
767 silly registry.get     'accept-ranges': 'bytes',
767 silly registry.get     age: '18',
767 silly registry.get     'x-served-by': 'cache-v37-ASH, cache-jfk1026-JFK',
767 silly registry.get     'x-cache': 'HIT, HIT',
767 silly registry.get     'x-cache-hits': '1, 1',
767 silly registry.get     'x-timer': 'S1400612960.188897371,VS0,VS3,VE4,VE13860742',
767 silly registry.get     vary: 'Accept',
767 silly registry.get     'keep-alive': 'timeout=10, max=47',
767 silly registry.get     connection: 'Keep-Alive' } ]
768 http 200 https://registry.npmjs.org/update-notifier
769 silly registry.get cb [ 200,
769 silly registry.get   { date: 'Tue, 20 May 2014 23:00:23 GMT',
769 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
769 silly registry.get     etag: '"6XCEVSCY3KNVE2QGOECMW87MB"',
769 silly registry.get     'content-type': 'application/json',
769 silly registry.get     via: '1.1 varnish',
769 silly registry.get     'cache-control': 'max-age=1',
769 silly registry.get     'content-length': '18993',
769 silly registry.get     'accept-ranges': 'bytes',
769 silly registry.get     age: '9',
769 silly registry.get     'x-served-by': 'cache-v36-ASH, cache-jfk1033-JFK',
769 silly registry.get     'x-cache': 'HIT, HIT',
769 silly registry.get     'x-cache-hits': '1, 1',
769 silly registry.get     'x-timer': 'S1400609802.708537102,VS0,VS2,VE2,VE17020318',
769 silly registry.get     vary: 'Accept',
769 silly registry.get     'keep-alive': 'timeout=10, max=47',
769 silly registry.get     connection: 'Keep-Alive' } ]
770 http 304 https://registry.npmjs.org/decompress-zip
771 silly registry.get cb [ 304,
771 silly registry.get   { date: 'Tue, 20 May 2014 23:00:23 GMT',
771 silly registry.get     server: 'Apache',
771 silly registry.get     via: '1.1 varnish',
771 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:23 GMT',
771 silly registry.get     'cache-control': 'max-age=1',
771 silly registry.get     etag: '"60UOKSHAYZ2UY4T6ADITWKD28"',
771 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
771 silly registry.get     'x-cache': 'HIT',
771 silly registry.get     'x-cache-hits': '1',
771 silly registry.get     'x-timer': 'S1400626823.883790016,VS0,VE89',
771 silly registry.get     vary: 'Accept',
771 silly registry.get     'content-length': '0',
771 silly registry.get     'keep-alive': 'timeout=10, max=33',
771 silly registry.get     connection: 'Keep-Alive' } ]
772 verbose etag decompress-zip from cache
773 verbose registry.get q not expired, no request
774 verbose registry.get nopt not expired, no request
775 verbose registry.get request not expired, no request
776 verbose url raw configstore
777 verbose url resolving [ 'https://registry.npmjs.org/', './configstore' ]
778 verbose url resolved https://registry.npmjs.org/configstore
779 info trying registry request attempt 1 at 20:00:27
780 verbose etag "K4S3ZHWVTDGN895342DJ1DBE"
781 http GET https://registry.npmjs.org/configstore
782 verbose registry.get semver not expired, no request
783 verbose registry.get chalk not expired, no request
784 verbose url raw mkpath
785 verbose url resolving [ 'https://registry.npmjs.org/', './mkpath' ]
786 verbose url resolved https://registry.npmjs.org/mkpath
787 info trying registry request attempt 1 at 20:00:27
788 verbose etag "9C1KGI3NMVOZQVIMBIFKTPDH7"
789 http GET https://registry.npmjs.org/mkpath
790 verbose url raw touch
791 verbose url resolving [ 'https://registry.npmjs.org/', './touch' ]
792 verbose url resolved https://registry.npmjs.org/touch
793 info trying registry request attempt 1 at 20:00:27
794 verbose etag "A3OMAEAXRI67QHKVBBOI55TK7"
795 http GET https://registry.npmjs.org/touch
796 verbose url raw readable-stream
797 verbose url resolving [ 'https://registry.npmjs.org/', './readable-stream' ]
798 verbose url resolved https://registry.npmjs.org/readable-stream
799 info trying registry request attempt 1 at 20:00:27
800 verbose etag "5UZ4MZKRTA0PFGI1SEPEJ33OJ"
801 http GET https://registry.npmjs.org/readable-stream
802 verbose url raw binary
803 verbose url resolving [ 'https://registry.npmjs.org/', './binary' ]
804 verbose url resolved https://registry.npmjs.org/binary
805 info trying registry request attempt 1 at 20:00:27
806 verbose etag "24HH9N2I0O9ABCX5KPVESNSY0"
807 http GET https://registry.npmjs.org/binary
808 http 200 https://registry.npmjs.org/transformers
809 silly registry.get cb [ 200,
809 silly registry.get   { date: 'Tue, 20 May 2014 23:00:23 GMT',
809 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
809 silly registry.get     etag: '"EJHDDM1TKO3FLRV315ZGMCFXQ"',
809 silly registry.get     'content-type': 'application/json',
809 silly registry.get     via: '1.1 varnish',
809 silly registry.get     'cache-control': 'max-age=1',
809 silly registry.get     'content-length': '36720',
809 silly registry.get     'accept-ranges': 'bytes',
809 silly registry.get     age: '475',
809 silly registry.get     'x-served-by': 'cache-v36-ASH, cache-jfk1022-JFK',
809 silly registry.get     'x-cache': 'MISS, MISS',
809 silly registry.get     'x-cache-hits': '0, 0',
809 silly registry.get     'x-timer': 'S1400622028.176635981,VS0,VS4,VE11,VE4795815',
809 silly registry.get     vary: 'Accept',
809 silly registry.get     'keep-alive': 'timeout=10, max=39',
809 silly registry.get     connection: 'Keep-Alive' } ]
810 http 200 https://registry.npmjs.org/with
811 silly registry.get cb [ 200,
811 silly registry.get   { date: 'Tue, 20 May 2014 23:00:25 GMT',
811 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
811 silly registry.get     etag: '"BHE9C9SB8R9PUPIIMBY7HBZRD"',
811 silly registry.get     'content-type': 'application/json',
811 silly registry.get     via: '1.1 varnish',
811 silly registry.get     'cache-control': 'max-age=1',
811 silly registry.get     'content-length': '10259',
811 silly registry.get     'accept-ranges': 'bytes',
811 silly registry.get     age: '743',
811 silly registry.get     'x-served-by': 'cache-v43-ASH, cache-jfk1033-JFK',
811 silly registry.get     'x-cache': 'HIT, HIT',
811 silly registry.get     'x-cache-hits': '1, 1',
811 silly registry.get     'x-timer': 'S1400615288.599335670,VS0,VS4,VE80,VE11537132',
811 silly registry.get     vary: 'Accept',
811 silly registry.get     'keep-alive': 'timeout=10, max=46',
811 silly registry.get     connection: 'Keep-Alive' } ]
812 verbose url raw uglify-js
813 verbose url resolving [ 'https://registry.npmjs.org/', './uglify-js' ]
814 verbose url resolved https://registry.npmjs.org/uglify-js
815 info trying registry request attempt 1 at 20:00:29
816 verbose etag "9WR1IQPRT7JLHFFQRLPBGOMCQ"
817 http GET https://registry.npmjs.org/uglify-js
818 http 200 https://registry.npmjs.org/character-parser
819 silly registry.get cb [ 200,
819 silly registry.get   { date: 'Tue, 20 May 2014 23:00:24 GMT',
819 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
819 silly registry.get     etag: '"EO0MKTJ5JCATQWHNMG90U0JPN"',
819 silly registry.get     'content-type': 'application/json',
819 silly registry.get     via: '1.1 varnish',
819 silly registry.get     'cache-control': 'max-age=1',
819 silly registry.get     'content-length': '45584',
819 silly registry.get     'accept-ranges': 'bytes',
819 silly registry.get     age: '15',
819 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-jfk1033-JFK',
819 silly registry.get     'x-cache': 'HIT, MISS',
819 silly registry.get     'x-cache-hits': '1, 0',
819 silly registry.get     'x-timer': 'S1400626274.931437254,VS0,VS4,VE16,VE549162',
819 silly registry.get     vary: 'Accept',
819 silly registry.get     'keep-alive': 'timeout=10, max=35',
819 silly registry.get     connection: 'Keep-Alive' } ]
820 http 200 https://registry.npmjs.org/mkdirp
821 silly registry.get cb [ 200,
821 silly registry.get   { date: 'Tue, 20 May 2014 23:00:25 GMT',
821 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
821 silly registry.get     etag: '"ZX76IOCGNQ0Y4AWM9E9SZVM7"',
821 silly registry.get     'content-type': 'application/json',
821 silly registry.get     via: '1.1 varnish',
821 silly registry.get     'cache-control': 'max-age=1',
821 silly registry.get     'content-length': '21281',
821 silly registry.get     'accept-ranges': 'bytes',
821 silly registry.get     age: '78',
821 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-jfk1022-JFK',
821 silly registry.get     'x-cache': 'HIT, HIT',
821 silly registry.get     'x-cache-hits': '1, 1',
821 silly registry.get     'x-timer': 'S1400439303.631739616,VS0,VS4,VE5,VE187522248',
821 silly registry.get     vary: 'Accept',
821 silly registry.get     'keep-alive': 'timeout=10, max=38',
821 silly registry.get     connection: 'Keep-Alive' } ]
822 http 200 https://registry.npmjs.org/constantinople
823 silly registry.get cb [ 200,
823 silly registry.get   { date: 'Tue, 20 May 2014 23:00:24 GMT',
823 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
823 silly registry.get     etag: '"F1LXZXTQ3LVNGHRP2HFN34FF0"',
823 silly registry.get     'content-type': 'application/json',
823 silly registry.get     via: '1.1 varnish',
823 silly registry.get     'cache-control': 'max-age=1',
823 silly registry.get     'content-length': '6489',
823 silly registry.get     'accept-ranges': 'bytes',
823 silly registry.get     age: '225',
823 silly registry.get     'x-served-by': 'cache-v44-ASH, cache-jfk1031-JFK',
823 silly registry.get     'x-cache': 'HIT, HIT',
823 silly registry.get     'x-cache-hits': '1, 1',
823 silly registry.get     'x-timer': 'S1400606782.487235785,VS0,VS4,VE102,VE20042264',
823 silly registry.get     vary: 'Accept',
823 silly registry.get     'keep-alive': 'timeout=10, max=32',
823 silly registry.get     connection: 'Keep-Alive' } ]
824 verbose url raw uglify-js
825 verbose url resolving [ 'https://registry.npmjs.org/', './uglify-js' ]
826 verbose url resolved https://registry.npmjs.org/uglify-js
827 info trying registry request attempt 1 at 20:00:29
828 verbose etag "9WR1IQPRT7JLHFFQRLPBGOMCQ"
829 http GET https://registry.npmjs.org/uglify-js
830 http 200 https://registry.npmjs.org/commander
831 silly registry.get cb [ 200,
831 silly registry.get   { date: 'Tue, 20 May 2014 23:00:26 GMT',
831 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
831 silly registry.get     etag: '"9H3SEM0K3HGUWVNL406V8YH40"',
831 silly registry.get     'content-type': 'application/json',
831 silly registry.get     via: '1.1 varnish',
831 silly registry.get     'cache-control': 'max-age=1',
831 silly registry.get     'content-length': '39274',
831 silly registry.get     'accept-ranges': 'bytes',
831 silly registry.get     age: '3',
831 silly registry.get     'x-served-by': 'cache-v43-ASH, cache-jfk1033-JFK',
831 silly registry.get     'x-cache': 'HIT, HIT',
831 silly registry.get     'x-cache-hits': '2, 1',
831 silly registry.get     'x-timer': 'S1400626150.879265070,VS0,VS0,VE0,VE675370',
831 silly registry.get     vary: 'Accept',
831 silly registry.get     'keep-alive': 'timeout=10, max=45',
831 silly registry.get     connection: 'Keep-Alive' } ]
832 http 200 https://registry.npmjs.org/resolve
833 silly registry.get cb [ 200,
833 silly registry.get   { date: 'Tue, 20 May 2014 23:00:26 GMT',
833 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
833 silly registry.get     etag: '"EBLF8PWL3LHCP6FDF5SA44F6C"',
833 silly registry.get     'content-type': 'application/json',
833 silly registry.get     via: '1.1 varnish',
833 silly registry.get     'cache-control': 'max-age=1',
833 silly registry.get     'content-length': '31625',
833 silly registry.get     'accept-ranges': 'bytes',
833 silly registry.get     age: '3',
833 silly registry.get     'x-served-by': 'cache-v36-ASH, cache-jfk1022-JFK',
833 silly registry.get     'x-cache': 'HIT, HIT',
833 silly registry.get     'x-cache-hits': '1, 1',
833 silly registry.get     'x-timer': 'S1400623297.506890535,VS0,VS1,VE93,VE3529170',
833 silly registry.get     vary: 'Accept',
833 silly registry.get     'keep-alive': 'timeout=10, max=37',
833 silly registry.get     connection: 'Keep-Alive' } ]
834 http 200 https://registry.npmjs.org/nopt
835 silly registry.get cb [ 200,
835 silly registry.get   { date: 'Tue, 20 May 2014 23:00:26 GMT',
835 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
835 silly registry.get     etag: '"5QLU65DX50UPKFOQALW73JMEO"',
835 silly registry.get     'content-type': 'application/json',
835 silly registry.get     via: '1.1 varnish',
835 silly registry.get     'cache-control': 'max-age=1',
835 silly registry.get     'content-length': '24114',
835 silly registry.get     'accept-ranges': 'bytes',
835 silly registry.get     age: '87',
835 silly registry.get     'x-served-by': 'cache-v44-ASH, cache-jfk1033-JFK',
835 silly registry.get     'x-cache': 'MISS, HIT',
835 silly registry.get     'x-cache-hits': '0, 1',
835 silly registry.get     'x-timer': 'S1400626240.231643915,VS0,VS3,VE19,VE586200',
835 silly registry.get     vary: 'Accept',
835 silly registry.get     'keep-alive': 'timeout=10, max=34',
835 silly registry.get     connection: 'Keep-Alive' } ]
836 http 304 https://registry.npmjs.org/findup-sync
837 silly registry.get cb [ 304,
837 silly registry.get   { date: 'Tue, 20 May 2014 23:00:27 GMT',
837 silly registry.get     server: 'Apache',
837 silly registry.get     via: '1.1 varnish',
837 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:27 GMT',
837 silly registry.get     'cache-control': 'max-age=1',
837 silly registry.get     etag: '"A5GURQYFPZTMB7CQMGUCB2RJ6"',
837 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
837 silly registry.get     'x-cache': 'HIT',
837 silly registry.get     'x-cache-hits': '1',
837 silly registry.get     'x-timer': 'S1400626827.281790972,VS0,VE7',
837 silly registry.get     vary: 'Accept',
837 silly registry.get     'content-length': '0',
837 silly registry.get     'keep-alive': 'timeout=10, max=31',
837 silly registry.get     connection: 'Keep-Alive' } ]
838 verbose etag findup-sync from cache
839 http 200 https://registry.npmjs.org/noptify
840 silly registry.get cb [ 200,
840 silly registry.get   { date: 'Tue, 20 May 2014 23:00:27 GMT',
840 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
840 silly registry.get     etag: '"409IZH97DDXX0Y1ZEYO3NQ1TU"',
840 silly registry.get     'content-type': 'application/json',
840 silly registry.get     via: '1.1 varnish',
840 silly registry.get     'cache-control': 'max-age=1',
840 silly registry.get     'content-length': '10118',
840 silly registry.get     'accept-ranges': 'bytes',
840 silly registry.get     age: '96',
840 silly registry.get     'x-served-by': 'cache-v37-ASH, cache-jfk1033-JFK',
840 silly registry.get     'x-cache': 'HIT, HIT',
840 silly registry.get     'x-cache-hits': '1, 1',
840 silly registry.get     'x-timer': 'S1400480189.829568863,VS0,VS5,VE102,VE146637463',
840 silly registry.get     vary: 'Accept',
840 silly registry.get     'keep-alive': 'timeout=10, max=44',
840 silly registry.get     connection: 'Keep-Alive' } ]
841 verbose url raw glob
842 verbose url resolving [ 'https://registry.npmjs.org/', './glob' ]
843 verbose url resolved https://registry.npmjs.org/glob
844 info trying registry request attempt 1 at 20:00:30
845 verbose etag "2CE79VLA7I89QN6CASW442BU7"
846 http GET https://registry.npmjs.org/glob
847 verbose url raw lodash
848 verbose url resolving [ 'https://registry.npmjs.org/', './lodash' ]
849 verbose url resolved https://registry.npmjs.org/lodash
850 info trying registry request attempt 1 at 20:00:30
851 verbose etag "7Z7E8QMEXQNF34B78JE7J9QTN"
852 http GET https://registry.npmjs.org/lodash
853 verbose registry.get nopt not expired, no request
854 http 304 https://registry.npmjs.org/graceful-fs
855 silly registry.get cb [ 304,
855 silly registry.get   { date: 'Tue, 20 May 2014 23:00:27 GMT',
855 silly registry.get     server: 'Apache',
855 silly registry.get     via: '1.1 varnish',
855 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:27 GMT',
855 silly registry.get     'cache-control': 'max-age=1',
855 silly registry.get     etag: '"8QQOCCU264QJY11TWJH4MT2R3"',
855 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
855 silly registry.get     'x-cache': 'HIT',
855 silly registry.get     'x-cache-hits': '1',
855 silly registry.get     'x-timer': 'S1400626827.645553589,VS0,VE1',
855 silly registry.get     vary: 'Accept',
855 silly registry.get     'content-length': '0',
855 silly registry.get     'keep-alive': 'timeout=10, max=43',
855 silly registry.get     connection: 'Keep-Alive' } ]
856 verbose etag graceful-fs from cache
857 http 200 https://registry.npmjs.org/debug
858 silly registry.get cb [ 200,
858 silly registry.get   { date: 'Tue, 20 May 2014 23:00:27 GMT',
858 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
858 silly registry.get     etag: '"C60JRWWG62QOUCBYQ778EYHBU"',
858 silly registry.get     'content-type': 'application/json',
858 silly registry.get     via: '1.1 varnish',
858 silly registry.get     'cache-control': 'max-age=1',
858 silly registry.get     'content-length': '17644',
858 silly registry.get     'accept-ranges': 'bytes',
858 silly registry.get     age: '92',
858 silly registry.get     'x-served-by': 'cache-v36-ASH, cache-jfk1033-JFK',
858 silly registry.get     'x-cache': 'HIT, HIT',
858 silly registry.get     'x-cache-hits': '1, 1',
858 silly registry.get     'x-timer': 'S1400493091.438353539,VS0,VS3,VE3,VE133736040',
858 silly registry.get     vary: 'Accept',
858 silly registry.get     'keep-alive': 'timeout=10, max=33',
858 silly registry.get     connection: 'Keep-Alive' } ]
859 http 200 https://registry.npmjs.org/monocle
860 silly registry.get cb [ 200,
860 silly registry.get   { date: 'Tue, 20 May 2014 23:00:24 GMT',
860 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
860 silly registry.get     etag: '"7DYXY8QEHI259N2SOGW75EJJG"',
860 silly registry.get     'content-type': 'application/json',
860 silly registry.get     via: '1.1 varnish',
860 silly registry.get     'cache-control': 'max-age=1',
860 silly registry.get     'content-length': '45798',
860 silly registry.get     'accept-ranges': 'bytes',
860 silly registry.get     age: '523',
860 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-jfk1026-JFK',
860 silly registry.get     'x-cache': 'HIT, HIT',
860 silly registry.get     'x-cache-hits': '1, 1',
860 silly registry.get     'x-timer': 'S1400486601.999010086,VS0,VS5,VE11,VE140222399',
860 silly registry.get     vary: 'Accept',
860 silly registry.get     'keep-alive': 'timeout=10, max=46',
860 silly registry.get     connection: 'Keep-Alive' } ]
861 verbose url raw readdirp
862 verbose url resolving [ 'https://registry.npmjs.org/', './readdirp' ]
863 verbose url resolved https://registry.npmjs.org/readdirp
864 info trying registry request attempt 1 at 20:00:30
865 http GET https://registry.npmjs.org/readdirp
866 http 304 https://registry.npmjs.org/mout
867 silly registry.get cb [ 304,
867 silly registry.get   { date: 'Tue, 20 May 2014 23:00:28 GMT',
867 silly registry.get     server: 'Apache',
867 silly registry.get     via: '1.1 varnish',
867 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:28 GMT',
867 silly registry.get     'cache-control': 'max-age=1',
867 silly registry.get     etag: '"EO8H8J6WJ8LMBJBXQLXVENMSZ"',
867 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
867 silly registry.get     'x-cache': 'HIT',
867 silly registry.get     'x-cache-hits': '1',
867 silly registry.get     'x-timer': 'S1400626828.299276352,VS0,VE100',
867 silly registry.get     vary: 'Accept',
867 silly registry.get     'content-length': '0',
867 silly registry.get     'keep-alive': 'timeout=10, max=42',
867 silly registry.get     connection: 'Keep-Alive' } ]
868 verbose etag mout from cache
869 http 200 https://registry.npmjs.org/qs
870 silly registry.get cb [ 200,
870 silly registry.get   { date: 'Tue, 20 May 2014 23:00:27 GMT',
870 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
870 silly registry.get     etag: '"EY4LXYYQ4LWO235OEZP0WY4OH"',
870 silly registry.get     'content-type': 'application/json',
870 silly registry.get     via: '1.1 varnish',
870 silly registry.get     'cache-control': 'max-age=1',
870 silly registry.get     'content-length': '53327',
870 silly registry.get     'accept-ranges': 'bytes',
870 silly registry.get     age: '31',
870 silly registry.get     'x-served-by': 'cache-v43-ASH, cache-jfk1022-JFK',
870 silly registry.get     'x-cache': 'HIT, HIT',
870 silly registry.get     'x-cache-hits': '3, 1',
870 silly registry.get     'x-timer': 'S1400571973.362062693,VS0,VS5,VE5,VE54854082',
870 silly registry.get     vary: 'Accept',
870 silly registry.get     'keep-alive': 'timeout=10, max=36',
870 silly registry.get     connection: 'Keep-Alive' } ]
871 http 304 https://registry.npmjs.org/graceful-fs
872 silly registry.get cb [ 304,
872 silly registry.get   { date: 'Tue, 20 May 2014 23:00:28 GMT',
872 silly registry.get     server: 'Apache',
872 silly registry.get     via: '1.1 varnish',
872 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:28 GMT',
872 silly registry.get     'cache-control': 'max-age=1',
872 silly registry.get     etag: '"8QQOCCU264QJY11TWJH4MT2R3"',
872 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
872 silly registry.get     'x-cache': 'HIT',
872 silly registry.get     'x-cache-hits': '1',
872 silly registry.get     'x-timer': 'S1400626828.862808704,VS0,VE0',
872 silly registry.get     vary: 'Accept',
872 silly registry.get     'content-length': '0',
872 silly registry.get     'keep-alive': 'timeout=10, max=41',
872 silly registry.get     connection: 'Keep-Alive' } ]
873 verbose etag graceful-fs from cache
874 http 304 https://registry.npmjs.org/faye-websocket
875 silly registry.get cb [ 304,
875 silly registry.get   { date: 'Tue, 20 May 2014 23:00:28 GMT',
875 silly registry.get     server: 'Apache',
875 silly registry.get     via: '1.1 varnish',
875 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:28 GMT',
875 silly registry.get     'cache-control': 'max-age=1',
875 silly registry.get     etag: '"9VQZL6Y7ZU0EIUH7VJ2YSDQC2"',
875 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
875 silly registry.get     'x-cache': 'HIT',
875 silly registry.get     'x-cache-hits': '1',
875 silly registry.get     'x-timer': 'S1400626828.847302914,VS0,VE101',
875 silly registry.get     vary: 'Accept',
875 silly registry.get     'content-length': '0',
875 silly registry.get     'keep-alive': 'timeout=10, max=30',
875 silly registry.get     connection: 'Keep-Alive' } ]
876 verbose etag faye-websocket from cache
877 http 304 https://registry.npmjs.org/intersect
878 silly registry.get cb [ 304,
878 silly registry.get   { date: 'Tue, 20 May 2014 23:00:29 GMT',
878 silly registry.get     server: 'Apache',
878 silly registry.get     via: '1.1 varnish',
878 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:29 GMT',
878 silly registry.get     'cache-control': 'max-age=1',
878 silly registry.get     etag: '"5INY0JE2N5WN8SQB3QT1L04DP"',
878 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
878 silly registry.get     'x-cache': 'HIT',
878 silly registry.get     'x-cache-hits': '1',
878 silly registry.get     'x-timer': 'S1400626829.010493755,VS0,VE8',
878 silly registry.get     vary: 'Accept',
878 silly registry.get     'content-length': '0',
878 silly registry.get     'keep-alive': 'timeout=10, max=35',
878 silly registry.get     connection: 'Keep-Alive' } ]
879 verbose etag intersect from cache
880 http 304 https://registry.npmjs.org/lru-cache
881 silly registry.get cb [ 304,
881 silly registry.get   { date: 'Tue, 20 May 2014 23:00:29 GMT',
881 silly registry.get     server: 'Apache',
881 silly registry.get     via: '1.1 varnish',
881 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:29 GMT',
881 silly registry.get     'cache-control': 'max-age=1',
881 silly registry.get     etag: '"6EAH4E2XKATH9G2WW7G1L4L00"',
881 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
881 silly registry.get     'x-cache': 'HIT',
881 silly registry.get     'x-cache-hits': '1',
881 silly registry.get     'x-timer': 'S1400626829.533904791,VS0,VE7',
881 silly registry.get     vary: 'Accept',
881 silly registry.get     'content-length': '0',
881 silly registry.get     'keep-alive': 'timeout=10, max=34',
881 silly registry.get     connection: 'Keep-Alive' } ]
882 verbose etag lru-cache from cache
883 http 304 https://registry.npmjs.org/graceful-fs
884 silly registry.get cb [ 304,
884 silly registry.get   { date: 'Tue, 20 May 2014 23:00:29 GMT',
884 silly registry.get     server: 'Apache',
884 silly registry.get     via: '1.1 varnish',
884 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:29 GMT',
884 silly registry.get     'cache-control': 'max-age=1',
884 silly registry.get     etag: '"8QQOCCU264QJY11TWJH4MT2R3"',
884 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
884 silly registry.get     'x-cache': 'HIT',
884 silly registry.get     'x-cache-hits': '1',
884 silly registry.get     'x-timer': 'S1400626829.532403469,VS0,VE107',
884 silly registry.get     vary: 'Accept',
884 silly registry.get     'content-length': '0',
884 silly registry.get     'keep-alive': 'timeout=10, max=29',
884 silly registry.get     connection: 'Keep-Alive' } ]
885 verbose etag graceful-fs from cache
886 http 304 https://registry.npmjs.org/deep-extend
887 silly registry.get cb [ 304,
887 silly registry.get   { date: 'Tue, 20 May 2014 23:00:30 GMT',
887 silly registry.get     server: 'Apache',
887 silly registry.get     via: '1.1 varnish',
887 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:30 GMT',
887 silly registry.get     'cache-control': 'max-age=1',
887 silly registry.get     etag: '"3NUAYLIHX3SYZSUOZY9VQBTUV"',
887 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
887 silly registry.get     'x-cache': 'HIT',
887 silly registry.get     'x-cache-hits': '1',
887 silly registry.get     'x-timer': 'S1400626830.455853224,VS0,VE100',
887 silly registry.get     vary: 'Accept',
887 silly registry.get     'content-length': '0',
887 silly registry.get     'keep-alive': 'timeout=10, max=40',
887 silly registry.get     connection: 'Keep-Alive' } ]
888 verbose etag deep-extend from cache
889 http 304 https://registry.npmjs.org/osenv
890 silly registry.get cb [ 304,
890 silly registry.get   { date: 'Tue, 20 May 2014 23:00:31 GMT',
890 silly registry.get     server: 'Apache',
890 silly registry.get     via: '1.1 varnish',
890 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:31 GMT',
890 silly registry.get     'cache-control': 'max-age=1',
890 silly registry.get     etag: '"7ZZCZDQYWD6OZS7NQ0LLLANNZ"',
890 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
890 silly registry.get     'x-cache': 'HIT',
890 silly registry.get     'x-cache-hits': '1',
890 silly registry.get     'x-timer': 'S1400626831.337225676,VS0,VE96',
890 silly registry.get     vary: 'Accept',
890 silly registry.get     'content-length': '0',
890 silly registry.get     'keep-alive': 'timeout=10, max=32',
890 silly registry.get     connection: 'Keep-Alive' } ]
891 verbose etag osenv from cache
892 http 200 https://registry.npmjs.org/optimist
893 silly registry.get cb [ 200,
893 silly registry.get   { date: 'Tue, 20 May 2014 23:00:28 GMT',
893 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
893 silly registry.get     etag: '"1IKU6GRZMZDCQ2MB3C2XUCU7G"',
893 silly registry.get     'content-type': 'application/json',
893 silly registry.get     via: '1.1 varnish',
893 silly registry.get     'cache-control': 'max-age=1',
893 silly registry.get     'content-length': '47719',
893 silly registry.get     'accept-ranges': 'bytes',
893 silly registry.get     age: '23',
893 silly registry.get     'x-served-by': 'cache-v36-ASH, cache-jfk1026-JFK',
893 silly registry.get     'x-cache': 'HIT, HIT',
893 silly registry.get     'x-cache-hits': '1, 1',
893 silly registry.get     'x-timer': 'S1400623323.757251740,VS0,VS3,VE54,VE3504673',
893 silly registry.get     vary: 'Accept',
893 silly registry.get     'keep-alive': 'timeout=10, max=45',
893 silly registry.get     connection: 'Keep-Alive' } ]
894 verbose url raw wordwrap
895 verbose url resolving [ 'https://registry.npmjs.org/', './wordwrap' ]
896 verbose url resolved https://registry.npmjs.org/wordwrap
897 info trying registry request attempt 1 at 20:00:35
898 verbose etag "6GUW1CYLCM04DMNSMK3F17IKN"
899 http GET https://registry.npmjs.org/wordwrap
900 verbose url raw minimist
901 verbose url resolving [ 'https://registry.npmjs.org/', './minimist' ]
902 verbose url resolved https://registry.npmjs.org/minimist
903 info trying registry request attempt 1 at 20:00:35
904 verbose etag "5J3KWBXP1E8UCX1J7Z4HWPBNS"
905 http GET https://registry.npmjs.org/minimist
906 http 304 https://registry.npmjs.org/request-replay
907 silly registry.get cb [ 304,
907 silly registry.get   { date: 'Tue, 20 May 2014 23:00:33 GMT',
907 silly registry.get     server: 'Apache',
907 silly registry.get     via: '1.1 varnish',
907 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:33 GMT',
907 silly registry.get     'cache-control': 'max-age=1',
907 silly registry.get     etag: '"801UYDWZI3UDCQRNWELW4QE19"',
907 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
907 silly registry.get     'x-cache': 'HIT',
907 silly registry.get     'x-cache-hits': '1',
907 silly registry.get     'x-timer': 'S1400626833.040029287,VS0,VE16',
907 silly registry.get     vary: 'Accept',
907 silly registry.get     'content-length': '0',
907 silly registry.get     'keep-alive': 'timeout=10, max=31',
907 silly registry.get     connection: 'Keep-Alive' } ]
908 verbose etag request-replay from cache
909 http 200 https://registry.npmjs.org/rimraf
910 silly registry.get cb [ 200,
910 silly registry.get   { date: 'Tue, 20 May 2014 23:00:30 GMT',
910 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
910 silly registry.get     etag: '"1STEDQ3FCRDH7RYNOV8FGGQ3J"',
910 silly registry.get     'content-type': 'application/json',
910 silly registry.get     via: '1.1 varnish',
910 silly registry.get     'cache-control': 'max-age=1',
910 silly registry.get     'content-length': '32308',
910 silly registry.get     'accept-ranges': 'bytes',
910 silly registry.get     age: '42',
910 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-jfk1031-JFK',
910 silly registry.get     'x-cache': 'HIT, HIT',
910 silly registry.get     'x-cache-hits': '8, 1',
910 silly registry.get     'x-timer': 'S1400626274.549840689,VS0,VS3,VE3,VE555492',
910 silly registry.get     vary: 'Accept',
910 silly registry.get     'keep-alive': 'timeout=10, max=28',
910 silly registry.get     connection: 'Keep-Alive' } ]
911 http 200 https://registry.npmjs.org/request
912 silly registry.get cb [ 200,
912 silly registry.get   { date: 'Tue, 20 May 2014 23:00:30 GMT',
912 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
912 silly registry.get     etag: '"4O75K7KOXW0FZN04B45251FQC"',
912 silly registry.get     'content-type': 'application/json',
912 silly registry.get     via: '1.1 varnish',
912 silly registry.get     'cache-control': 'max-age=1',
912 silly registry.get     'content-length': '87619',
912 silly registry.get     'accept-ranges': 'bytes',
912 silly registry.get     age: '27',
912 silly registry.get     'x-served-by': 'cache-v37-ASH, cache-jfk1022-JFK',
912 silly registry.get     'x-cache': 'HIT, HIT',
912 silly registry.get     'x-cache-hits': '1, 1',
912 silly registry.get     'x-timer': 'S1400612960.188897371,VS0,VS3,VE4,VE13869861',
912 silly registry.get     vary: 'Accept',
912 silly registry.get     'keep-alive': 'timeout=10, max=33',
912 silly registry.get     connection: 'Keep-Alive' } ]
913 http 304 https://registry.npmjs.org/redeyed
914 silly registry.get cb [ 304,
914 silly registry.get   { date: 'Tue, 20 May 2014 23:00:33 GMT',
914 silly registry.get     server: 'Apache',
914 silly registry.get     via: '1.1 varnish',
914 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:33 GMT',
914 silly registry.get     'cache-control': 'max-age=1',
914 silly registry.get     etag: '"6LCOEJXI5PYRJ4JW4WH0DMQW"',
914 silly registry.get     'x-served-by': 'cache-jfk1026-JFK',
914 silly registry.get     'x-cache': 'HIT',
914 silly registry.get     'x-cache-hits': '1',
914 silly registry.get     'x-timer': 'S1400626833.202274561,VS0,VE16',
914 silly registry.get     vary: 'Accept',
914 silly registry.get     'content-length': '0',
914 silly registry.get     'keep-alive': 'timeout=10, max=44',
914 silly registry.get     connection: 'Keep-Alive' } ]
915 verbose etag redeyed from cache
916 verbose url raw esprima
917 verbose url resolving [ 'https://registry.npmjs.org/', './esprima' ]
918 verbose url resolved https://registry.npmjs.org/esprima
919 info trying registry request attempt 1 at 20:00:36
920 verbose etag "7AYGMIDQBC95HHE61XKXH9BOJ"
921 http GET https://registry.npmjs.org/esprima
922 http 304 https://registry.npmjs.org/ansicolors
923 silly registry.get cb [ 304,
923 silly registry.get   { date: 'Tue, 20 May 2014 23:00:33 GMT',
923 silly registry.get     server: 'Apache',
923 silly registry.get     via: '1.1 varnish',
923 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:33 GMT',
923 silly registry.get     'cache-control': 'max-age=1',
923 silly registry.get     etag: '"4HMIPZFGKFYX9KGNISEDHESGA"',
923 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
923 silly registry.get     'x-cache': 'HIT',
923 silly registry.get     'x-cache-hits': '1',
923 silly registry.get     'x-timer': 'S1400626833.685905218,VS0,VE13',
923 silly registry.get     vary: 'Accept',
923 silly registry.get     'content-length': '0',
923 silly registry.get     'keep-alive': 'timeout=10, max=30',
923 silly registry.get     connection: 'Keep-Alive' } ]
924 verbose etag ansicolors from cache
925 http 304 https://registry.npmjs.org/graceful-fs
926 silly registry.get cb [ 304,
926 silly registry.get   { date: 'Tue, 20 May 2014 23:00:33 GMT',
926 silly registry.get     server: 'Apache',
926 silly registry.get     via: '1.1 varnish',
926 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:33 GMT',
926 silly registry.get     'cache-control': 'max-age=1',
926 silly registry.get     etag: '"8QQOCCU264QJY11TWJH4MT2R3"',
926 silly registry.get     'x-served-by': 'cache-jfk1026-JFK',
926 silly registry.get     'x-cache': 'HIT',
926 silly registry.get     'x-cache-hits': '1',
926 silly registry.get     'x-timer': 'S1400626833.833763838,VS0,VE100',
926 silly registry.get     vary: 'Accept',
926 silly registry.get     'content-length': '0',
926 silly registry.get     'keep-alive': 'timeout=10, max=43',
926 silly registry.get     connection: 'Keep-Alive' } ]
927 verbose etag graceful-fs from cache
928 http 304 https://registry.npmjs.org/inherits
929 silly registry.get cb [ 304,
929 silly registry.get   { date: 'Tue, 20 May 2014 23:00:35 GMT',
929 silly registry.get     server: 'Apache',
929 silly registry.get     via: '1.1 varnish',
929 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:35 GMT',
929 silly registry.get     'cache-control': 'max-age=1',
929 silly registry.get     etag: '"AOGM9R8UHMTA4Q3A77R3Y6L0C"',
929 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
929 silly registry.get     'x-cache': 'HIT',
929 silly registry.get     'x-cache-hits': '1',
929 silly registry.get     'x-timer': 'S1400626835.601978064,VS0,VE7',
929 silly registry.get     vary: 'Accept',
929 silly registry.get     'content-length': '0',
929 silly registry.get     'keep-alive': 'timeout=10, max=29',
929 silly registry.get     connection: 'Keep-Alive' } ]
930 verbose etag inherits from cache
931 http 200 https://registry.npmjs.org/rimraf
932 silly registry.get cb [ 200,
932 silly registry.get   { date: 'Tue, 20 May 2014 23:00:33 GMT',
932 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
932 silly registry.get     etag: '"1STEDQ3FCRDH7RYNOV8FGGQ3J"',
932 silly registry.get     'content-type': 'application/json',
932 silly registry.get     via: '1.1 varnish',
932 silly registry.get     'cache-control': 'max-age=1',
932 silly registry.get     'content-length': '32308',
932 silly registry.get     'accept-ranges': 'bytes',
932 silly registry.get     age: '45',
932 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-jfk1031-JFK',
932 silly registry.get     'x-cache': 'HIT, HIT',
932 silly registry.get     'x-cache-hits': '8, 1',
932 silly registry.get     'x-timer': 'S1400626274.549840689,VS0,VS3,VE3,VE559271',
932 silly registry.get     vary: 'Accept',
932 silly registry.get     'keep-alive': 'timeout=10, max=27',
932 silly registry.get     connection: 'Keep-Alive' } ]
933 http 200 https://registry.npmjs.org/mkdirp
934 silly registry.get cb [ 200,
934 silly registry.get   { date: 'Tue, 20 May 2014 23:00:33 GMT',
934 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
934 silly registry.get     etag: '"ZX76IOCGNQ0Y4AWM9E9SZVM7"',
934 silly registry.get     'content-type': 'application/json',
934 silly registry.get     via: '1.1 varnish',
934 silly registry.get     'cache-control': 'max-age=1',
934 silly registry.get     'content-length': '21281',
934 silly registry.get     'accept-ranges': 'bytes',
934 silly registry.get     age: '1',
934 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-jfk1022-JFK',
934 silly registry.get     'x-cache': 'HIT, HIT',
934 silly registry.get     'x-cache-hits': '1, 1',
934 silly registry.get     'x-timer': 'S1400439303.631739616,VS0,VS4,VE5,VE187530204',
934 silly registry.get     vary: 'Accept',
934 silly registry.get     'keep-alive': 'timeout=10, max=32',
934 silly registry.get     connection: 'Keep-Alive' } ]
935 http 200 https://registry.npmjs.org/mkdirp
936 silly registry.get cb [ 200,
936 silly registry.get   { date: 'Tue, 20 May 2014 23:00:33 GMT',
936 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
936 silly registry.get     etag: '"ZX76IOCGNQ0Y4AWM9E9SZVM7"',
936 silly registry.get     'content-type': 'application/json',
936 silly registry.get     via: '1.1 varnish',
936 silly registry.get     'cache-control': 'max-age=1',
936 silly registry.get     'content-length': '21281',
936 silly registry.get     'accept-ranges': 'bytes',
936 silly registry.get     age: '1',
936 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-jfk1033-JFK',
936 silly registry.get     'x-cache': 'HIT, HIT',
936 silly registry.get     'x-cache-hits': '1, 1',
936 silly registry.get     'x-timer': 'S1400439303.631739616,VS0,VS4,VE5,VE187530333',
936 silly registry.get     vary: 'Accept',
936 silly registry.get     'keep-alive': 'timeout=10, max=39',
936 silly registry.get     connection: 'Keep-Alive' } ]
937 http 200 https://registry.npmjs.org/chalk
938 silly registry.get cb [ 200,
938 silly registry.get   { date: 'Tue, 20 May 2014 23:00:34 GMT',
938 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
938 silly registry.get     etag: '"3EM11R11LKNP6S8S1XBC3EV3G"',
938 silly registry.get     'content-type': 'application/json',
938 silly registry.get     via: '1.1 varnish',
938 silly registry.get     'cache-control': 'max-age=1',
938 silly registry.get     'content-length': '12647',
938 silly registry.get     'accept-ranges': 'bytes',
938 silly registry.get     age: '22',
938 silly registry.get     'x-served-by': 'cache-v41-ASH, cache-jfk1026-JFK',
938 silly registry.get     'x-cache': 'HIT, HIT',
938 silly registry.get     'x-cache-hits': '1, 1',
938 silly registry.get     'x-timer': 'S1400602764.104753256,VS0,VS5,VE5,VE24070880',
938 silly registry.get     vary: 'Accept',
938 silly registry.get     'keep-alive': 'timeout=10, max=42',
938 silly registry.get     connection: 'Keep-Alive' } ]
939 http 304 https://registry.npmjs.org/object-assign
940 silly registry.get cb [ 304,
940 silly registry.get   { date: 'Tue, 20 May 2014 23:00:36 GMT',
940 silly registry.get     server: 'Apache',
940 silly registry.get     via: '1.1 varnish',
940 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:36 GMT',
940 silly registry.get     'cache-control': 'max-age=1',
940 silly registry.get     etag: '"6BQC2FXYR4Q3O2OCKTOL4T7YA"',
940 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
940 silly registry.get     'x-cache': 'HIT',
940 silly registry.get     'x-cache-hits': '1',
940 silly registry.get     'x-timer': 'S1400626836.568332672,VS0,VE99',
940 silly registry.get     vary: 'Accept',
940 silly registry.get     'content-length': '0',
940 silly registry.get     'keep-alive': 'timeout=10, max=31',
940 silly registry.get     connection: 'Keep-Alive' } ]
941 verbose etag object-assign from cache
942 http 304 https://registry.npmjs.org/lodash.debounce
943 silly registry.get cb [ 304,
943 silly registry.get   { date: 'Tue, 20 May 2014 23:00:36 GMT',
943 silly registry.get     server: 'Apache',
943 silly registry.get     via: '1.1 varnish',
943 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:36 GMT',
943 silly registry.get     'cache-control': 'max-age=1',
943 silly registry.get     etag: '"AJ9AHM25PBDQ55M7D2IYDV5KM"',
943 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
943 silly registry.get     'x-cache': 'HIT',
943 silly registry.get     'x-cache-hits': '1',
943 silly registry.get     'x-timer': 'S1400626836.564927578,VS0,VE103',
943 silly registry.get     vary: 'Accept',
943 silly registry.get     'content-length': '0',
943 silly registry.get     'keep-alive': 'timeout=10, max=26',
943 silly registry.get     connection: 'Keep-Alive' } ]
944 verbose etag lodash.debounce from cache
945 http 304 https://registry.npmjs.org/configstore
946 silly registry.get cb [ 304,
946 silly registry.get   { date: 'Tue, 20 May 2014 23:00:36 GMT',
946 silly registry.get     server: 'Apache',
946 silly registry.get     via: '1.1 varnish',
946 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:36 GMT',
946 silly registry.get     'cache-control': 'max-age=1',
946 silly registry.get     etag: '"K4S3ZHWVTDGN895342DJ1DBE"',
946 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
946 silly registry.get     'x-cache': 'HIT',
946 silly registry.get     'x-cache-hits': '1',
946 silly registry.get     'x-timer': 'S1400626836.585067749,VS0,VE111',
946 silly registry.get     vary: 'Accept',
946 silly registry.get     'content-length': '0',
946 silly registry.get     'keep-alive': 'timeout=10, max=38',
946 silly registry.get     connection: 'Keep-Alive' } ]
947 verbose etag configstore from cache
948 http 200 https://registry.npmjs.org/strip-ansi
949 silly registry.get cb [ 200,
949 silly registry.get   { date: 'Tue, 20 May 2014 23:00:36 GMT',
949 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
949 silly registry.get     etag: '"WOJXNPR1MVV9VX6KQE8Z25PH"',
949 silly registry.get     'content-type': 'application/json',
949 silly registry.get     via: '1.1 varnish',
949 silly registry.get     'cache-control': 'max-age=1',
949 silly registry.get     'content-length': '6794',
949 silly registry.get     'accept-ranges': 'bytes',
949 silly registry.get     age: '39',
949 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-jfk1026-JFK',
949 silly registry.get     'x-cache': 'HIT, HIT',
949 silly registry.get     'x-cache-hits': '1, 1',
949 silly registry.get     'x-timer': 'S1400622796.938071966,VS0,VS5,VE100,VE4039764',
949 silly registry.get     vary: 'Accept',
949 silly registry.get     'keep-alive': 'timeout=10, max=41',
949 silly registry.get     connection: 'Keep-Alive' } ]
950 verbose url raw lodash.isfunction
951 verbose url resolving [ 'https://registry.npmjs.org/', './lodash.isfunction' ]
952 verbose url resolved https://registry.npmjs.org/lodash.isfunction
953 info trying registry request attempt 1 at 20:00:39
954 verbose etag "AA6NFJB5Z5CMQTUZ4WJ2TFFHC"
955 http GET https://registry.npmjs.org/lodash.isfunction
956 verbose url raw lodash.isobject
957 verbose url resolving [ 'https://registry.npmjs.org/', './lodash.isobject' ]
958 verbose url resolved https://registry.npmjs.org/lodash.isobject
959 info trying registry request attempt 1 at 20:00:39
960 verbose etag "7Q8JS9WPOE0D3DN0Q6VHCYXYC"
961 http GET https://registry.npmjs.org/lodash.isobject
962 verbose url raw lodash.now
963 verbose url resolving [ 'https://registry.npmjs.org/', './lodash.now' ]
964 verbose url resolved https://registry.npmjs.org/lodash.now
965 info trying registry request attempt 1 at 20:00:39
966 verbose etag "63YHQZ1PELFZYGSAJTKJX76ND"
967 http GET https://registry.npmjs.org/lodash.now
968 http 200 https://registry.npmjs.org/ansi-styles
969 silly registry.get cb [ 200,
969 silly registry.get   { date: 'Tue, 20 May 2014 23:00:37 GMT',
969 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
969 silly registry.get     etag: '"2KJP8DJ5XHKZUZ3CIOCAKQ7XS"',
969 silly registry.get     'content-type': 'application/json',
969 silly registry.get     via: '1.1 varnish',
969 silly registry.get     'cache-control': 'max-age=1',
969 silly registry.get     'content-length': '15413',
969 silly registry.get     'accept-ranges': 'bytes',
969 silly registry.get     age: '26',
969 silly registry.get     'x-served-by': 'cache-v44-ASH, cache-jfk1031-JFK',
969 silly registry.get     'x-cache': 'HIT, HIT',
969 silly registry.get     'x-cache-hits': '1, 1',
969 silly registry.get     'x-timer': 'S1400372280.889186144,VS0,VS5,VE97,VE254556235',
969 silly registry.get     vary: 'Accept',
969 silly registry.get     'keep-alive': 'timeout=10, max=25',
969 silly registry.get     connection: 'Keep-Alive' } ]
970 http 304 https://registry.npmjs.org/has-color
971 silly registry.get cb [ 304,
971 silly registry.get   { date: 'Tue, 20 May 2014 23:00:37 GMT',
971 silly registry.get     server: 'Apache',
971 silly registry.get     via: '1.1 varnish',
971 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:37 GMT',
971 silly registry.get     'cache-control': 'max-age=1',
971 silly registry.get     etag: '"9ET1M9DE6H0H6XWCWO5IDMRTO"',
971 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
971 silly registry.get     'x-cache': 'HIT',
971 silly registry.get     'x-cache-hits': '1',
971 silly registry.get     'x-timer': 'S1400626837.216213226,VS0,VE7',
971 silly registry.get     vary: 'Accept',
971 silly registry.get     'content-length': '0',
971 silly registry.get     'keep-alive': 'timeout=10, max=37',
971 silly registry.get     connection: 'Keep-Alive' } ]
972 verbose etag has-color from cache
973 http 304 https://registry.npmjs.org/q
974 silly registry.get cb [ 304,
974 silly registry.get   { date: 'Tue, 20 May 2014 23:00:37 GMT',
974 silly registry.get     server: 'Apache',
974 silly registry.get     via: '1.1 varnish',
974 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:37 GMT',
974 silly registry.get     'cache-control': 'max-age=1',
974 silly registry.get     etag: '"BZBSW861DDQQDA76ALY8BWX4S"',
974 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
974 silly registry.get     'x-cache': 'HIT',
974 silly registry.get     'x-cache-hits': '1',
974 silly registry.get     'x-timer': 'S1400626837.733688116,VS0,VE8',
974 silly registry.get     vary: 'Accept',
974 silly registry.get     'content-length': '0',
974 silly registry.get     'keep-alive': 'timeout=10, max=36',
974 silly registry.get     connection: 'Keep-Alive' } ]
975 verbose etag q from cache
976 http 200 https://registry.npmjs.org/strip-ansi
977 silly registry.get cb [ 200,
977 silly registry.get   { date: 'Tue, 20 May 2014 23:00:37 GMT',
977 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
977 silly registry.get     etag: '"WOJXNPR1MVV9VX6KQE8Z25PH"',
977 silly registry.get     'content-type': 'application/json',
977 silly registry.get     via: '1.1 varnish',
977 silly registry.get     'cache-control': 'max-age=1',
977 silly registry.get     'content-length': '6794',
977 silly registry.get     'accept-ranges': 'bytes',
977 silly registry.get     age: '40',
977 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-jfk1031-JFK',
977 silly registry.get     'x-cache': 'HIT, HIT',
977 silly registry.get     'x-cache-hits': '1, 1',
977 silly registry.get     'x-timer': 'S1400622796.938071966,VS0,VS5,VE100,VE4040876',
977 silly registry.get     vary: 'Accept',
977 silly registry.get     'keep-alive': 'timeout=10, max=24',
977 silly registry.get     connection: 'Keep-Alive' } ]
978 http 304 https://registry.npmjs.org/has-color
979 silly registry.get cb [ 304,
979 silly registry.get   { date: 'Tue, 20 May 2014 23:00:37 GMT',
979 silly registry.get     server: 'Apache',
979 silly registry.get     via: '1.1 varnish',
979 silly registry.get     'last-modified': 'Tue, 20 May 2014 22:58:57 GMT',
979 silly registry.get     'cache-control': 'max-age=1',
979 silly registry.get     etag: '"9ET1M9DE6H0H6XWCWO5IDMRTO"',
979 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
979 silly registry.get     'x-cache': 'HIT',
979 silly registry.get     'x-cache-hits': '4',
979 silly registry.get     'x-timer': 'S1400626837.869460106,VS0,VE0',
979 silly registry.get     vary: 'Accept',
979 silly registry.get     'content-length': '0',
979 silly registry.get     'keep-alive': 'timeout=10, max=30',
979 silly registry.get     connection: 'Keep-Alive' } ]
980 verbose etag has-color from cache
981 http 304 https://registry.npmjs.org/throttleit
982 silly registry.get cb [ 304,
982 silly registry.get   { date: 'Tue, 20 May 2014 23:00:38 GMT',
982 silly registry.get     server: 'Apache',
982 silly registry.get     via: '1.1 varnish',
982 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:38 GMT',
982 silly registry.get     'cache-control': 'max-age=1',
982 silly registry.get     etag: '"EI7SQXHOA0X2YTNUSS6H1EA2F"',
982 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
982 silly registry.get     'x-cache': 'HIT',
982 silly registry.get     'x-cache-hits': '1',
982 silly registry.get     'x-timer': 'S1400626838.269040585,VS0,VE79',
982 silly registry.get     vary: 'Accept',
982 silly registry.get     'content-length': '0',
982 silly registry.get     'keep-alive': 'timeout=10, max=23',
982 silly registry.get     connection: 'Keep-Alive' } ]
983 verbose etag throttleit from cache
984 http 304 https://registry.npmjs.org/jsonify
985 silly registry.get cb [ 304,
985 silly registry.get   { date: 'Tue, 20 May 2014 23:00:38 GMT',
985 silly registry.get     server: 'Apache',
985 silly registry.get     via: '1.1 varnish',
985 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:38 GMT',
985 silly registry.get     'cache-control': 'max-age=1',
985 silly registry.get     etag: '"7VU8SEPVL9CBI4OPOR1Y6QHHL"',
985 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
985 silly registry.get     'x-cache': 'HIT',
985 silly registry.get     'x-cache-hits': '1',
985 silly registry.get     'x-timer': 'S1400626838.370942116,VS0,VE8',
985 silly registry.get     vary: 'Accept',
985 silly registry.get     'content-length': '0',
985 silly registry.get     'keep-alive': 'timeout=10, max=29',
985 silly registry.get     connection: 'Keep-Alive' } ]
986 verbose etag jsonify from cache
987 http 304 https://registry.npmjs.org/array-filter
988 silly registry.get cb [ 304,
988 silly registry.get   { date: 'Tue, 20 May 2014 23:00:38 GMT',
988 silly registry.get     server: 'Apache',
988 silly registry.get     via: '1.1 varnish',
988 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:38 GMT',
988 silly registry.get     'cache-control': 'max-age=1',
988 silly registry.get     etag: '"DCUSFFZN443VF2CQG666LWFQY"',
988 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
988 silly registry.get     'x-cache': 'HIT',
988 silly registry.get     'x-cache-hits': '1',
988 silly registry.get     'x-timer': 'S1400626838.834736824,VS0,VE7',
988 silly registry.get     vary: 'Accept',
988 silly registry.get     'content-length': '0',
988 silly registry.get     'keep-alive': 'timeout=10, max=22',
988 silly registry.get     connection: 'Keep-Alive' } ]
989 verbose etag array-filter from cache
990 http 304 https://registry.npmjs.org/array-map
991 silly registry.get cb [ 304,
991 silly registry.get   { date: 'Tue, 20 May 2014 23:00:38 GMT',
991 silly registry.get     server: 'Apache',
991 silly registry.get     via: '1.1 varnish',
991 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:38 GMT',
991 silly registry.get     'cache-control': 'max-age=1',
991 silly registry.get     etag: '"3N0D584WC9F0JLXDUAJIMD9T6"',
991 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
991 silly registry.get     'x-cache': 'HIT',
991 silly registry.get     'x-cache-hits': '1',
991 silly registry.get     'x-timer': 'S1400626838.856306076,VS0,VE105',
991 silly registry.get     vary: 'Accept',
991 silly registry.get     'content-length': '0',
991 silly registry.get     'keep-alive': 'timeout=10, max=28',
991 silly registry.get     connection: 'Keep-Alive' } ]
992 verbose etag array-map from cache
993 http 200 https://registry.npmjs.org/ansi-styles
994 silly registry.get cb [ 200,
994 silly registry.get   { date: 'Tue, 20 May 2014 23:00:37 GMT',
994 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
994 silly registry.get     etag: '"2KJP8DJ5XHKZUZ3CIOCAKQ7XS"',
994 silly registry.get     'content-type': 'application/json',
994 silly registry.get     via: '1.1 varnish',
994 silly registry.get     'cache-control': 'max-age=1',
994 silly registry.get     'content-length': '15413',
994 silly registry.get     'accept-ranges': 'bytes',
994 silly registry.get     age: '26',
994 silly registry.get     'x-served-by': 'cache-v44-ASH, cache-jfk1026-JFK',
994 silly registry.get     'x-cache': 'HIT, HIT',
994 silly registry.get     'x-cache-hits': '1, 3',
994 silly registry.get     'x-timer': 'S1400626837.246359110,VS0,VE0',
994 silly registry.get     vary: 'Accept',
994 silly registry.get     'keep-alive': 'timeout=10, max=40',
994 silly registry.get     connection: 'Keep-Alive' } ]
995 http 304 https://registry.npmjs.org/array-reduce
996 silly registry.get cb [ 304,
996 silly registry.get   { date: 'Tue, 20 May 2014 23:00:39 GMT',
996 silly registry.get     server: 'Apache',
996 silly registry.get     via: '1.1 varnish',
996 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:39 GMT',
996 silly registry.get     'cache-control': 'max-age=1',
996 silly registry.get     etag: '"4OPNMX9RVV5FOMQLF0OFM7K8I"',
996 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
996 silly registry.get     'x-cache': 'HIT',
996 silly registry.get     'x-cache-hits': '1',
996 silly registry.get     'x-timer': 'S1400626839.325790405,VS0,VE91',
996 silly registry.get     vary: 'Accept',
996 silly registry.get     'content-length': '0',
996 silly registry.get     'keep-alive': 'timeout=10, max=21',
996 silly registry.get     connection: 'Keep-Alive' } ]
997 verbose etag array-reduce from cache
998 http 304 https://registry.npmjs.org/inherits
999 silly registry.get cb [ 304,
999 silly registry.get   { date: 'Tue, 20 May 2014 23:00:39 GMT',
999 silly registry.get     server: 'Apache',
999 silly registry.get     via: '1.1 varnish',
999 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:39 GMT',
999 silly registry.get     'cache-control': 'max-age=1',
999 silly registry.get     etag: '"AOGM9R8UHMTA4Q3A77R3Y6L0C"',
999 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
999 silly registry.get     'x-cache': 'HIT',
999 silly registry.get     'x-cache-hits': '1',
999 silly registry.get     'x-timer': 'S1400626839.499420881,VS0,VE6',
999 silly registry.get     vary: 'Accept',
999 silly registry.get     'content-length': '0',
999 silly registry.get     'keep-alive': 'timeout=10, max=27',
999 silly registry.get     connection: 'Keep-Alive' } ]
1000 verbose etag inherits from cache
1001 http 304 https://registry.npmjs.org/read
1002 silly registry.get cb [ 304,
1002 silly registry.get   { date: 'Tue, 20 May 2014 23:00:38 GMT',
1002 silly registry.get     server: 'Apache',
1002 silly registry.get     via: '1.1 varnish',
1002 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:38 GMT',
1002 silly registry.get     'cache-control': 'max-age=1',
1002 silly registry.get     etag: '"AX4MIK1433873MQ2X0SOFZUZH"',
1002 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
1002 silly registry.get     'x-cache': 'HIT',
1002 silly registry.get     'x-cache-hits': '1',
1002 silly registry.get     'x-timer': 'S1400626838.134509802,VS0,VE102',
1002 silly registry.get     vary: 'Accept',
1002 silly registry.get     'content-length': '0',
1002 silly registry.get     'keep-alive': 'timeout=10, max=35',
1002 silly registry.get     connection: 'Keep-Alive' } ]
1003 verbose etag read from cache
1004 verbose url raw mute-stream
1005 verbose url resolving [ 'https://registry.npmjs.org/', './mute-stream' ]
1006 verbose url resolved https://registry.npmjs.org/mute-stream
1007 info trying registry request attempt 1 at 20:00:42
1008 verbose etag "894HXUM1QSNIUNJ926RHD26P1"
1009 http GET https://registry.npmjs.org/mute-stream
1010 http 304 https://registry.npmjs.org/block-stream
1011 silly registry.get cb [ 304,
1011 silly registry.get   { date: 'Tue, 20 May 2014 23:00:39 GMT',
1011 silly registry.get     server: 'Apache',
1011 silly registry.get     via: '1.1 varnish',
1011 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:40 GMT',
1011 silly registry.get     'cache-control': 'max-age=1',
1011 silly registry.get     etag: '"BESVSEW8U199B9UI369ZXVW8Q"',
1011 silly registry.get     'x-served-by': 'cache-jfk1026-JFK',
1011 silly registry.get     'x-cache': 'HIT',
1011 silly registry.get     'x-cache-hits': '1',
1011 silly registry.get     'x-timer': 'S1400626839.961955309,VS0,VE105',
1011 silly registry.get     vary: 'Accept',
1011 silly registry.get     'content-length': '0',
1011 silly registry.get     'keep-alive': 'timeout=10, max=39',
1011 silly registry.get     connection: 'Keep-Alive' } ]
1012 verbose etag block-stream from cache
1013 verbose registry.get inherits not expired, no request
1014 http 304 https://registry.npmjs.org/configstore
1015 silly registry.get cb [ 304,
1015 silly registry.get   { date: 'Tue, 20 May 2014 23:00:40 GMT',
1015 silly registry.get     server: 'Apache',
1015 silly registry.get     via: '1.1 varnish',
1015 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:40 GMT',
1015 silly registry.get     'cache-control': 'max-age=1',
1015 silly registry.get     etag: '"K4S3ZHWVTDGN895342DJ1DBE"',
1015 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
1015 silly registry.get     'x-cache': 'HIT',
1015 silly registry.get     'x-cache-hits': '1',
1015 silly registry.get     'x-timer': 'S1400626840.102836370,VS0,VE7',
1015 silly registry.get     vary: 'Accept',
1015 silly registry.get     'content-length': '0',
1015 silly registry.get     'keep-alive': 'timeout=10, max=20',
1015 silly registry.get     connection: 'Keep-Alive' } ]
1016 verbose etag configstore from cache
1017 http 304 https://registry.npmjs.org/mkpath
1018 silly registry.get cb [ 304,
1018 silly registry.get   { date: 'Tue, 20 May 2014 23:00:40 GMT',
1018 silly registry.get     server: 'Apache',
1018 silly registry.get     via: '1.1 varnish',
1018 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:40 GMT',
1018 silly registry.get     'cache-control': 'max-age=1',
1018 silly registry.get     etag: '"9C1KGI3NMVOZQVIMBIFKTPDH7"',
1018 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
1018 silly registry.get     'x-cache': 'HIT',
1018 silly registry.get     'x-cache-hits': '1',
1018 silly registry.get     'x-timer': 'S1400626840.113724947,VS0,VE8',
1018 silly registry.get     vary: 'Accept',
1018 silly registry.get     'content-length': '0',
1018 silly registry.get     'keep-alive': 'timeout=10, max=26',
1018 silly registry.get     connection: 'Keep-Alive' } ]
1019 verbose etag mkpath from cache
1020 http 200 https://registry.npmjs.org/request
1021 silly registry.get cb [ 200,
1021 silly registry.get   { date: 'Tue, 20 May 2014 23:00:36 GMT',
1021 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
1021 silly registry.get     etag: '"4O75K7KOXW0FZN04B45251FQC"',
1021 silly registry.get     'content-type': 'application/json',
1021 silly registry.get     via: '1.1 varnish',
1021 silly registry.get     'cache-control': 'max-age=1',
1021 silly registry.get     'content-length': '87619',
1021 silly registry.get     'accept-ranges': 'bytes',
1021 silly registry.get     age: '34',
1021 silly registry.get     'x-served-by': 'cache-v37-ASH, cache-jfk1033-JFK',
1021 silly registry.get     'x-cache': 'HIT, HIT',
1021 silly registry.get     'x-cache-hits': '1, 1',
1021 silly registry.get     'x-timer': 'S1400612960.188897371,VS0,VS3,VE4,VE13875891',
1021 silly registry.get     vary: 'Accept',
1021 silly registry.get     'keep-alive': 'timeout=10, max=28',
1021 silly registry.get     connection: 'Keep-Alive' } ]
1022 http 304 https://registry.npmjs.org/touch
1023 silly registry.get cb [ 304,
1023 silly registry.get   { date: 'Tue, 20 May 2014 23:00:40 GMT',
1023 silly registry.get     server: 'Apache',
1023 silly registry.get     via: '1.1 varnish',
1023 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:40 GMT',
1023 silly registry.get     'cache-control': 'max-age=1',
1023 silly registry.get     etag: '"A3OMAEAXRI67QHKVBBOI55TK7"',
1023 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
1023 silly registry.get     'x-cache': 'HIT',
1023 silly registry.get     'x-cache-hits': '1',
1023 silly registry.get     'x-timer': 'S1400626840.301041126,VS0,VE104',
1023 silly registry.get     vary: 'Accept',
1023 silly registry.get     'content-length': '0',
1023 silly registry.get     'keep-alive': 'timeout=10, max=34',
1023 silly registry.get     connection: 'Keep-Alive' } ]
1024 verbose etag touch from cache
1025 http 304 https://registry.npmjs.org/binary
1026 silly registry.get cb [ 304,
1026 silly registry.get   { date: 'Tue, 20 May 2014 23:00:40 GMT',
1026 silly registry.get     server: 'Apache',
1026 silly registry.get     via: '1.1 varnish',
1026 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:40 GMT',
1026 silly registry.get     'cache-control': 'max-age=1',
1026 silly registry.get     etag: '"24HH9N2I0O9ABCX5KPVESNSY0"',
1026 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
1026 silly registry.get     'x-cache': 'HIT',
1026 silly registry.get     'x-cache-hits': '1',
1026 silly registry.get     'x-timer': 'S1400626840.435342073,VS0,VE7',
1026 silly registry.get     vary: 'Accept',
1026 silly registry.get     'content-length': '0',
1026 silly registry.get     'keep-alive': 'timeout=10, max=19',
1026 silly registry.get     connection: 'Keep-Alive' } ]
1027 verbose etag binary from cache
1028 http 304 https://registry.npmjs.org/uglify-js
1029 silly registry.get cb [ 304,
1029 silly registry.get   { date: 'Tue, 20 May 2014 23:00:40 GMT',
1029 silly registry.get     server: 'Apache',
1029 silly registry.get     via: '1.1 varnish',
1029 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:40 GMT',
1029 silly registry.get     'cache-control': 'max-age=1',
1029 silly registry.get     etag: '"9WR1IQPRT7JLHFFQRLPBGOMCQ"',
1029 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
1029 silly registry.get     'x-cache': 'HIT',
1029 silly registry.get     'x-cache-hits': '1',
1029 silly registry.get     'x-timer': 'S1400626840.434953690,VS0,VE7',
1029 silly registry.get     vary: 'Accept',
1029 silly registry.get     'content-length': '0',
1029 silly registry.get     'keep-alive': 'timeout=10, max=25',
1029 silly registry.get     connection: 'Keep-Alive' } ]
1030 verbose etag uglify-js from cache
1031 verbose url raw async
1032 verbose url resolving [ 'https://registry.npmjs.org/', './async' ]
1033 verbose url resolved https://registry.npmjs.org/async
1034 info trying registry request attempt 1 at 20:00:43
1035 verbose etag "7FQMJTMF88EDGEIUF6FBGCLOI"
1036 http GET https://registry.npmjs.org/async
1037 verbose registry.get optimist not expired, no request
1038 verbose url raw uglify-to-browserify
1039 verbose url resolving [ 'https://registry.npmjs.org/', './uglify-to-browserify' ]
1040 verbose url resolved https://registry.npmjs.org/uglify-to-browserify
1041 info trying registry request attempt 1 at 20:00:43
1042 verbose etag "14ZOWXXYNOUHCBA3EDYFH6O08"
1043 http GET https://registry.npmjs.org/uglify-to-browserify
1044 verbose url raw source-map
1045 verbose url resolving [ 'https://registry.npmjs.org/', './source-map' ]
1046 verbose url resolved https://registry.npmjs.org/source-map
1047 info trying registry request attempt 1 at 20:00:43
1048 verbose etag "8ANCV3RWS7H3RZ8BR64ARCR28"
1049 http GET https://registry.npmjs.org/source-map
1050 http 304 https://registry.npmjs.org/uglify-js
1051 silly registry.get cb [ 304,
1051 silly registry.get   { date: 'Tue, 20 May 2014 23:00:40 GMT',
1051 silly registry.get     server: 'Apache',
1051 silly registry.get     via: '1.1 varnish',
1051 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:40 GMT',
1051 silly registry.get     'cache-control': 'max-age=1',
1051 silly registry.get     etag: '"9WR1IQPRT7JLHFFQRLPBGOMCQ"',
1051 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
1051 silly registry.get     'x-cache': 'HIT',
1051 silly registry.get     'x-cache-hits': '1',
1051 silly registry.get     'x-timer': 'S1400626840.769978285,VS0,VE1',
1051 silly registry.get     vary: 'Accept',
1051 silly registry.get     'content-length': '0',
1051 silly registry.get     'keep-alive': 'timeout=10, max=27',
1051 silly registry.get     connection: 'Keep-Alive' } ]
1052 verbose etag uglify-js from cache
1053 verbose url raw buffers
1054 verbose url resolving [ 'https://registry.npmjs.org/', './buffers' ]
1055 verbose url resolved https://registry.npmjs.org/buffers
1056 info trying registry request attempt 1 at 20:00:43
1057 verbose etag "61Z7P2PITMT0KEG7YFEQI2WHS"
1058 http GET https://registry.npmjs.org/buffers
1059 verbose url raw chainsaw
1060 verbose url resolving [ 'https://registry.npmjs.org/', './chainsaw' ]
1061 verbose url resolved https://registry.npmjs.org/chainsaw
1062 info trying registry request attempt 1 at 20:00:43
1063 verbose etag "CQRSG52HYGJVHALYIYBOLIG9G"
1064 http GET https://registry.npmjs.org/chainsaw
1065 verbose url raw async
1066 verbose url resolving [ 'https://registry.npmjs.org/', './async' ]
1067 verbose url resolved https://registry.npmjs.org/async
1068 info trying registry request attempt 1 at 20:00:43
1069 verbose etag "7FQMJTMF88EDGEIUF6FBGCLOI"
1070 http GET https://registry.npmjs.org/async
1071 verbose url raw source-map
1072 verbose url resolving [ 'https://registry.npmjs.org/', './source-map' ]
1073 verbose url resolved https://registry.npmjs.org/source-map
1074 info trying registry request attempt 1 at 20:00:43
1075 verbose etag "8ANCV3RWS7H3RZ8BR64ARCR28"
1076 http GET https://registry.npmjs.org/source-map
1077 verbose registry.get optimist not expired, no request
1078 verbose url raw uglify-to-browserify
1079 verbose url resolving [ 'https://registry.npmjs.org/', './uglify-to-browserify' ]
1080 verbose url resolved https://registry.npmjs.org/uglify-to-browserify
1081 info trying registry request attempt 1 at 20:00:43
1082 verbose etag "14ZOWXXYNOUHCBA3EDYFH6O08"
1083 http GET https://registry.npmjs.org/uglify-to-browserify
1084 http 304 https://registry.npmjs.org/glob
1085 silly registry.get cb [ 304,
1085 silly registry.get   { date: 'Tue, 20 May 2014 23:00:40 GMT',
1085 silly registry.get     server: 'Apache',
1085 silly registry.get     via: '1.1 varnish',
1085 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:40 GMT',
1085 silly registry.get     'cache-control': 'max-age=1',
1085 silly registry.get     etag: '"2CE79VLA7I89QN6CASW442BU7"',
1085 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
1085 silly registry.get     'x-cache': 'HIT',
1085 silly registry.get     'x-cache-hits': '1',
1085 silly registry.get     'x-timer': 'S1400626840.888033867,VS0,VE0',
1085 silly registry.get     vary: 'Accept',
1085 silly registry.get     'content-length': '0',
1085 silly registry.get     'keep-alive': 'timeout=10, max=33',
1085 silly registry.get     connection: 'Keep-Alive' } ]
1086 verbose etag glob from cache
1087 http 304 https://registry.npmjs.org/lodash
1088 silly registry.get cb [ 304,
1088 silly registry.get   { date: 'Tue, 20 May 2014 23:00:40 GMT',
1088 silly registry.get     server: 'Apache',
1088 silly registry.get     via: '1.1 varnish',
1088 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:40 GMT',
1088 silly registry.get     'cache-control': 'max-age=1',
1088 silly registry.get     etag: '"7Z7E8QMEXQNF34B78JE7J9QTN"',
1088 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
1088 silly registry.get     'x-cache': 'HIT',
1088 silly registry.get     'x-cache-hits': '1',
1088 silly registry.get     'x-timer': 'S1400626840.956664801,VS0,VE1',
1088 silly registry.get     vary: 'Accept',
1088 silly registry.get     'content-length': '0',
1088 silly registry.get     'keep-alive': 'timeout=10, max=18',
1088 silly registry.get     connection: 'Keep-Alive' } ]
1089 verbose etag lodash from cache
1090 http 200 https://registry.npmjs.org/readable-stream
1091 silly registry.get cb [ 200,
1091 silly registry.get   { date: 'Tue, 20 May 2014 23:00:40 GMT',
1091 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
1091 silly registry.get     etag: '"8DMIPBEK31UI812DXL8U8E97H"',
1091 silly registry.get     'content-type': 'application/json',
1091 silly registry.get     via: '1.1 varnish',
1091 silly registry.get     'cache-control': 'max-age=1',
1091 silly registry.get     'content-length': '33386',
1091 silly registry.get     'accept-ranges': 'bytes',
1091 silly registry.get     age: '255',
1091 silly registry.get     'x-served-by': 'cache-v43-ASH, cache-jfk1026-JFK',
1091 silly registry.get     'x-cache': 'HIT, HIT',
1091 silly registry.get     'x-cache-hits': '2, 1',
1091 silly registry.get     'x-timer': 'S1400607895.647759676,VS0,VS1,VE1,VE18944795',
1091 silly registry.get     vary: 'Accept',
1091 silly registry.get     'keep-alive': 'timeout=10, max=38',
1091 silly registry.get     connection: 'Keep-Alive' } ]
1092 http 304 https://registry.npmjs.org/lodash.isfunction
1093 silly registry.get cb [ 304,
1093 silly registry.get   { date: 'Tue, 20 May 2014 23:00:42 GMT',
1093 silly registry.get     server: 'Apache',
1093 silly registry.get     via: '1.1 varnish',
1093 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:42 GMT',
1093 silly registry.get     'cache-control': 'max-age=1',
1093 silly registry.get     etag: '"AA6NFJB5Z5CMQTUZ4WJ2TFFHC"',
1093 silly registry.get     'x-served-by': 'cache-jfk1026-JFK',
1093 silly registry.get     'x-cache': 'HIT',
1093 silly registry.get     'x-cache-hits': '1',
1093 silly registry.get     'x-timer': 'S1400626842.982023239,VS0,VE15',
1093 silly registry.get     vary: 'Accept',
1093 silly registry.get     'content-length': '0',
1093 silly registry.get     'keep-alive': 'timeout=10, max=37',
1093 silly registry.get     connection: 'Keep-Alive' } ]
1094 verbose etag lodash.isfunction from cache
1095 http 200 https://registry.npmjs.org/readdirp
1096 silly registry.get cb [ 200,
1096 silly registry.get   { date: 'Tue, 20 May 2014 23:00:41 GMT',
1096 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
1096 silly registry.get     etag: '"2PU4BRBLQEYYMIPKXA6PNKFUU"',
1096 silly registry.get     'content-type': 'application/json',
1096 silly registry.get     via: '1.1 varnish',
1096 silly registry.get     'cache-control': 'max-age=1',
1096 silly registry.get     'content-length': '30042',
1096 silly registry.get     'accept-ranges': 'bytes',
1096 silly registry.get     age: '1412',
1096 silly registry.get     'x-served-by': 'cache-v36-ASH, cache-jfk1022-JFK',
1096 silly registry.get     'x-cache': 'HIT, HIT',
1096 silly registry.get     'x-cache-hits': '1, 1',
1096 silly registry.get     'x-timer': 'S1400494572.211970329,VS0,VS3,VE104,VE132268853',
1096 silly registry.get     vary: 'Accept',
1096 silly registry.get     'keep-alive': 'timeout=10, max=24',
1096 silly registry.get     connection: 'Keep-Alive' } ]
1097 http 304 https://registry.npmjs.org/wordwrap
1098 silly registry.get cb [ 304,
1098 silly registry.get   { date: 'Tue, 20 May 2014 23:00:43 GMT',
1098 silly registry.get     server: 'Apache',
1098 silly registry.get     via: '1.1 varnish',
1098 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:43 GMT',
1098 silly registry.get     'cache-control': 'max-age=1',
1098 silly registry.get     etag: '"6GUW1CYLCM04DMNSMK3F17IKN"',
1098 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
1098 silly registry.get     'x-cache': 'HIT',
1098 silly registry.get     'x-cache-hits': '1',
1098 silly registry.get     'x-timer': 'S1400626843.152319908,VS0,VE0',
1098 silly registry.get     vary: 'Accept',
1098 silly registry.get     'content-length': '0',
1098 silly registry.get     'keep-alive': 'timeout=10, max=26',
1098 silly registry.get     connection: 'Keep-Alive' } ]
1099 verbose etag wordwrap from cache
1100 http 200 https://registry.npmjs.org/minimist
1101 silly registry.get cb [ 200,
1101 silly registry.get   { date: 'Tue, 20 May 2014 23:00:41 GMT',
1101 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
1101 silly registry.get     etag: '"CB17FP40DTD01V6S7DT3OW464"',
1101 silly registry.get     'content-type': 'application/json',
1101 silly registry.get     via: '1.1 varnish',
1101 silly registry.get     'cache-control': 'max-age=1',
1101 silly registry.get     'content-length': '15991',
1101 silly registry.get     'accept-ranges': 'bytes',
1101 silly registry.get     age: '9',
1101 silly registry.get     'x-served-by': 'cache-v41-ASH, cache-jfk1033-JFK',
1101 silly registry.get     'x-cache': 'HIT, HIT',
1101 silly registry.get     'x-cache-hits': '1, 1',
1101 silly registry.get     'x-timer': 'S1400421149.343800068,VS0,VS4,VE4,VE205692402',
1101 silly registry.get     vary: 'Accept',
1101 silly registry.get     'keep-alive': 'timeout=10, max=32',
1101 silly registry.get     connection: 'Keep-Alive' } ]
1102 http 304 https://registry.npmjs.org/mute-stream
1103 silly registry.get cb [ 304,
1103 silly registry.get   { date: 'Tue, 20 May 2014 23:00:44 GMT',
1103 silly registry.get     server: 'Apache',
1103 silly registry.get     via: '1.1 varnish',
1103 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:44 GMT',
1103 silly registry.get     'cache-control': 'max-age=1',
1103 silly registry.get     etag: '"894HXUM1QSNIUNJ926RHD26P1"',
1103 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
1103 silly registry.get     'x-cache': 'HIT',
1103 silly registry.get     'x-cache-hits': '1',
1103 silly registry.get     'x-timer': 'S1400626844.125944376,VS0,VE14',
1103 silly registry.get     vary: 'Accept',
1103 silly registry.get     'content-length': '0',
1103 silly registry.get     'keep-alive': 'timeout=10, max=25',
1103 silly registry.get     connection: 'Keep-Alive' } ]
1104 verbose etag mute-stream from cache
1105 http 304 https://registry.npmjs.org/lodash.now
1106 silly registry.get cb [ 304,
1106 silly registry.get   { date: 'Tue, 20 May 2014 23:00:44 GMT',
1106 silly registry.get     server: 'Apache',
1106 silly registry.get     via: '1.1 varnish',
1106 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:44 GMT',
1106 silly registry.get     'cache-control': 'max-age=1',
1106 silly registry.get     etag: '"63YHQZ1PELFZYGSAJTKJX76ND"',
1106 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
1106 silly registry.get     'x-cache': 'HIT',
1106 silly registry.get     'x-cache-hits': '1',
1106 silly registry.get     'x-timer': 'S1400626844.115160227,VS0,VE78',
1106 silly registry.get     vary: 'Accept',
1106 silly registry.get     'content-length': '0',
1106 silly registry.get     'keep-alive': 'timeout=10, max=23',
1106 silly registry.get     connection: 'Keep-Alive' } ]
1107 verbose etag lodash.now from cache
1108 verbose url raw lodash._isnative
1109 verbose url resolving [ 'https://registry.npmjs.org/', './lodash._isnative' ]
1110 verbose url resolved https://registry.npmjs.org/lodash._isnative
1111 info trying registry request attempt 1 at 20:00:47
1112 verbose etag "EBMU9S41O8ET9HEFPWRZHF7A4"
1113 http GET https://registry.npmjs.org/lodash._isnative
1114 http 304 https://registry.npmjs.org/async
1115 silly registry.get cb [ 304,
1115 silly registry.get   { date: 'Tue, 20 May 2014 23:00:44 GMT',
1115 silly registry.get     server: 'Apache',
1115 silly registry.get     via: '1.1 varnish',
1115 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:44 GMT',
1115 silly registry.get     'cache-control': 'max-age=1',
1115 silly registry.get     etag: '"7FQMJTMF88EDGEIUF6FBGCLOI"',
1115 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
1115 silly registry.get     'x-cache': 'HIT',
1115 silly registry.get     'x-cache-hits': '1',
1115 silly registry.get     'x-timer': 'S1400626844.614825726,VS0,VE7',
1115 silly registry.get     vary: 'Accept',
1115 silly registry.get     'content-length': '0',
1115 silly registry.get     'keep-alive': 'timeout=10, max=31',
1115 silly registry.get     connection: 'Keep-Alive' } ]
1116 verbose etag async from cache
1117 http 304 https://registry.npmjs.org/lodash.isobject
1118 silly registry.get cb [ 304,
1118 silly registry.get   { date: 'Tue, 20 May 2014 23:00:44 GMT',
1118 silly registry.get     server: 'Apache',
1118 silly registry.get     via: '1.1 varnish',
1118 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:45 GMT',
1118 silly registry.get     'cache-control': 'max-age=1',
1118 silly registry.get     etag: '"7Q8JS9WPOE0D3DN0Q6VHCYXYC"',
1118 silly registry.get     'x-served-by': 'cache-jfk1026-JFK',
1118 silly registry.get     'x-cache': 'HIT',
1118 silly registry.get     'x-cache-hits': '1',
1118 silly registry.get     'x-timer': 'S1400626844.997528553,VS0,VE16',
1118 silly registry.get     vary: 'Accept',
1118 silly registry.get     'content-length': '0',
1118 silly registry.get     'keep-alive': 'timeout=10, max=36',
1118 silly registry.get     connection: 'Keep-Alive' } ]
1119 verbose etag lodash.isobject from cache
1120 verbose url raw lodash._objecttypes
1121 verbose url resolving [ 'https://registry.npmjs.org/', './lodash._objecttypes' ]
1122 verbose url resolved https://registry.npmjs.org/lodash._objecttypes
1123 info trying registry request attempt 1 at 20:00:47
1124 verbose etag "57EYQ41VEW1BMUYTV230UK895"
1125 http GET https://registry.npmjs.org/lodash._objecttypes
1126 http 304 https://registry.npmjs.org/source-map
1127 silly registry.get cb [ 304,
1127 silly registry.get   { date: 'Tue, 20 May 2014 23:00:45 GMT',
1127 silly registry.get     server: 'Apache',
1127 silly registry.get     via: '1.1 varnish',
1127 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:45 GMT',
1127 silly registry.get     'cache-control': 'max-age=1',
1127 silly registry.get     etag: '"8ANCV3RWS7H3RZ8BR64ARCR28"',
1127 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
1127 silly registry.get     'x-cache': 'HIT',
1127 silly registry.get     'x-cache-hits': '1',
1127 silly registry.get     'x-timer': 'S1400626845.168085814,VS0,VE99',
1127 silly registry.get     vary: 'Accept',
1127 silly registry.get     'content-length': '0',
1127 silly registry.get     'keep-alive': 'timeout=10, max=22',
1127 silly registry.get     connection: 'Keep-Alive' } ]
1128 verbose etag source-map from cache
1129 verbose url raw amdefine
1130 verbose url resolving [ 'https://registry.npmjs.org/', './amdefine' ]
1131 verbose url resolved https://registry.npmjs.org/amdefine
1132 info trying registry request attempt 1 at 20:00:48
1133 verbose etag "AIUP666S38PGJM2AVPD28X9YX"
1134 http GET https://registry.npmjs.org/amdefine
1135 http 304 https://registry.npmjs.org/buffers
1136 silly registry.get cb [ 304,
1136 silly registry.get   { date: 'Tue, 20 May 2014 23:00:45 GMT',
1136 silly registry.get     server: 'Apache',
1136 silly registry.get     via: '1.1 varnish',
1136 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:45 GMT',
1136 silly registry.get     'cache-control': 'max-age=1',
1136 silly registry.get     etag: '"61Z7P2PITMT0KEG7YFEQI2WHS"',
1136 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
1136 silly registry.get     'x-cache': 'HIT',
1136 silly registry.get     'x-cache-hits': '1',
1136 silly registry.get     'x-timer': 'S1400626845.789516211,VS0,VE7',
1136 silly registry.get     vary: 'Accept',
1136 silly registry.get     'content-length': '0',
1136 silly registry.get     'keep-alive': 'timeout=10, max=30',
1136 silly registry.get     connection: 'Keep-Alive' } ]
1137 verbose etag buffers from cache
1138 http 200 https://registry.npmjs.org/esprima
1139 silly registry.get cb [ 200,
1139 silly registry.get   { date: 'Tue, 20 May 2014 23:00:44 GMT',
1139 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
1139 silly registry.get     etag: '"2HYYFDQ7ALLAY4YWTQ8ZETHWM"',
1139 silly registry.get     'content-type': 'application/json',
1139 silly registry.get     via: '1.1 varnish',
1139 silly registry.get     'cache-control': 'max-age=1',
1139 silly registry.get     'content-length': '32060',
1139 silly registry.get     'accept-ranges': 'bytes',
1139 silly registry.get     age: '16',
1139 silly registry.get     'x-served-by': 'cache-v44-ASH, cache-jfk1031-JFK',
1139 silly registry.get     'x-cache': 'HIT, HIT',
1139 silly registry.get     'x-cache-hits': '17, 1',
1139 silly registry.get     'x-timer': 'S1400626844.227762461,VS0,VS5,VE5,VE470',
1139 silly registry.get     vary: 'Accept',
1139 silly registry.get     'keep-alive': 'timeout=10, max=17',
1139 silly registry.get     connection: 'Keep-Alive' } ]
1140 http 304 https://registry.npmjs.org/chainsaw
1141 silly registry.get cb [ 304,
1141 silly registry.get   { date: 'Tue, 20 May 2014 23:00:45 GMT',
1141 silly registry.get     server: 'Apache',
1141 silly registry.get     via: '1.1 varnish',
1141 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:45 GMT',
1141 silly registry.get     'cache-control': 'max-age=1',
1141 silly registry.get     etag: '"CQRSG52HYGJVHALYIYBOLIG9G"',
1141 silly registry.get     'x-served-by': 'cache-jfk1026-JFK',
1141 silly registry.get     'x-cache': 'HIT',
1141 silly registry.get     'x-cache-hits': '1',
1141 silly registry.get     'x-timer': 'S1400626845.961663485,VS0,VE7',
1141 silly registry.get     vary: 'Accept',
1141 silly registry.get     'content-length': '0',
1141 silly registry.get     'keep-alive': 'timeout=10, max=35',
1141 silly registry.get     connection: 'Keep-Alive' } ]
1142 verbose etag chainsaw from cache
1143 verbose url raw traverse
1144 verbose url resolving [ 'https://registry.npmjs.org/', './traverse' ]
1145 verbose url resolved https://registry.npmjs.org/traverse
1146 info trying registry request attempt 1 at 20:00:49
1147 verbose etag "41BK0X80520QBYF5DW43KNJGX"
1148 http GET https://registry.npmjs.org/traverse
1149 http 304 https://registry.npmjs.org/async
1150 silly registry.get cb [ 304,
1150 silly registry.get   { date: 'Tue, 20 May 2014 23:00:46 GMT',
1150 silly registry.get     server: 'Apache',
1150 silly registry.get     via: '1.1 varnish',
1150 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:46 GMT',
1150 silly registry.get     'cache-control': 'max-age=1',
1150 silly registry.get     etag: '"7FQMJTMF88EDGEIUF6FBGCLOI"',
1150 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
1150 silly registry.get     'x-cache': 'HIT',
1150 silly registry.get     'x-cache-hits': '1',
1150 silly registry.get     'x-timer': 'S1400626846.086151361,VS0,VE1',
1150 silly registry.get     vary: 'Accept',
1150 silly registry.get     'content-length': '0',
1150 silly registry.get     'keep-alive': 'timeout=10, max=21',
1150 silly registry.get     connection: 'Keep-Alive' } ]
1151 verbose etag async from cache
1152 http 304 https://registry.npmjs.org/source-map
1153 silly registry.get cb [ 304,
1153 silly registry.get   { date: 'Tue, 20 May 2014 23:00:46 GMT',
1153 silly registry.get     server: 'Apache',
1153 silly registry.get     via: '1.1 varnish',
1153 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:46 GMT',
1153 silly registry.get     'cache-control': 'max-age=1',
1153 silly registry.get     etag: '"8ANCV3RWS7H3RZ8BR64ARCR28"',
1153 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
1153 silly registry.get     'x-cache': 'HIT',
1153 silly registry.get     'x-cache-hits': '1',
1153 silly registry.get     'x-timer': 'S1400626846.824601412,VS0,VE7',
1153 silly registry.get     vary: 'Accept',
1153 silly registry.get     'content-length': '0',
1153 silly registry.get     'keep-alive': 'timeout=10, max=29',
1153 silly registry.get     connection: 'Keep-Alive' } ]
1154 verbose etag source-map from cache
1155 verbose url raw amdefine
1156 verbose url resolving [ 'https://registry.npmjs.org/', './amdefine' ]
1157 verbose url resolved https://registry.npmjs.org/amdefine
1158 info trying registry request attempt 1 at 20:00:49
1159 verbose etag "AIUP666S38PGJM2AVPD28X9YX"
1160 http GET https://registry.npmjs.org/amdefine
1161 http 304 https://registry.npmjs.org/uglify-to-browserify
1162 silly registry.get cb [ 304,
1162 silly registry.get   { date: 'Tue, 20 May 2014 23:00:47 GMT',
1162 silly registry.get     server: 'Apache',
1162 silly registry.get     via: '1.1 varnish',
1162 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:47 GMT',
1162 silly registry.get     'cache-control': 'max-age=1',
1162 silly registry.get     etag: '"14ZOWXXYNOUHCBA3EDYFH6O08"',
1162 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
1162 silly registry.get     'x-cache': 'HIT',
1162 silly registry.get     'x-cache-hits': '1',
1162 silly registry.get     'x-timer': 'S1400626847.149717093,VS0,VE7',
1162 silly registry.get     vary: 'Accept',
1162 silly registry.get     'content-length': '0',
1162 silly registry.get     'keep-alive': 'timeout=10, max=16',
1162 silly registry.get     connection: 'Keep-Alive' } ]
1163 verbose etag uglify-to-browserify from cache
1164 http 304 https://registry.npmjs.org/uglify-to-browserify
1165 silly registry.get cb [ 304,
1165 silly registry.get   { date: 'Tue, 20 May 2014 23:00:47 GMT',
1165 silly registry.get     server: 'Apache',
1165 silly registry.get     via: '1.1 varnish',
1165 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:47 GMT',
1165 silly registry.get     'cache-control': 'max-age=1',
1165 silly registry.get     etag: '"14ZOWXXYNOUHCBA3EDYFH6O08"',
1165 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
1165 silly registry.get     'x-cache': 'HIT',
1165 silly registry.get     'x-cache-hits': '1',
1165 silly registry.get     'x-timer': 'S1400626847.465054750,VS0,VE0',
1165 silly registry.get     vary: 'Accept',
1165 silly registry.get     'content-length': '0',
1165 silly registry.get     'keep-alive': 'timeout=10, max=24',
1165 silly registry.get     connection: 'Keep-Alive' } ]
1166 verbose etag uglify-to-browserify from cache
1167 http 304 https://registry.npmjs.org/lodash._isnative
1168 silly registry.get cb [ 304,
1168 silly registry.get   { date: 'Tue, 20 May 2014 23:00:47 GMT',
1168 silly registry.get     server: 'Apache',
1168 silly registry.get     via: '1.1 varnish',
1168 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:47 GMT',
1168 silly registry.get     'cache-control': 'max-age=1',
1168 silly registry.get     etag: '"EBMU9S41O8ET9HEFPWRZHF7A4"',
1168 silly registry.get     'x-served-by': 'cache-jfk1026-JFK',
1168 silly registry.get     'x-cache': 'HIT',
1168 silly registry.get     'x-cache-hits': '1',
1168 silly registry.get     'x-timer': 'S1400626847.555706024,VS0,VE99',
1168 silly registry.get     vary: 'Accept',
1168 silly registry.get     'content-length': '0',
1168 silly registry.get     'keep-alive': 'timeout=10, max=34',
1168 silly registry.get     connection: 'Keep-Alive' } ]
1169 verbose etag lodash._isnative from cache
1170 http 304 https://registry.npmjs.org/lodash._objecttypes
1171 silly registry.get cb [ 304,
1171 silly registry.get   { date: 'Tue, 20 May 2014 23:00:47 GMT',
1171 silly registry.get     server: 'Apache',
1171 silly registry.get     via: '1.1 varnish',
1171 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:47 GMT',
1171 silly registry.get     'cache-control': 'max-age=1',
1171 silly registry.get     etag: '"57EYQ41VEW1BMUYTV230UK895"',
1171 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
1171 silly registry.get     'x-cache': 'HIT',
1171 silly registry.get     'x-cache-hits': '1',
1171 silly registry.get     'x-timer': 'S1400626847.835008860,VS0,VE75',
1171 silly registry.get     vary: 'Accept',
1171 silly registry.get     'content-length': '0',
1171 silly registry.get     'keep-alive': 'timeout=10, max=20',
1171 silly registry.get     connection: 'Keep-Alive' } ]
1172 verbose etag lodash._objecttypes from cache
1173 http 304 https://registry.npmjs.org/amdefine
1174 silly registry.get cb [ 304,
1174 silly registry.get   { date: 'Tue, 20 May 2014 23:00:48 GMT',
1174 silly registry.get     server: 'Apache',
1174 silly registry.get     via: '1.1 varnish',
1174 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:48 GMT',
1174 silly registry.get     'cache-control': 'max-age=1',
1174 silly registry.get     etag: '"AIUP666S38PGJM2AVPD28X9YX"',
1174 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
1174 silly registry.get     'x-cache': 'HIT',
1174 silly registry.get     'x-cache-hits': '1',
1174 silly registry.get     'x-timer': 'S1400626848.147977352,VS0,VE17',
1174 silly registry.get     vary: 'Accept',
1174 silly registry.get     'content-length': '0',
1174 silly registry.get     'keep-alive': 'timeout=10, max=28',
1174 silly registry.get     connection: 'Keep-Alive' } ]
1175 verbose etag amdefine from cache
1176 http 304 https://registry.npmjs.org/traverse
1177 silly registry.get cb [ 304,
1177 silly registry.get   { date: 'Tue, 20 May 2014 23:00:48 GMT',
1177 silly registry.get     server: 'Apache',
1177 silly registry.get     via: '1.1 varnish',
1177 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:48 GMT',
1177 silly registry.get     'cache-control': 'max-age=1',
1177 silly registry.get     etag: '"41BK0X80520QBYF5DW43KNJGX"',
1177 silly registry.get     'x-served-by': 'cache-jfk1031-JFK',
1177 silly registry.get     'x-cache': 'HIT',
1177 silly registry.get     'x-cache-hits': '1',
1177 silly registry.get     'x-timer': 'S1400626848.264484882,VS0,VE32',
1177 silly registry.get     vary: 'Accept',
1177 silly registry.get     'content-length': '0',
1177 silly registry.get     'keep-alive': 'timeout=10, max=15',
1177 silly registry.get     connection: 'Keep-Alive' } ]
1178 verbose etag traverse from cache
1179 http 304 https://registry.npmjs.org/amdefine
1180 silly registry.get cb [ 304,
1180 silly registry.get   { date: 'Tue, 20 May 2014 23:00:48 GMT',
1180 silly registry.get     server: 'Apache',
1180 silly registry.get     via: '1.1 varnish',
1180 silly registry.get     'last-modified': 'Tue, 20 May 2014 23:00:48 GMT',
1180 silly registry.get     'cache-control': 'max-age=1',
1180 silly registry.get     etag: '"AIUP666S38PGJM2AVPD28X9YX"',
1180 silly registry.get     'x-served-by': 'cache-jfk1033-JFK',
1180 silly registry.get     'x-cache': 'HIT',
1180 silly registry.get     'x-cache-hits': '2',
1180 silly registry.get     'x-timer': 'S1400626848.383031845,VS0,VE0',
1180 silly registry.get     vary: 'Accept',
1180 silly registry.get     'content-length': '0',
1180 silly registry.get     'keep-alive': 'timeout=10, max=23',
1180 silly registry.get     connection: 'Keep-Alive' } ]
1181 verbose etag amdefine from cache
1182 info outdated updating [ [ '/home/maicon/Dev/Projetos/AMEN',
1182 info outdated     'express',
1182 info outdated     '3.4.8',
1182 info outdated     '3.4.8',
1182 info outdated     '4.2.0',
1182 info outdated     '~3.4.4' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN',
1182 info outdated     'mongoose',
1182 info outdated     '3.6.20',
1182 info outdated     '3.6.20',
1182 info outdated     '3.8.10',
1182 info outdated     '~3.6.13' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch',
1182 info outdated     'gaze',
1182 info outdated     '0.5.1',
1182 info outdated     '0.5.1',
1182 info outdated     '0.6.4',
1182 info outdated     '~0.5.1' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch',
1182 info outdated     'async',
1182 info outdated     '0.2.10',
1182 info outdated     '0.2.10',
1182 info outdated     '0.9.0',
1182 info outdated     '~0.2.9' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork/node_modules/noptify',
1182 info outdated     'nopt',
1182 info outdated     '2.0.0',
1182 info outdated     '2.0.0',
1182 info outdated     '2.2.1',
1182 info outdated     '~2.0.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork',
1182 info outdated     'debug',
1182 info outdated     '0.7.4',
1182 info outdated     '0.7.4',
1182 info outdated     '0.8.1',
1182 info outdated     '~0.7.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork',
1182 info outdated     'qs',
1182 info outdated     '0.5.6',
1182 info outdated     '0.5.6',
1182 info outdated     '0.6.6',
1182 info outdated     '~0.5.2' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork',
1182 info outdated     'faye-websocket',
1182 info outdated     '0.4.4',
1182 info outdated     '0.4.4',
1182 info outdated     '0.7.2',
1182 info outdated     '~0.4.3' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-shell/node_modules/chalk',
1182 info outdated     'strip-ansi',
1182 info outdated     '0.1.1',
1182 info outdated     '0.1.1',
1182 info outdated     '0.2.1',
1182 info outdated     '~0.1.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-cli',
1182 info outdated     'resolve',
1182 info outdated     '0.3.1',
1182 info outdated     '0.3.1',
1182 info outdated     '0.7.0',
1182 info outdated     '~0.3.1' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-cli',
1182 info outdated     'nopt',
1182 info outdated     '1.0.10',
1182 info outdated     '1.0.10',
1182 info outdated     '2.2.1',
1182 info outdated     '~1.0.10' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-cli/node_modules/findup-sync',
1182 info outdated     'glob',
1182 info outdated     '3.2.9',
1182 info outdated     '3.2.10',
1182 info outdated     '3.2.10',
1182 info outdated     '~3.2.9' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower',
1182 info outdated     'fstream-ignore',
1182 info outdated     '0.0.7',
1182 info outdated     '0.0.8',
1182 info outdated     '0.0.8',
1182 info outdated     '~0.0.6' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower',
1182 info outdated     'glob',
1182 info outdated     '3.2.9',
1182 info outdated     '3.2.10',
1182 info outdated     '3.2.10',
1182 info outdated     '~3.2.9' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower',
1182 info outdated     'inquirer',
1182 info outdated     '0.4.1',
1182 info outdated     '0.4.1',
1182 info outdated     '0.5.0',
1182 info outdated     '~0.4.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower',
1182 info outdated     'handlebars',
1182 info outdated     '1.3.0',
1182 info outdated     '1.3.0',
1182 info outdated     '2.0.0-alpha.4',
1182 info outdated     '~1.3.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower',
1182 info outdated     'mkdirp',
1182 info outdated     '0.3.5',
1182 info outdated     '0.3.5',
1182 info outdated     '0.5.0',
1182 info outdated     '~0.3.5' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower',
1182 info outdated     'semver',
1182 info outdated     '2.2.1',
1182 info outdated     '2.2.1',
1182 info outdated     '2.3.0',
1182 info outdated     '~2.2.1' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower',
1182 info outdated     'request',
1182 info outdated     '2.34.0',
1182 info outdated     '2.34.0',
1182 info outdated     '2.36.0',
1182 info outdated     '~2.34.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-json',
1182 info outdated     'intersect',
1182 info outdated     '0.0.3',
1182 info outdated     '0.0.3',
1182 info outdated     '0.1.0',
1182 info outdated     '~0.0.3' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/fstream',
1182 info outdated     'mkdirp',
1182 info outdated     '0.3.5',
1182 info outdated     '0.3.5',
1182 info outdated     '0.5.0',
1182 info outdated     '0.3' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client',
1182 info outdated     'async',
1182 info outdated     '0.2.10',
1182 info outdated     '0.2.10',
1182 info outdated     '0.9.0',
1182 info outdated     '~0.2.8' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client',
1182 info outdated     'bower-config',
1182 info outdated     '0.4.5',
1182 info outdated     '0.4.5',
1182 info outdated     '0.5.0',
1182 info outdated     '~0.4.3' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client',
1182 info outdated     'lru-cache',
1182 info outdated     '2.3.1',
1182 info outdated     '2.3.1',
1182 info outdated     '2.5.0',
1182 info outdated     '~2.3.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client',
1182 info outdated     'request-replay',
1182 info outdated     '0.2.0',
1182 info outdated     '0.2.0',
1182 info outdated     '0.3.0',
1182 info outdated     '~0.2.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client',
1182 info outdated     'request',
1182 info outdated     '2.27.0',
1182 info outdated     '2.27.0',
1182 info outdated     '2.36.0',
1182 info outdated     '~2.27.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client',
1182 info outdated     'mkdirp',
1182 info outdated     '0.3.5',
1182 info outdated     '0.3.5',
1182 info outdated     '0.5.0',
1182 info outdated     '~0.3.5' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/p-throttler',
1182 info outdated     'q',
1182 info outdated     '0.9.7',
1182 info outdated     '0.9.7',
1182 info outdated     '1.0.1',
1182 info outdated     '~0.9.2' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/chalk',
1182 info outdated     'strip-ansi',
1182 info outdated     '0.1.1',
1182 info outdated     '0.1.1',
1182 info outdated     '0.2.1',
1182 info outdated     '~0.1.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/shell-quote',
1182 info outdated     'array-filter',
1182 info outdated     '0.0.1',
1182 info outdated     '0.0.1',
1182 info outdated     '0.2.0',
1182 info outdated     '~0.0.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/update-notifier',
1182 info outdated     'request',
1182 info outdated     '2.27.0',
1182 info outdated     '2.27.0',
1182 info outdated     '2.36.0',
1182 info outdated     '~2.27.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/update-notifier',
1182 info outdated     'semver',
1182 info outdated     '2.1.0',
1182 info outdated     '2.1.0',
1182 info outdated     '2.3.0',
1182 info outdated     '~2.1.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/update-notifier',
1182 info outdated     'configstore',
1182 info outdated     '0.2.3',
1182 info outdated     '0.2.3',
1182 info outdated     '0.3.0',
1182 info outdated     '~0.2.2' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-config',
1182 info outdated     'mout',
1182 info outdated     '0.6.0',
1182 info outdated     '0.6.0',
1182 info outdated     '0.9.1',
1182 info outdated     '~0.6.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-config/node_modules/optimist',
1182 info outdated     'minimist',
1182 info outdated     '0.0.10',
1182 info outdated     '0.0.10',
1182 info outdated     '0.1.0',
1182 info outdated     '~0.0.1' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/cardinal',
1182 info outdated     'ansicolors',
1182 info outdated     '0.2.1',
1182 info outdated     '0.2.1',
1182 info outdated     '0.3.2',
1182 info outdated     '~0.2.1' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/cardinal/node_modules/redeyed',
1182 info outdated     'esprima',
1182 info outdated     '1.0.4',
1182 info outdated     '1.0.4',
1182 info outdated     '1.2.2',
1182 info outdated     '~1.0.4' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight',
1182 info outdated     'async',
1182 info outdated     '0.2.10',
1182 info outdated     '0.2.10',
1182 info outdated     '0.9.0',
1182 info outdated     '~0.2.9' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight',
1182 info outdated     'inquirer',
1182 info outdated     '0.4.1',
1182 info outdated     '0.4.1',
1182 info outdated     '0.5.0',
1182 info outdated     '~0.4.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight',
1182 info outdated     'object-assign',
1182 info outdated     '0.1.2',
1182 info outdated     '0.1.2',
1182 info outdated     '0.3.1',
1182 info outdated     '~0.1.2' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight',
1182 info outdated     'configstore',
1182 info outdated     '0.2.3',
1182 info outdated     '0.2.3',
1182 info outdated     '0.3.0',
1182 info outdated     '~0.2.1' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight',
1182 info outdated     'request',
1182 info outdated     '2.27.0',
1182 info outdated     '2.27.0',
1182 info outdated     '2.36.0',
1182 info outdated     '~2.27.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip',
1182 info outdated     'touch',
1182 info outdated     '0.0.2',
1182 info outdated     '0.0.2',
1182 info outdated     '0.0.3',
1182 info outdated     '0.0.2' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip',
1182 info outdated     'readable-stream',
1182 info outdated     '1.1.13-1',
1182 info outdated     '1.1.13-1',
1182 info outdated     '1.0.27-1',
1182 info outdated     '~1.1.8' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip/node_modules/binary/node_modules/chainsaw',
1182 info outdated     'traverse',
1182 info outdated     '0.3.9',
1182 info outdated     '0.3.9',
1182 info outdated     '0.6.6',
1182 info outdated     '>=0.3.0 <0.4' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/jade',
1182 info outdated     'transformers',
1182 info outdated     '2.1.0',
1182 info outdated     '2.1.0',
1182 info outdated     '3.0.0',
1182 info outdated     '2.1.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/jade',
1182 info outdated     'mkdirp',
1182 info outdated     '0.3.5',
1182 info outdated     '0.3.5',
1182 info outdated     '0.5.0',
1182 info outdated     '~0.3.5' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/jade',
1182 info outdated     'commander',
1182 info outdated     '2.1.0',
1182 info outdated     '2.1.0',
1182 info outdated     '2.2.0',
1182 info outdated     '2.1.0' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/monocle',
1182 info outdated     'readdirp',
1182 info outdated     '0.2.5',
1182 info outdated     '0.2.5',
1182 info outdated     '1.0.1',
1182 info outdated     '~0.2.3' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/with/node_modules/uglify-js',
1182 info outdated     'optimist',
1182 info outdated     '0.3.7',
1182 info outdated     '0.3.7',
1182 info outdated     '0.6.1',
1182 info outdated     '~0.3.5' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/with/node_modules/uglify-js',
1182 info outdated     'async',
1182 info outdated     '0.2.10',
1182 info outdated     '0.2.10',
1182 info outdated     '0.9.0',
1182 info outdated     '~0.2.6' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/constantinople/node_modules/uglify-js',
1182 info outdated     'optimist',
1182 info outdated     '0.3.7',
1182 info outdated     '0.3.7',
1182 info outdated     '0.6.1',
1182 info outdated     '~0.3.5' ],
1182 info outdated   [ '/home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/constantinople/node_modules/uglify-js',
1182 info outdated     'async',
1182 info outdated     '0.2.10',
1182 info outdated     '0.2.10',
1182 info outdated     '0.9.0',
1182 info outdated     '~0.2.6' ] ]
1183 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN', [ 'express@3.4.8' ] ]
1184 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN', [ 'mongoose@3.6.20' ] ]
1185 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch',
1185 verbose install   [ 'gaze@0.5.1' ] ]
1186 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch',
1186 verbose install   [ 'async@0.2.10' ] ]
1187 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork/node_modules/noptify',
1187 verbose install   [ 'nopt@2.0.0' ] ]
1188 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork',
1188 verbose install   [ 'debug@0.7.4' ] ]
1189 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork',
1189 verbose install   [ 'qs@0.5.6' ] ]
1190 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch/node_modules/tiny-lr-fork',
1190 verbose install   [ 'faye-websocket@0.4.4' ] ]
1191 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-shell/node_modules/chalk',
1191 verbose install   [ 'strip-ansi@0.1.1' ] ]
1192 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-cli',
1192 verbose install   [ 'resolve@0.3.1' ] ]
1193 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-cli',
1193 verbose install   [ 'nopt@1.0.10' ] ]
1194 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-cli/node_modules/findup-sync',
1194 verbose install   [ 'glob@3.2.10' ] ]
1195 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower',
1195 verbose install   [ 'fstream-ignore@0.0.8' ] ]
1196 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower',
1196 verbose install   [ 'glob@3.2.10' ] ]
1197 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower',
1197 verbose install   [ 'inquirer@0.4.1' ] ]
1198 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower',
1198 verbose install   [ 'handlebars@1.3.0' ] ]
1199 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower',
1199 verbose install   [ 'mkdirp@0.3.5' ] ]
1200 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower',
1200 verbose install   [ 'semver@2.2.1' ] ]
1201 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower',
1201 verbose install   [ 'request@2.34.0' ] ]
1202 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-json',
1202 verbose install   [ 'intersect@0.0.3' ] ]
1203 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/fstream',
1203 verbose install   [ 'mkdirp@0.3.5' ] ]
1204 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client',
1204 verbose install   [ 'async@0.2.10' ] ]
1205 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client',
1205 verbose install   [ 'bower-config@0.4.5' ] ]
1206 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client',
1206 verbose install   [ 'lru-cache@2.3.1' ] ]
1207 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client',
1207 verbose install   [ 'request-replay@0.2.0' ] ]
1208 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client',
1208 verbose install   [ 'request@2.27.0' ] ]
1209 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client',
1209 verbose install   [ 'mkdirp@0.3.5' ] ]
1210 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/p-throttler',
1210 verbose install   [ 'q@0.9.7' ] ]
1211 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/chalk',
1211 verbose install   [ 'strip-ansi@0.1.1' ] ]
1212 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/shell-quote',
1212 verbose install   [ 'array-filter@0.0.1' ] ]
1213 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/update-notifier',
1213 verbose install   [ 'request@2.27.0' ] ]
1214 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/update-notifier',
1214 verbose install   [ 'semver@2.1.0' ] ]
1215 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/update-notifier',
1215 verbose install   [ 'configstore@0.2.3' ] ]
1216 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-config',
1216 verbose install   [ 'mout@0.6.0' ] ]
1217 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-config/node_modules/optimist',
1217 verbose install   [ 'minimist@0.0.10' ] ]
1218 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/cardinal',
1218 verbose install   [ 'ansicolors@0.2.1' ] ]
1219 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/cardinal/node_modules/redeyed',
1219 verbose install   [ 'esprima@1.0.4' ] ]
1220 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight',
1220 verbose install   [ 'async@0.2.10' ] ]
1221 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight',
1221 verbose install   [ 'inquirer@0.4.1' ] ]
1222 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight',
1222 verbose install   [ 'object-assign@0.1.2' ] ]
1223 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight',
1223 verbose install   [ 'configstore@0.2.3' ] ]
1224 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight',
1224 verbose install   [ 'request@2.27.0' ] ]
1225 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip',
1225 verbose install   [ 'touch@0.0.2' ] ]
1226 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip',
1226 verbose install   [ 'readable-stream@1.1.13-1' ] ]
1227 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip/node_modules/binary/node_modules/chainsaw',
1227 verbose install   [ 'traverse@0.3.9' ] ]
1228 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/jade',
1228 verbose install   [ 'transformers@2.1.0' ] ]
1229 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/jade',
1229 verbose install   [ 'mkdirp@0.3.5' ] ]
1230 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/jade',
1230 verbose install   [ 'commander@2.1.0' ] ]
1231 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/monocle',
1231 verbose install   [ 'readdirp@0.2.5' ] ]
1232 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/with/node_modules/uglify-js',
1232 verbose install   [ 'optimist@0.3.7' ] ]
1233 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/with/node_modules/uglify-js',
1233 verbose install   [ 'async@0.2.10' ] ]
1234 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/constantinople/node_modules/uglify-js',
1234 verbose install   [ 'optimist@0.3.7' ] ]
1235 verbose install where,what [ '/home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/constantinople/node_modules/uglify-js',
1235 verbose install   [ 'async@0.2.10' ] ]
1236 verbose readDependencies using package.json deps
1237 verbose cache add [ 'express@3.4.8', null ]
1238 verbose cache add name=undefined spec="express@3.4.8" args=["express@3.4.8",null]
1239 verbose parsed url { protocol: null,
1239 verbose parsed url   slashes: null,
1239 verbose parsed url   auth: null,
1239 verbose parsed url   host: null,
1239 verbose parsed url   port: null,
1239 verbose parsed url   hostname: null,
1239 verbose parsed url   hash: null,
1239 verbose parsed url   search: null,
1239 verbose parsed url   query: null,
1239 verbose parsed url   pathname: 'express@3.4.8',
1239 verbose parsed url   path: 'express@3.4.8',
1239 verbose parsed url   href: 'express@3.4.8' }
1240 verbose cache add name="express" spec="3.4.8" args=["express","3.4.8"]
1241 verbose parsed url { protocol: null,
1241 verbose parsed url   slashes: null,
1241 verbose parsed url   auth: null,
1241 verbose parsed url   host: null,
1241 verbose parsed url   port: null,
1241 verbose parsed url   hostname: null,
1241 verbose parsed url   hash: null,
1241 verbose parsed url   search: null,
1241 verbose parsed url   query: null,
1241 verbose parsed url   pathname: '3.4.8',
1241 verbose parsed url   path: '3.4.8',
1241 verbose parsed url   href: '3.4.8' }
1242 verbose addNamed [ 'express', '3.4.8' ]
1243 verbose addNamed [ '3.4.8', '3.4.8' ]
1244 verbose readDependencies using package.json deps
1245 verbose cache add [ 'mongoose@3.6.20', null ]
1246 verbose cache add name=undefined spec="mongoose@3.6.20" args=["mongoose@3.6.20",null]
1247 verbose parsed url { protocol: null,
1247 verbose parsed url   slashes: null,
1247 verbose parsed url   auth: null,
1247 verbose parsed url   host: null,
1247 verbose parsed url   port: null,
1247 verbose parsed url   hostname: null,
1247 verbose parsed url   hash: null,
1247 verbose parsed url   search: null,
1247 verbose parsed url   query: null,
1247 verbose parsed url   pathname: 'mongoose@3.6.20',
1247 verbose parsed url   path: 'mongoose@3.6.20',
1247 verbose parsed url   href: 'mongoose@3.6.20' }
1248 verbose cache add name="mongoose" spec="3.6.20" args=["mongoose","3.6.20"]
1249 verbose parsed url { protocol: null,
1249 verbose parsed url   slashes: null,
1249 verbose parsed url   auth: null,
1249 verbose parsed url   host: null,
1249 verbose parsed url   port: null,
1249 verbose parsed url   hostname: null,
1249 verbose parsed url   hash: null,
1249 verbose parsed url   search: null,
1249 verbose parsed url   query: null,
1249 verbose parsed url   pathname: '3.6.20',
1249 verbose parsed url   path: '3.6.20',
1249 verbose parsed url   href: '3.6.20' }
1250 verbose addNamed [ 'mongoose', '3.6.20' ]
1251 verbose addNamed [ '3.6.20', '3.6.20' ]
1252 verbose readDependencies using package.json deps
1253 verbose cache add [ 'gaze@0.5.1', null ]
1254 verbose cache add name=undefined spec="gaze@0.5.1" args=["gaze@0.5.1",null]
1255 verbose parsed url { protocol: null,
1255 verbose parsed url   slashes: null,
1255 verbose parsed url   auth: null,
1255 verbose parsed url   host: null,
1255 verbose parsed url   port: null,
1255 verbose parsed url   hostname: null,
1255 verbose parsed url   hash: null,
1255 verbose parsed url   search: null,
1255 verbose parsed url   query: null,
1255 verbose parsed url   pathname: 'gaze@0.5.1',
1255 verbose parsed url   path: 'gaze@0.5.1',
1255 verbose parsed url   href: 'gaze@0.5.1' }
1256 verbose cache add name="gaze" spec="0.5.1" args=["gaze","0.5.1"]
1257 verbose parsed url { protocol: null,
1257 verbose parsed url   slashes: null,
1257 verbose parsed url   auth: null,
1257 verbose parsed url   host: null,
1257 verbose parsed url   port: null,
1257 verbose parsed url   hostname: null,
1257 verbose parsed url   hash: null,
1257 verbose parsed url   search: null,
1257 verbose parsed url   query: null,
1257 verbose parsed url   pathname: '0.5.1',
1257 verbose parsed url   path: '0.5.1',
1257 verbose parsed url   href: '0.5.1' }
1258 verbose addNamed [ 'gaze', '0.5.1' ]
1259 verbose addNamed [ '0.5.1', '0.5.1' ]
1260 verbose readDependencies using package.json deps
1261 verbose cache add [ 'async@0.2.10', null ]
1262 verbose cache add name=undefined spec="async@0.2.10" args=["async@0.2.10",null]
1263 verbose parsed url { protocol: null,
1263 verbose parsed url   slashes: null,
1263 verbose parsed url   auth: null,
1263 verbose parsed url   host: null,
1263 verbose parsed url   port: null,
1263 verbose parsed url   hostname: null,
1263 verbose parsed url   hash: null,
1263 verbose parsed url   search: null,
1263 verbose parsed url   query: null,
1263 verbose parsed url   pathname: 'async@0.2.10',
1263 verbose parsed url   path: 'async@0.2.10',
1263 verbose parsed url   href: 'async@0.2.10' }
1264 verbose cache add name="async" spec="0.2.10" args=["async","0.2.10"]
1265 verbose parsed url { protocol: null,
1265 verbose parsed url   slashes: null,
1265 verbose parsed url   auth: null,
1265 verbose parsed url   host: null,
1265 verbose parsed url   port: null,
1265 verbose parsed url   hostname: null,
1265 verbose parsed url   hash: null,
1265 verbose parsed url   search: null,
1265 verbose parsed url   query: null,
1265 verbose parsed url   pathname: '0.2.10',
1265 verbose parsed url   path: '0.2.10',
1265 verbose parsed url   href: '0.2.10' }
1266 verbose addNamed [ 'async', '0.2.10' ]
1267 verbose addNamed [ '0.2.10', '0.2.10' ]
1268 verbose readDependencies using package.json deps
1269 verbose cache add [ 'nopt@2.0.0', null ]
1270 verbose cache add name=undefined spec="nopt@2.0.0" args=["nopt@2.0.0",null]
1271 verbose parsed url { protocol: null,
1271 verbose parsed url   slashes: null,
1271 verbose parsed url   auth: null,
1271 verbose parsed url   host: null,
1271 verbose parsed url   port: null,
1271 verbose parsed url   hostname: null,
1271 verbose parsed url   hash: null,
1271 verbose parsed url   search: null,
1271 verbose parsed url   query: null,
1271 verbose parsed url   pathname: 'nopt@2.0.0',
1271 verbose parsed url   path: 'nopt@2.0.0',
1271 verbose parsed url   href: 'nopt@2.0.0' }
1272 verbose cache add name="nopt" spec="2.0.0" args=["nopt","2.0.0"]
1273 verbose parsed url { protocol: null,
1273 verbose parsed url   slashes: null,
1273 verbose parsed url   auth: null,
1273 verbose parsed url   host: null,
1273 verbose parsed url   port: null,
1273 verbose parsed url   hostname: null,
1273 verbose parsed url   hash: null,
1273 verbose parsed url   search: null,
1273 verbose parsed url   query: null,
1273 verbose parsed url   pathname: '2.0.0',
1273 verbose parsed url   path: '2.0.0',
1273 verbose parsed url   href: '2.0.0' }
1274 verbose addNamed [ 'nopt', '2.0.0' ]
1275 verbose addNamed [ '2.0.0', '2.0.0' ]
1276 verbose readDependencies using package.json deps
1277 verbose cache add [ 'debug@0.7.4', null ]
1278 verbose cache add name=undefined spec="debug@0.7.4" args=["debug@0.7.4",null]
1279 verbose parsed url { protocol: null,
1279 verbose parsed url   slashes: null,
1279 verbose parsed url   auth: null,
1279 verbose parsed url   host: null,
1279 verbose parsed url   port: null,
1279 verbose parsed url   hostname: null,
1279 verbose parsed url   hash: null,
1279 verbose parsed url   search: null,
1279 verbose parsed url   query: null,
1279 verbose parsed url   pathname: 'debug@0.7.4',
1279 verbose parsed url   path: 'debug@0.7.4',
1279 verbose parsed url   href: 'debug@0.7.4' }
1280 verbose cache add name="debug" spec="0.7.4" args=["debug","0.7.4"]
1281 verbose parsed url { protocol: null,
1281 verbose parsed url   slashes: null,
1281 verbose parsed url   auth: null,
1281 verbose parsed url   host: null,
1281 verbose parsed url   port: null,
1281 verbose parsed url   hostname: null,
1281 verbose parsed url   hash: null,
1281 verbose parsed url   search: null,
1281 verbose parsed url   query: null,
1281 verbose parsed url   pathname: '0.7.4',
1281 verbose parsed url   path: '0.7.4',
1281 verbose parsed url   href: '0.7.4' }
1282 verbose addNamed [ 'debug', '0.7.4' ]
1283 verbose addNamed [ '0.7.4', '0.7.4' ]
1284 verbose readDependencies using package.json deps
1285 verbose cache add [ 'qs@0.5.6', null ]
1286 verbose cache add name=undefined spec="qs@0.5.6" args=["qs@0.5.6",null]
1287 verbose parsed url { protocol: null,
1287 verbose parsed url   slashes: null,
1287 verbose parsed url   auth: null,
1287 verbose parsed url   host: null,
1287 verbose parsed url   port: null,
1287 verbose parsed url   hostname: null,
1287 verbose parsed url   hash: null,
1287 verbose parsed url   search: null,
1287 verbose parsed url   query: null,
1287 verbose parsed url   pathname: 'qs@0.5.6',
1287 verbose parsed url   path: 'qs@0.5.6',
1287 verbose parsed url   href: 'qs@0.5.6' }
1288 verbose cache add name="qs" spec="0.5.6" args=["qs","0.5.6"]
1289 verbose parsed url { protocol: null,
1289 verbose parsed url   slashes: null,
1289 verbose parsed url   auth: null,
1289 verbose parsed url   host: null,
1289 verbose parsed url   port: null,
1289 verbose parsed url   hostname: null,
1289 verbose parsed url   hash: null,
1289 verbose parsed url   search: null,
1289 verbose parsed url   query: null,
1289 verbose parsed url   pathname: '0.5.6',
1289 verbose parsed url   path: '0.5.6',
1289 verbose parsed url   href: '0.5.6' }
1290 verbose addNamed [ 'qs', '0.5.6' ]
1291 verbose addNamed [ '0.5.6', '0.5.6' ]
1292 verbose readDependencies using package.json deps
1293 verbose cache add [ 'faye-websocket@0.4.4', null ]
1294 verbose cache add name=undefined spec="faye-websocket@0.4.4" args=["faye-websocket@0.4.4",null]
1295 verbose parsed url { protocol: null,
1295 verbose parsed url   slashes: null,
1295 verbose parsed url   auth: null,
1295 verbose parsed url   host: null,
1295 verbose parsed url   port: null,
1295 verbose parsed url   hostname: null,
1295 verbose parsed url   hash: null,
1295 verbose parsed url   search: null,
1295 verbose parsed url   query: null,
1295 verbose parsed url   pathname: 'faye-websocket@0.4.4',
1295 verbose parsed url   path: 'faye-websocket@0.4.4',
1295 verbose parsed url   href: 'faye-websocket@0.4.4' }
1296 verbose cache add name="faye-websocket" spec="0.4.4" args=["faye-websocket","0.4.4"]
1297 verbose parsed url { protocol: null,
1297 verbose parsed url   slashes: null,
1297 verbose parsed url   auth: null,
1297 verbose parsed url   host: null,
1297 verbose parsed url   port: null,
1297 verbose parsed url   hostname: null,
1297 verbose parsed url   hash: null,
1297 verbose parsed url   search: null,
1297 verbose parsed url   query: null,
1297 verbose parsed url   pathname: '0.4.4',
1297 verbose parsed url   path: '0.4.4',
1297 verbose parsed url   href: '0.4.4' }
1298 verbose addNamed [ 'faye-websocket', '0.4.4' ]
1299 verbose addNamed [ '0.4.4', '0.4.4' ]
1300 verbose readDependencies using package.json deps
1301 verbose cache add [ 'strip-ansi@0.1.1', null ]
1302 verbose cache add name=undefined spec="strip-ansi@0.1.1" args=["strip-ansi@0.1.1",null]
1303 verbose parsed url { protocol: null,
1303 verbose parsed url   slashes: null,
1303 verbose parsed url   auth: null,
1303 verbose parsed url   host: null,
1303 verbose parsed url   port: null,
1303 verbose parsed url   hostname: null,
1303 verbose parsed url   hash: null,
1303 verbose parsed url   search: null,
1303 verbose parsed url   query: null,
1303 verbose parsed url   pathname: 'strip-ansi@0.1.1',
1303 verbose parsed url   path: 'strip-ansi@0.1.1',
1303 verbose parsed url   href: 'strip-ansi@0.1.1' }
1304 verbose cache add name="strip-ansi" spec="0.1.1" args=["strip-ansi","0.1.1"]
1305 verbose parsed url { protocol: null,
1305 verbose parsed url   slashes: null,
1305 verbose parsed url   auth: null,
1305 verbose parsed url   host: null,
1305 verbose parsed url   port: null,
1305 verbose parsed url   hostname: null,
1305 verbose parsed url   hash: null,
1305 verbose parsed url   search: null,
1305 verbose parsed url   query: null,
1305 verbose parsed url   pathname: '0.1.1',
1305 verbose parsed url   path: '0.1.1',
1305 verbose parsed url   href: '0.1.1' }
1306 verbose addNamed [ 'strip-ansi', '0.1.1' ]
1307 verbose addNamed [ '0.1.1', '0.1.1' ]
1308 verbose readDependencies using package.json deps
1309 verbose cache add [ 'resolve@0.3.1', null ]
1310 verbose cache add name=undefined spec="resolve@0.3.1" args=["resolve@0.3.1",null]
1311 verbose parsed url { protocol: null,
1311 verbose parsed url   slashes: null,
1311 verbose parsed url   auth: null,
1311 verbose parsed url   host: null,
1311 verbose parsed url   port: null,
1311 verbose parsed url   hostname: null,
1311 verbose parsed url   hash: null,
1311 verbose parsed url   search: null,
1311 verbose parsed url   query: null,
1311 verbose parsed url   pathname: 'resolve@0.3.1',
1311 verbose parsed url   path: 'resolve@0.3.1',
1311 verbose parsed url   href: 'resolve@0.3.1' }
1312 verbose cache add name="resolve" spec="0.3.1" args=["resolve","0.3.1"]
1313 verbose parsed url { protocol: null,
1313 verbose parsed url   slashes: null,
1313 verbose parsed url   auth: null,
1313 verbose parsed url   host: null,
1313 verbose parsed url   port: null,
1313 verbose parsed url   hostname: null,
1313 verbose parsed url   hash: null,
1313 verbose parsed url   search: null,
1313 verbose parsed url   query: null,
1313 verbose parsed url   pathname: '0.3.1',
1313 verbose parsed url   path: '0.3.1',
1313 verbose parsed url   href: '0.3.1' }
1314 verbose addNamed [ 'resolve', '0.3.1' ]
1315 verbose addNamed [ '0.3.1', '0.3.1' ]
1316 verbose readDependencies using package.json deps
1317 verbose cache add [ 'nopt@1.0.10', null ]
1318 verbose cache add name=undefined spec="nopt@1.0.10" args=["nopt@1.0.10",null]
1319 verbose parsed url { protocol: null,
1319 verbose parsed url   slashes: null,
1319 verbose parsed url   auth: null,
1319 verbose parsed url   host: null,
1319 verbose parsed url   port: null,
1319 verbose parsed url   hostname: null,
1319 verbose parsed url   hash: null,
1319 verbose parsed url   search: null,
1319 verbose parsed url   query: null,
1319 verbose parsed url   pathname: 'nopt@1.0.10',
1319 verbose parsed url   path: 'nopt@1.0.10',
1319 verbose parsed url   href: 'nopt@1.0.10' }
1320 verbose cache add name="nopt" spec="1.0.10" args=["nopt","1.0.10"]
1321 verbose parsed url { protocol: null,
1321 verbose parsed url   slashes: null,
1321 verbose parsed url   auth: null,
1321 verbose parsed url   host: null,
1321 verbose parsed url   port: null,
1321 verbose parsed url   hostname: null,
1321 verbose parsed url   hash: null,
1321 verbose parsed url   search: null,
1321 verbose parsed url   query: null,
1321 verbose parsed url   pathname: '1.0.10',
1321 verbose parsed url   path: '1.0.10',
1321 verbose parsed url   href: '1.0.10' }
1322 verbose addNamed [ 'nopt', '1.0.10' ]
1323 verbose addNamed [ '1.0.10', '1.0.10' ]
1324 verbose readDependencies using package.json deps
1325 verbose cache add [ 'glob@3.2.10', null ]
1326 verbose cache add name=undefined spec="glob@3.2.10" args=["glob@3.2.10",null]
1327 verbose parsed url { protocol: null,
1327 verbose parsed url   slashes: null,
1327 verbose parsed url   auth: null,
1327 verbose parsed url   host: null,
1327 verbose parsed url   port: null,
1327 verbose parsed url   hostname: null,
1327 verbose parsed url   hash: null,
1327 verbose parsed url   search: null,
1327 verbose parsed url   query: null,
1327 verbose parsed url   pathname: 'glob@3.2.10',
1327 verbose parsed url   path: 'glob@3.2.10',
1327 verbose parsed url   href: 'glob@3.2.10' }
1328 verbose cache add name="glob" spec="3.2.10" args=["glob","3.2.10"]
1329 verbose parsed url { protocol: null,
1329 verbose parsed url   slashes: null,
1329 verbose parsed url   auth: null,
1329 verbose parsed url   host: null,
1329 verbose parsed url   port: null,
1329 verbose parsed url   hostname: null,
1329 verbose parsed url   hash: null,
1329 verbose parsed url   search: null,
1329 verbose parsed url   query: null,
1329 verbose parsed url   pathname: '3.2.10',
1329 verbose parsed url   path: '3.2.10',
1329 verbose parsed url   href: '3.2.10' }
1330 verbose addNamed [ 'glob', '3.2.10' ]
1331 verbose addNamed [ '3.2.10', '3.2.10' ]
1332 verbose readDependencies using package.json deps
1333 verbose cache add [ 'fstream-ignore@0.0.8', null ]
1334 verbose cache add name=undefined spec="fstream-ignore@0.0.8" args=["fstream-ignore@0.0.8",null]
1335 verbose parsed url { protocol: null,
1335 verbose parsed url   slashes: null,
1335 verbose parsed url   auth: null,
1335 verbose parsed url   host: null,
1335 verbose parsed url   port: null,
1335 verbose parsed url   hostname: null,
1335 verbose parsed url   hash: null,
1335 verbose parsed url   search: null,
1335 verbose parsed url   query: null,
1335 verbose parsed url   pathname: 'fstream-ignore@0.0.8',
1335 verbose parsed url   path: 'fstream-ignore@0.0.8',
1335 verbose parsed url   href: 'fstream-ignore@0.0.8' }
1336 verbose cache add name="fstream-ignore" spec="0.0.8" args=["fstream-ignore","0.0.8"]
1337 verbose parsed url { protocol: null,
1337 verbose parsed url   slashes: null,
1337 verbose parsed url   auth: null,
1337 verbose parsed url   host: null,
1337 verbose parsed url   port: null,
1337 verbose parsed url   hostname: null,
1337 verbose parsed url   hash: null,
1337 verbose parsed url   search: null,
1337 verbose parsed url   query: null,
1337 verbose parsed url   pathname: '0.0.8',
1337 verbose parsed url   path: '0.0.8',
1337 verbose parsed url   href: '0.0.8' }
1338 verbose addNamed [ 'fstream-ignore', '0.0.8' ]
1339 verbose addNamed [ '0.0.8', '0.0.8' ]
1340 verbose readDependencies using package.json deps
1341 verbose cache add [ 'glob@3.2.10', null ]
1342 verbose cache add name=undefined spec="glob@3.2.10" args=["glob@3.2.10",null]
1343 verbose parsed url { protocol: null,
1343 verbose parsed url   slashes: null,
1343 verbose parsed url   auth: null,
1343 verbose parsed url   host: null,
1343 verbose parsed url   port: null,
1343 verbose parsed url   hostname: null,
1343 verbose parsed url   hash: null,
1343 verbose parsed url   search: null,
1343 verbose parsed url   query: null,
1343 verbose parsed url   pathname: 'glob@3.2.10',
1343 verbose parsed url   path: 'glob@3.2.10',
1343 verbose parsed url   href: 'glob@3.2.10' }
1344 verbose cache add name="glob" spec="3.2.10" args=["glob","3.2.10"]
1345 verbose parsed url { protocol: null,
1345 verbose parsed url   slashes: null,
1345 verbose parsed url   auth: null,
1345 verbose parsed url   host: null,
1345 verbose parsed url   port: null,
1345 verbose parsed url   hostname: null,
1345 verbose parsed url   hash: null,
1345 verbose parsed url   search: null,
1345 verbose parsed url   query: null,
1345 verbose parsed url   pathname: '3.2.10',
1345 verbose parsed url   path: '3.2.10',
1345 verbose parsed url   href: '3.2.10' }
1346 verbose addNamed [ 'glob', '3.2.10' ]
1347 verbose readDependencies using package.json deps
1348 verbose cache add [ 'inquirer@0.4.1', null ]
1349 verbose cache add name=undefined spec="inquirer@0.4.1" args=["inquirer@0.4.1",null]
1350 verbose parsed url { protocol: null,
1350 verbose parsed url   slashes: null,
1350 verbose parsed url   auth: null,
1350 verbose parsed url   host: null,
1350 verbose parsed url   port: null,
1350 verbose parsed url   hostname: null,
1350 verbose parsed url   hash: null,
1350 verbose parsed url   search: null,
1350 verbose parsed url   query: null,
1350 verbose parsed url   pathname: 'inquirer@0.4.1',
1350 verbose parsed url   path: 'inquirer@0.4.1',
1350 verbose parsed url   href: 'inquirer@0.4.1' }
1351 verbose cache add name="inquirer" spec="0.4.1" args=["inquirer","0.4.1"]
1352 verbose parsed url { protocol: null,
1352 verbose parsed url   slashes: null,
1352 verbose parsed url   auth: null,
1352 verbose parsed url   host: null,
1352 verbose parsed url   port: null,
1352 verbose parsed url   hostname: null,
1352 verbose parsed url   hash: null,
1352 verbose parsed url   search: null,
1352 verbose parsed url   query: null,
1352 verbose parsed url   pathname: '0.4.1',
1352 verbose parsed url   path: '0.4.1',
1352 verbose parsed url   href: '0.4.1' }
1353 verbose addNamed [ 'inquirer', '0.4.1' ]
1354 verbose addNamed [ '0.4.1', '0.4.1' ]
1355 verbose readDependencies using package.json deps
1356 verbose cache add [ 'handlebars@1.3.0', null ]
1357 verbose cache add name=undefined spec="handlebars@1.3.0" args=["handlebars@1.3.0",null]
1358 verbose parsed url { protocol: null,
1358 verbose parsed url   slashes: null,
1358 verbose parsed url   auth: null,
1358 verbose parsed url   host: null,
1358 verbose parsed url   port: null,
1358 verbose parsed url   hostname: null,
1358 verbose parsed url   hash: null,
1358 verbose parsed url   search: null,
1358 verbose parsed url   query: null,
1358 verbose parsed url   pathname: 'handlebars@1.3.0',
1358 verbose parsed url   path: 'handlebars@1.3.0',
1358 verbose parsed url   href: 'handlebars@1.3.0' }
1359 verbose cache add name="handlebars" spec="1.3.0" args=["handlebars","1.3.0"]
1360 verbose parsed url { protocol: null,
1360 verbose parsed url   slashes: null,
1360 verbose parsed url   auth: null,
1360 verbose parsed url   host: null,
1360 verbose parsed url   port: null,
1360 verbose parsed url   hostname: null,
1360 verbose parsed url   hash: null,
1360 verbose parsed url   search: null,
1360 verbose parsed url   query: null,
1360 verbose parsed url   pathname: '1.3.0',
1360 verbose parsed url   path: '1.3.0',
1360 verbose parsed url   href: '1.3.0' }
1361 verbose addNamed [ 'handlebars', '1.3.0' ]
1362 verbose addNamed [ '1.3.0', '1.3.0' ]
1363 verbose readDependencies using package.json deps
1364 verbose cache add [ 'mkdirp@0.3.5', null ]
1365 verbose cache add name=undefined spec="mkdirp@0.3.5" args=["mkdirp@0.3.5",null]
1366 verbose parsed url { protocol: null,
1366 verbose parsed url   slashes: null,
1366 verbose parsed url   auth: null,
1366 verbose parsed url   host: null,
1366 verbose parsed url   port: null,
1366 verbose parsed url   hostname: null,
1366 verbose parsed url   hash: null,
1366 verbose parsed url   search: null,
1366 verbose parsed url   query: null,
1366 verbose parsed url   pathname: 'mkdirp@0.3.5',
1366 verbose parsed url   path: 'mkdirp@0.3.5',
1366 verbose parsed url   href: 'mkdirp@0.3.5' }
1367 verbose cache add name="mkdirp" spec="0.3.5" args=["mkdirp","0.3.5"]
1368 verbose parsed url { protocol: null,
1368 verbose parsed url   slashes: null,
1368 verbose parsed url   auth: null,
1368 verbose parsed url   host: null,
1368 verbose parsed url   port: null,
1368 verbose parsed url   hostname: null,
1368 verbose parsed url   hash: null,
1368 verbose parsed url   search: null,
1368 verbose parsed url   query: null,
1368 verbose parsed url   pathname: '0.3.5',
1368 verbose parsed url   path: '0.3.5',
1368 verbose parsed url   href: '0.3.5' }
1369 verbose addNamed [ 'mkdirp', '0.3.5' ]
1370 verbose addNamed [ '0.3.5', '0.3.5' ]
1371 verbose readDependencies using package.json deps
1372 verbose cache add [ 'semver@2.2.1', null ]
1373 verbose cache add name=undefined spec="semver@2.2.1" args=["semver@2.2.1",null]
1374 verbose parsed url { protocol: null,
1374 verbose parsed url   slashes: null,
1374 verbose parsed url   auth: null,
1374 verbose parsed url   host: null,
1374 verbose parsed url   port: null,
1374 verbose parsed url   hostname: null,
1374 verbose parsed url   hash: null,
1374 verbose parsed url   search: null,
1374 verbose parsed url   query: null,
1374 verbose parsed url   pathname: 'semver@2.2.1',
1374 verbose parsed url   path: 'semver@2.2.1',
1374 verbose parsed url   href: 'semver@2.2.1' }
1375 verbose cache add name="semver" spec="2.2.1" args=["semver","2.2.1"]
1376 verbose parsed url { protocol: null,
1376 verbose parsed url   slashes: null,
1376 verbose parsed url   auth: null,
1376 verbose parsed url   host: null,
1376 verbose parsed url   port: null,
1376 verbose parsed url   hostname: null,
1376 verbose parsed url   hash: null,
1376 verbose parsed url   search: null,
1376 verbose parsed url   query: null,
1376 verbose parsed url   pathname: '2.2.1',
1376 verbose parsed url   path: '2.2.1',
1376 verbose parsed url   href: '2.2.1' }
1377 verbose addNamed [ 'semver', '2.2.1' ]
1378 verbose addNamed [ '2.2.1', '2.2.1' ]
1379 verbose readDependencies using package.json deps
1380 verbose cache add [ 'request@2.34.0', null ]
1381 verbose cache add name=undefined spec="request@2.34.0" args=["request@2.34.0",null]
1382 verbose parsed url { protocol: null,
1382 verbose parsed url   slashes: null,
1382 verbose parsed url   auth: null,
1382 verbose parsed url   host: null,
1382 verbose parsed url   port: null,
1382 verbose parsed url   hostname: null,
1382 verbose parsed url   hash: null,
1382 verbose parsed url   search: null,
1382 verbose parsed url   query: null,
1382 verbose parsed url   pathname: 'request@2.34.0',
1382 verbose parsed url   path: 'request@2.34.0',
1382 verbose parsed url   href: 'request@2.34.0' }
1383 verbose cache add name="request" spec="2.34.0" args=["request","2.34.0"]
1384 verbose parsed url { protocol: null,
1384 verbose parsed url   slashes: null,
1384 verbose parsed url   auth: null,
1384 verbose parsed url   host: null,
1384 verbose parsed url   port: null,
1384 verbose parsed url   hostname: null,
1384 verbose parsed url   hash: null,
1384 verbose parsed url   search: null,
1384 verbose parsed url   query: null,
1384 verbose parsed url   pathname: '2.34.0',
1384 verbose parsed url   path: '2.34.0',
1384 verbose parsed url   href: '2.34.0' }
1385 verbose addNamed [ 'request', '2.34.0' ]
1386 verbose addNamed [ '2.34.0', '2.34.0' ]
1387 verbose readDependencies using package.json deps
1388 verbose cache add [ 'intersect@0.0.3', null ]
1389 verbose cache add name=undefined spec="intersect@0.0.3" args=["intersect@0.0.3",null]
1390 verbose parsed url { protocol: null,
1390 verbose parsed url   slashes: null,
1390 verbose parsed url   auth: null,
1390 verbose parsed url   host: null,
1390 verbose parsed url   port: null,
1390 verbose parsed url   hostname: null,
1390 verbose parsed url   hash: null,
1390 verbose parsed url   search: null,
1390 verbose parsed url   query: null,
1390 verbose parsed url   pathname: 'intersect@0.0.3',
1390 verbose parsed url   path: 'intersect@0.0.3',
1390 verbose parsed url   href: 'intersect@0.0.3' }
1391 verbose cache add name="intersect" spec="0.0.3" args=["intersect","0.0.3"]
1392 verbose parsed url { protocol: null,
1392 verbose parsed url   slashes: null,
1392 verbose parsed url   auth: null,
1392 verbose parsed url   host: null,
1392 verbose parsed url   port: null,
1392 verbose parsed url   hostname: null,
1392 verbose parsed url   hash: null,
1392 verbose parsed url   search: null,
1392 verbose parsed url   query: null,
1392 verbose parsed url   pathname: '0.0.3',
1392 verbose parsed url   path: '0.0.3',
1392 verbose parsed url   href: '0.0.3' }
1393 verbose addNamed [ 'intersect', '0.0.3' ]
1394 verbose addNamed [ '0.0.3', '0.0.3' ]
1395 verbose readDependencies using package.json deps
1396 verbose cache add [ 'mkdirp@0.3.5', null ]
1397 verbose cache add name=undefined spec="mkdirp@0.3.5" args=["mkdirp@0.3.5",null]
1398 verbose parsed url { protocol: null,
1398 verbose parsed url   slashes: null,
1398 verbose parsed url   auth: null,
1398 verbose parsed url   host: null,
1398 verbose parsed url   port: null,
1398 verbose parsed url   hostname: null,
1398 verbose parsed url   hash: null,
1398 verbose parsed url   search: null,
1398 verbose parsed url   query: null,
1398 verbose parsed url   pathname: 'mkdirp@0.3.5',
1398 verbose parsed url   path: 'mkdirp@0.3.5',
1398 verbose parsed url   href: 'mkdirp@0.3.5' }
1399 verbose cache add name="mkdirp" spec="0.3.5" args=["mkdirp","0.3.5"]
1400 verbose parsed url { protocol: null,
1400 verbose parsed url   slashes: null,
1400 verbose parsed url   auth: null,
1400 verbose parsed url   host: null,
1400 verbose parsed url   port: null,
1400 verbose parsed url   hostname: null,
1400 verbose parsed url   hash: null,
1400 verbose parsed url   search: null,
1400 verbose parsed url   query: null,
1400 verbose parsed url   pathname: '0.3.5',
1400 verbose parsed url   path: '0.3.5',
1400 verbose parsed url   href: '0.3.5' }
1401 verbose addNamed [ 'mkdirp', '0.3.5' ]
1402 verbose readDependencies using package.json deps
1403 verbose cache add [ 'async@0.2.10', null ]
1404 verbose cache add name=undefined spec="async@0.2.10" args=["async@0.2.10",null]
1405 verbose parsed url { protocol: null,
1405 verbose parsed url   slashes: null,
1405 verbose parsed url   auth: null,
1405 verbose parsed url   host: null,
1405 verbose parsed url   port: null,
1405 verbose parsed url   hostname: null,
1405 verbose parsed url   hash: null,
1405 verbose parsed url   search: null,
1405 verbose parsed url   query: null,
1405 verbose parsed url   pathname: 'async@0.2.10',
1405 verbose parsed url   path: 'async@0.2.10',
1405 verbose parsed url   href: 'async@0.2.10' }
1406 verbose cache add name="async" spec="0.2.10" args=["async","0.2.10"]
1407 verbose parsed url { protocol: null,
1407 verbose parsed url   slashes: null,
1407 verbose parsed url   auth: null,
1407 verbose parsed url   host: null,
1407 verbose parsed url   port: null,
1407 verbose parsed url   hostname: null,
1407 verbose parsed url   hash: null,
1407 verbose parsed url   search: null,
1407 verbose parsed url   query: null,
1407 verbose parsed url   pathname: '0.2.10',
1407 verbose parsed url   path: '0.2.10',
1407 verbose parsed url   href: '0.2.10' }
1408 verbose addNamed [ 'async', '0.2.10' ]
1409 verbose readDependencies using package.json deps
1410 verbose cache add [ 'bower-config@0.4.5', null ]
1411 verbose cache add name=undefined spec="bower-config@0.4.5" args=["bower-config@0.4.5",null]
1412 verbose parsed url { protocol: null,
1412 verbose parsed url   slashes: null,
1412 verbose parsed url   auth: null,
1412 verbose parsed url   host: null,
1412 verbose parsed url   port: null,
1412 verbose parsed url   hostname: null,
1412 verbose parsed url   hash: null,
1412 verbose parsed url   search: null,
1412 verbose parsed url   query: null,
1412 verbose parsed url   pathname: 'bower-config@0.4.5',
1412 verbose parsed url   path: 'bower-config@0.4.5',
1412 verbose parsed url   href: 'bower-config@0.4.5' }
1413 verbose cache add name="bower-config" spec="0.4.5" args=["bower-config","0.4.5"]
1414 verbose parsed url { protocol: null,
1414 verbose parsed url   slashes: null,
1414 verbose parsed url   auth: null,
1414 verbose parsed url   host: null,
1414 verbose parsed url   port: null,
1414 verbose parsed url   hostname: null,
1414 verbose parsed url   hash: null,
1414 verbose parsed url   search: null,
1414 verbose parsed url   query: null,
1414 verbose parsed url   pathname: '0.4.5',
1414 verbose parsed url   path: '0.4.5',
1414 verbose parsed url   href: '0.4.5' }
1415 verbose addNamed [ 'bower-config', '0.4.5' ]
1416 verbose addNamed [ '0.4.5', '0.4.5' ]
1417 verbose readDependencies using package.json deps
1418 verbose cache add [ 'lru-cache@2.3.1', null ]
1419 verbose cache add name=undefined spec="lru-cache@2.3.1" args=["lru-cache@2.3.1",null]
1420 verbose parsed url { protocol: null,
1420 verbose parsed url   slashes: null,
1420 verbose parsed url   auth: null,
1420 verbose parsed url   host: null,
1420 verbose parsed url   port: null,
1420 verbose parsed url   hostname: null,
1420 verbose parsed url   hash: null,
1420 verbose parsed url   search: null,
1420 verbose parsed url   query: null,
1420 verbose parsed url   pathname: 'lru-cache@2.3.1',
1420 verbose parsed url   path: 'lru-cache@2.3.1',
1420 verbose parsed url   href: 'lru-cache@2.3.1' }
1421 verbose cache add name="lru-cache" spec="2.3.1" args=["lru-cache","2.3.1"]
1422 verbose parsed url { protocol: null,
1422 verbose parsed url   slashes: null,
1422 verbose parsed url   auth: null,
1422 verbose parsed url   host: null,
1422 verbose parsed url   port: null,
1422 verbose parsed url   hostname: null,
1422 verbose parsed url   hash: null,
1422 verbose parsed url   search: null,
1422 verbose parsed url   query: null,
1422 verbose parsed url   pathname: '2.3.1',
1422 verbose parsed url   path: '2.3.1',
1422 verbose parsed url   href: '2.3.1' }
1423 verbose addNamed [ 'lru-cache', '2.3.1' ]
1424 verbose addNamed [ '2.3.1', '2.3.1' ]
1425 verbose readDependencies using package.json deps
1426 verbose cache add [ 'request-replay@0.2.0', null ]
1427 verbose cache add name=undefined spec="request-replay@0.2.0" args=["request-replay@0.2.0",null]
1428 verbose parsed url { protocol: null,
1428 verbose parsed url   slashes: null,
1428 verbose parsed url   auth: null,
1428 verbose parsed url   host: null,
1428 verbose parsed url   port: null,
1428 verbose parsed url   hostname: null,
1428 verbose parsed url   hash: null,
1428 verbose parsed url   search: null,
1428 verbose parsed url   query: null,
1428 verbose parsed url   pathname: 'request-replay@0.2.0',
1428 verbose parsed url   path: 'request-replay@0.2.0',
1428 verbose parsed url   href: 'request-replay@0.2.0' }
1429 verbose cache add name="request-replay" spec="0.2.0" args=["request-replay","0.2.0"]
1430 verbose parsed url { protocol: null,
1430 verbose parsed url   slashes: null,
1430 verbose parsed url   auth: null,
1430 verbose parsed url   host: null,
1430 verbose parsed url   port: null,
1430 verbose parsed url   hostname: null,
1430 verbose parsed url   hash: null,
1430 verbose parsed url   search: null,
1430 verbose parsed url   query: null,
1430 verbose parsed url   pathname: '0.2.0',
1430 verbose parsed url   path: '0.2.0',
1430 verbose parsed url   href: '0.2.0' }
1431 verbose addNamed [ 'request-replay', '0.2.0' ]
1432 verbose addNamed [ '0.2.0', '0.2.0' ]
1433 verbose readDependencies using package.json deps
1434 verbose cache add [ 'request@2.27.0', null ]
1435 verbose cache add name=undefined spec="request@2.27.0" args=["request@2.27.0",null]
1436 verbose parsed url { protocol: null,
1436 verbose parsed url   slashes: null,
1436 verbose parsed url   auth: null,
1436 verbose parsed url   host: null,
1436 verbose parsed url   port: null,
1436 verbose parsed url   hostname: null,
1436 verbose parsed url   hash: null,
1436 verbose parsed url   search: null,
1436 verbose parsed url   query: null,
1436 verbose parsed url   pathname: 'request@2.27.0',
1436 verbose parsed url   path: 'request@2.27.0',
1436 verbose parsed url   href: 'request@2.27.0' }
1437 verbose cache add name="request" spec="2.27.0" args=["request","2.27.0"]
1438 verbose parsed url { protocol: null,
1438 verbose parsed url   slashes: null,
1438 verbose parsed url   auth: null,
1438 verbose parsed url   host: null,
1438 verbose parsed url   port: null,
1438 verbose parsed url   hostname: null,
1438 verbose parsed url   hash: null,
1438 verbose parsed url   search: null,
1438 verbose parsed url   query: null,
1438 verbose parsed url   pathname: '2.27.0',
1438 verbose parsed url   path: '2.27.0',
1438 verbose parsed url   href: '2.27.0' }
1439 verbose addNamed [ 'request', '2.27.0' ]
1440 verbose addNamed [ '2.27.0', '2.27.0' ]
1441 verbose readDependencies using package.json deps
1442 verbose cache add [ 'mkdirp@0.3.5', null ]
1443 verbose cache add name=undefined spec="mkdirp@0.3.5" args=["mkdirp@0.3.5",null]
1444 verbose parsed url { protocol: null,
1444 verbose parsed url   slashes: null,
1444 verbose parsed url   auth: null,
1444 verbose parsed url   host: null,
1444 verbose parsed url   port: null,
1444 verbose parsed url   hostname: null,
1444 verbose parsed url   hash: null,
1444 verbose parsed url   search: null,
1444 verbose parsed url   query: null,
1444 verbose parsed url   pathname: 'mkdirp@0.3.5',
1444 verbose parsed url   path: 'mkdirp@0.3.5',
1444 verbose parsed url   href: 'mkdirp@0.3.5' }
1445 verbose cache add name="mkdirp" spec="0.3.5" args=["mkdirp","0.3.5"]
1446 verbose parsed url { protocol: null,
1446 verbose parsed url   slashes: null,
1446 verbose parsed url   auth: null,
1446 verbose parsed url   host: null,
1446 verbose parsed url   port: null,
1446 verbose parsed url   hostname: null,
1446 verbose parsed url   hash: null,
1446 verbose parsed url   search: null,
1446 verbose parsed url   query: null,
1446 verbose parsed url   pathname: '0.3.5',
1446 verbose parsed url   path: '0.3.5',
1446 verbose parsed url   href: '0.3.5' }
1447 verbose addNamed [ 'mkdirp', '0.3.5' ]
1448 verbose readDependencies using package.json deps
1449 verbose cache add [ 'q@0.9.7', null ]
1450 verbose cache add name=undefined spec="q@0.9.7" args=["q@0.9.7",null]
1451 verbose parsed url { protocol: null,
1451 verbose parsed url   slashes: null,
1451 verbose parsed url   auth: null,
1451 verbose parsed url   host: null,
1451 verbose parsed url   port: null,
1451 verbose parsed url   hostname: null,
1451 verbose parsed url   hash: null,
1451 verbose parsed url   search: null,
1451 verbose parsed url   query: null,
1451 verbose parsed url   pathname: 'q@0.9.7',
1451 verbose parsed url   path: 'q@0.9.7',
1451 verbose parsed url   href: 'q@0.9.7' }
1452 verbose cache add name="q" spec="0.9.7" args=["q","0.9.7"]
1453 verbose parsed url { protocol: null,
1453 verbose parsed url   slashes: null,
1453 verbose parsed url   auth: null,
1453 verbose parsed url   host: null,
1453 verbose parsed url   port: null,
1453 verbose parsed url   hostname: null,
1453 verbose parsed url   hash: null,
1453 verbose parsed url   search: null,
1453 verbose parsed url   query: null,
1453 verbose parsed url   pathname: '0.9.7',
1453 verbose parsed url   path: '0.9.7',
1453 verbose parsed url   href: '0.9.7' }
1454 verbose addNamed [ 'q', '0.9.7' ]
1455 verbose addNamed [ '0.9.7', '0.9.7' ]
1456 verbose readDependencies using package.json deps
1457 verbose cache add [ 'strip-ansi@0.1.1', null ]
1458 verbose cache add name=undefined spec="strip-ansi@0.1.1" args=["strip-ansi@0.1.1",null]
1459 verbose parsed url { protocol: null,
1459 verbose parsed url   slashes: null,
1459 verbose parsed url   auth: null,
1459 verbose parsed url   host: null,
1459 verbose parsed url   port: null,
1459 verbose parsed url   hostname: null,
1459 verbose parsed url   hash: null,
1459 verbose parsed url   search: null,
1459 verbose parsed url   query: null,
1459 verbose parsed url   pathname: 'strip-ansi@0.1.1',
1459 verbose parsed url   path: 'strip-ansi@0.1.1',
1459 verbose parsed url   href: 'strip-ansi@0.1.1' }
1460 verbose cache add name="strip-ansi" spec="0.1.1" args=["strip-ansi","0.1.1"]
1461 verbose parsed url { protocol: null,
1461 verbose parsed url   slashes: null,
1461 verbose parsed url   auth: null,
1461 verbose parsed url   host: null,
1461 verbose parsed url   port: null,
1461 verbose parsed url   hostname: null,
1461 verbose parsed url   hash: null,
1461 verbose parsed url   search: null,
1461 verbose parsed url   query: null,
1461 verbose parsed url   pathname: '0.1.1',
1461 verbose parsed url   path: '0.1.1',
1461 verbose parsed url   href: '0.1.1' }
1462 verbose addNamed [ 'strip-ansi', '0.1.1' ]
1463 verbose readDependencies using package.json deps
1464 verbose cache add [ 'array-filter@0.0.1', null ]
1465 verbose cache add name=undefined spec="array-filter@0.0.1" args=["array-filter@0.0.1",null]
1466 verbose parsed url { protocol: null,
1466 verbose parsed url   slashes: null,
1466 verbose parsed url   auth: null,
1466 verbose parsed url   host: null,
1466 verbose parsed url   port: null,
1466 verbose parsed url   hostname: null,
1466 verbose parsed url   hash: null,
1466 verbose parsed url   search: null,
1466 verbose parsed url   query: null,
1466 verbose parsed url   pathname: 'array-filter@0.0.1',
1466 verbose parsed url   path: 'array-filter@0.0.1',
1466 verbose parsed url   href: 'array-filter@0.0.1' }
1467 verbose cache add name="array-filter" spec="0.0.1" args=["array-filter","0.0.1"]
1468 verbose parsed url { protocol: null,
1468 verbose parsed url   slashes: null,
1468 verbose parsed url   auth: null,
1468 verbose parsed url   host: null,
1468 verbose parsed url   port: null,
1468 verbose parsed url   hostname: null,
1468 verbose parsed url   hash: null,
1468 verbose parsed url   search: null,
1468 verbose parsed url   query: null,
1468 verbose parsed url   pathname: '0.0.1',
1468 verbose parsed url   path: '0.0.1',
1468 verbose parsed url   href: '0.0.1' }
1469 verbose addNamed [ 'array-filter', '0.0.1' ]
1470 verbose addNamed [ '0.0.1', '0.0.1' ]
1471 verbose readDependencies using package.json deps
1472 verbose cache add [ 'request@2.27.0', null ]
1473 verbose cache add name=undefined spec="request@2.27.0" args=["request@2.27.0",null]
1474 verbose parsed url { protocol: null,
1474 verbose parsed url   slashes: null,
1474 verbose parsed url   auth: null,
1474 verbose parsed url   host: null,
1474 verbose parsed url   port: null,
1474 verbose parsed url   hostname: null,
1474 verbose parsed url   hash: null,
1474 verbose parsed url   search: null,
1474 verbose parsed url   query: null,
1474 verbose parsed url   pathname: 'request@2.27.0',
1474 verbose parsed url   path: 'request@2.27.0',
1474 verbose parsed url   href: 'request@2.27.0' }
1475 verbose cache add name="request" spec="2.27.0" args=["request","2.27.0"]
1476 verbose parsed url { protocol: null,
1476 verbose parsed url   slashes: null,
1476 verbose parsed url   auth: null,
1476 verbose parsed url   host: null,
1476 verbose parsed url   port: null,
1476 verbose parsed url   hostname: null,
1476 verbose parsed url   hash: null,
1476 verbose parsed url   search: null,
1476 verbose parsed url   query: null,
1476 verbose parsed url   pathname: '2.27.0',
1476 verbose parsed url   path: '2.27.0',
1476 verbose parsed url   href: '2.27.0' }
1477 verbose addNamed [ 'request', '2.27.0' ]
1478 verbose readDependencies using package.json deps
1479 verbose cache add [ 'semver@2.1.0', null ]
1480 verbose cache add name=undefined spec="semver@2.1.0" args=["semver@2.1.0",null]
1481 verbose parsed url { protocol: null,
1481 verbose parsed url   slashes: null,
1481 verbose parsed url   auth: null,
1481 verbose parsed url   host: null,
1481 verbose parsed url   port: null,
1481 verbose parsed url   hostname: null,
1481 verbose parsed url   hash: null,
1481 verbose parsed url   search: null,
1481 verbose parsed url   query: null,
1481 verbose parsed url   pathname: 'semver@2.1.0',
1481 verbose parsed url   path: 'semver@2.1.0',
1481 verbose parsed url   href: 'semver@2.1.0' }
1482 verbose cache add name="semver" spec="2.1.0" args=["semver","2.1.0"]
1483 verbose parsed url { protocol: null,
1483 verbose parsed url   slashes: null,
1483 verbose parsed url   auth: null,
1483 verbose parsed url   host: null,
1483 verbose parsed url   port: null,
1483 verbose parsed url   hostname: null,
1483 verbose parsed url   hash: null,
1483 verbose parsed url   search: null,
1483 verbose parsed url   query: null,
1483 verbose parsed url   pathname: '2.1.0',
1483 verbose parsed url   path: '2.1.0',
1483 verbose parsed url   href: '2.1.0' }
1484 verbose addNamed [ 'semver', '2.1.0' ]
1485 verbose addNamed [ '2.1.0', '2.1.0' ]
1486 verbose readDependencies using package.json deps
1487 verbose cache add [ 'configstore@0.2.3', null ]
1488 verbose cache add name=undefined spec="configstore@0.2.3" args=["configstore@0.2.3",null]
1489 verbose parsed url { protocol: null,
1489 verbose parsed url   slashes: null,
1489 verbose parsed url   auth: null,
1489 verbose parsed url   host: null,
1489 verbose parsed url   port: null,
1489 verbose parsed url   hostname: null,
1489 verbose parsed url   hash: null,
1489 verbose parsed url   search: null,
1489 verbose parsed url   query: null,
1489 verbose parsed url   pathname: 'configstore@0.2.3',
1489 verbose parsed url   path: 'configstore@0.2.3',
1489 verbose parsed url   href: 'configstore@0.2.3' }
1490 verbose cache add name="configstore" spec="0.2.3" args=["configstore","0.2.3"]
1491 verbose parsed url { protocol: null,
1491 verbose parsed url   slashes: null,
1491 verbose parsed url   auth: null,
1491 verbose parsed url   host: null,
1491 verbose parsed url   port: null,
1491 verbose parsed url   hostname: null,
1491 verbose parsed url   hash: null,
1491 verbose parsed url   search: null,
1491 verbose parsed url   query: null,
1491 verbose parsed url   pathname: '0.2.3',
1491 verbose parsed url   path: '0.2.3',
1491 verbose parsed url   href: '0.2.3' }
1492 verbose addNamed [ 'configstore', '0.2.3' ]
1493 verbose addNamed [ '0.2.3', '0.2.3' ]
1494 verbose readDependencies using package.json deps
1495 verbose cache add [ 'mout@0.6.0', null ]
1496 verbose cache add name=undefined spec="mout@0.6.0" args=["mout@0.6.0",null]
1497 verbose parsed url { protocol: null,
1497 verbose parsed url   slashes: null,
1497 verbose parsed url   auth: null,
1497 verbose parsed url   host: null,
1497 verbose parsed url   port: null,
1497 verbose parsed url   hostname: null,
1497 verbose parsed url   hash: null,
1497 verbose parsed url   search: null,
1497 verbose parsed url   query: null,
1497 verbose parsed url   pathname: 'mout@0.6.0',
1497 verbose parsed url   path: 'mout@0.6.0',
1497 verbose parsed url   href: 'mout@0.6.0' }
1498 verbose cache add name="mout" spec="0.6.0" args=["mout","0.6.0"]
1499 verbose parsed url { protocol: null,
1499 verbose parsed url   slashes: null,
1499 verbose parsed url   auth: null,
1499 verbose parsed url   host: null,
1499 verbose parsed url   port: null,
1499 verbose parsed url   hostname: null,
1499 verbose parsed url   hash: null,
1499 verbose parsed url   search: null,
1499 verbose parsed url   query: null,
1499 verbose parsed url   pathname: '0.6.0',
1499 verbose parsed url   path: '0.6.0',
1499 verbose parsed url   href: '0.6.0' }
1500 verbose addNamed [ 'mout', '0.6.0' ]
1501 verbose addNamed [ '0.6.0', '0.6.0' ]
1502 verbose readDependencies using package.json deps
1503 verbose cache add [ 'minimist@0.0.10', null ]
1504 verbose cache add name=undefined spec="minimist@0.0.10" args=["minimist@0.0.10",null]
1505 verbose parsed url { protocol: null,
1505 verbose parsed url   slashes: null,
1505 verbose parsed url   auth: null,
1505 verbose parsed url   host: null,
1505 verbose parsed url   port: null,
1505 verbose parsed url   hostname: null,
1505 verbose parsed url   hash: null,
1505 verbose parsed url   search: null,
1505 verbose parsed url   query: null,
1505 verbose parsed url   pathname: 'minimist@0.0.10',
1505 verbose parsed url   path: 'minimist@0.0.10',
1505 verbose parsed url   href: 'minimist@0.0.10' }
1506 verbose cache add name="minimist" spec="0.0.10" args=["minimist","0.0.10"]
1507 verbose parsed url { protocol: null,
1507 verbose parsed url   slashes: null,
1507 verbose parsed url   auth: null,
1507 verbose parsed url   host: null,
1507 verbose parsed url   port: null,
1507 verbose parsed url   hostname: null,
1507 verbose parsed url   hash: null,
1507 verbose parsed url   search: null,
1507 verbose parsed url   query: null,
1507 verbose parsed url   pathname: '0.0.10',
1507 verbose parsed url   path: '0.0.10',
1507 verbose parsed url   href: '0.0.10' }
1508 verbose addNamed [ 'minimist', '0.0.10' ]
1509 verbose addNamed [ '0.0.10', '0.0.10' ]
1510 verbose readDependencies using package.json deps
1511 verbose cache add [ 'ansicolors@0.2.1', null ]
1512 verbose cache add name=undefined spec="ansicolors@0.2.1" args=["ansicolors@0.2.1",null]
1513 verbose parsed url { protocol: null,
1513 verbose parsed url   slashes: null,
1513 verbose parsed url   auth: null,
1513 verbose parsed url   host: null,
1513 verbose parsed url   port: null,
1513 verbose parsed url   hostname: null,
1513 verbose parsed url   hash: null,
1513 verbose parsed url   search: null,
1513 verbose parsed url   query: null,
1513 verbose parsed url   pathname: 'ansicolors@0.2.1',
1513 verbose parsed url   path: 'ansicolors@0.2.1',
1513 verbose parsed url   href: 'ansicolors@0.2.1' }
1514 verbose cache add name="ansicolors" spec="0.2.1" args=["ansicolors","0.2.1"]
1515 verbose parsed url { protocol: null,
1515 verbose parsed url   slashes: null,
1515 verbose parsed url   auth: null,
1515 verbose parsed url   host: null,
1515 verbose parsed url   port: null,
1515 verbose parsed url   hostname: null,
1515 verbose parsed url   hash: null,
1515 verbose parsed url   search: null,
1515 verbose parsed url   query: null,
1515 verbose parsed url   pathname: '0.2.1',
1515 verbose parsed url   path: '0.2.1',
1515 verbose parsed url   href: '0.2.1' }
1516 verbose addNamed [ 'ansicolors', '0.2.1' ]
1517 verbose addNamed [ '0.2.1', '0.2.1' ]
1518 verbose readDependencies using package.json deps
1519 verbose cache add [ 'esprima@1.0.4', null ]
1520 verbose cache add name=undefined spec="esprima@1.0.4" args=["esprima@1.0.4",null]
1521 verbose parsed url { protocol: null,
1521 verbose parsed url   slashes: null,
1521 verbose parsed url   auth: null,
1521 verbose parsed url   host: null,
1521 verbose parsed url   port: null,
1521 verbose parsed url   hostname: null,
1521 verbose parsed url   hash: null,
1521 verbose parsed url   search: null,
1521 verbose parsed url   query: null,
1521 verbose parsed url   pathname: 'esprima@1.0.4',
1521 verbose parsed url   path: 'esprima@1.0.4',
1521 verbose parsed url   href: 'esprima@1.0.4' }
1522 verbose cache add name="esprima" spec="1.0.4" args=["esprima","1.0.4"]
1523 verbose parsed url { protocol: null,
1523 verbose parsed url   slashes: null,
1523 verbose parsed url   auth: null,
1523 verbose parsed url   host: null,
1523 verbose parsed url   port: null,
1523 verbose parsed url   hostname: null,
1523 verbose parsed url   hash: null,
1523 verbose parsed url   search: null,
1523 verbose parsed url   query: null,
1523 verbose parsed url   pathname: '1.0.4',
1523 verbose parsed url   path: '1.0.4',
1523 verbose parsed url   href: '1.0.4' }
1524 verbose addNamed [ 'esprima', '1.0.4' ]
1525 verbose addNamed [ '1.0.4', '1.0.4' ]
1526 verbose readDependencies using package.json deps
1527 verbose cache add [ 'async@0.2.10', null ]
1528 verbose cache add name=undefined spec="async@0.2.10" args=["async@0.2.10",null]
1529 verbose parsed url { protocol: null,
1529 verbose parsed url   slashes: null,
1529 verbose parsed url   auth: null,
1529 verbose parsed url   host: null,
1529 verbose parsed url   port: null,
1529 verbose parsed url   hostname: null,
1529 verbose parsed url   hash: null,
1529 verbose parsed url   search: null,
1529 verbose parsed url   query: null,
1529 verbose parsed url   pathname: 'async@0.2.10',
1529 verbose parsed url   path: 'async@0.2.10',
1529 verbose parsed url   href: 'async@0.2.10' }
1530 verbose cache add name="async" spec="0.2.10" args=["async","0.2.10"]
1531 verbose parsed url { protocol: null,
1531 verbose parsed url   slashes: null,
1531 verbose parsed url   auth: null,
1531 verbose parsed url   host: null,
1531 verbose parsed url   port: null,
1531 verbose parsed url   hostname: null,
1531 verbose parsed url   hash: null,
1531 verbose parsed url   search: null,
1531 verbose parsed url   query: null,
1531 verbose parsed url   pathname: '0.2.10',
1531 verbose parsed url   path: '0.2.10',
1531 verbose parsed url   href: '0.2.10' }
1532 verbose addNamed [ 'async', '0.2.10' ]
1533 verbose readDependencies using package.json deps
1534 verbose cache add [ 'inquirer@0.4.1', null ]
1535 verbose cache add name=undefined spec="inquirer@0.4.1" args=["inquirer@0.4.1",null]
1536 verbose parsed url { protocol: null,
1536 verbose parsed url   slashes: null,
1536 verbose parsed url   auth: null,
1536 verbose parsed url   host: null,
1536 verbose parsed url   port: null,
1536 verbose parsed url   hostname: null,
1536 verbose parsed url   hash: null,
1536 verbose parsed url   search: null,
1536 verbose parsed url   query: null,
1536 verbose parsed url   pathname: 'inquirer@0.4.1',
1536 verbose parsed url   path: 'inquirer@0.4.1',
1536 verbose parsed url   href: 'inquirer@0.4.1' }
1537 verbose cache add name="inquirer" spec="0.4.1" args=["inquirer","0.4.1"]
1538 verbose parsed url { protocol: null,
1538 verbose parsed url   slashes: null,
1538 verbose parsed url   auth: null,
1538 verbose parsed url   host: null,
1538 verbose parsed url   port: null,
1538 verbose parsed url   hostname: null,
1538 verbose parsed url   hash: null,
1538 verbose parsed url   search: null,
1538 verbose parsed url   query: null,
1538 verbose parsed url   pathname: '0.4.1',
1538 verbose parsed url   path: '0.4.1',
1538 verbose parsed url   href: '0.4.1' }
1539 verbose addNamed [ 'inquirer', '0.4.1' ]
1540 verbose readDependencies using package.json deps
1541 verbose cache add [ 'object-assign@0.1.2', null ]
1542 verbose cache add name=undefined spec="object-assign@0.1.2" args=["object-assign@0.1.2",null]
1543 verbose parsed url { protocol: null,
1543 verbose parsed url   slashes: null,
1543 verbose parsed url   auth: null,
1543 verbose parsed url   host: null,
1543 verbose parsed url   port: null,
1543 verbose parsed url   hostname: null,
1543 verbose parsed url   hash: null,
1543 verbose parsed url   search: null,
1543 verbose parsed url   query: null,
1543 verbose parsed url   pathname: 'object-assign@0.1.2',
1543 verbose parsed url   path: 'object-assign@0.1.2',
1543 verbose parsed url   href: 'object-assign@0.1.2' }
1544 verbose cache add name="object-assign" spec="0.1.2" args=["object-assign","0.1.2"]
1545 verbose parsed url { protocol: null,
1545 verbose parsed url   slashes: null,
1545 verbose parsed url   auth: null,
1545 verbose parsed url   host: null,
1545 verbose parsed url   port: null,
1545 verbose parsed url   hostname: null,
1545 verbose parsed url   hash: null,
1545 verbose parsed url   search: null,
1545 verbose parsed url   query: null,
1545 verbose parsed url   pathname: '0.1.2',
1545 verbose parsed url   path: '0.1.2',
1545 verbose parsed url   href: '0.1.2' }
1546 verbose addNamed [ 'object-assign', '0.1.2' ]
1547 verbose addNamed [ '0.1.2', '0.1.2' ]
1548 verbose readDependencies using package.json deps
1549 verbose cache add [ 'configstore@0.2.3', null ]
1550 verbose cache add name=undefined spec="configstore@0.2.3" args=["configstore@0.2.3",null]
1551 verbose parsed url { protocol: null,
1551 verbose parsed url   slashes: null,
1551 verbose parsed url   auth: null,
1551 verbose parsed url   host: null,
1551 verbose parsed url   port: null,
1551 verbose parsed url   hostname: null,
1551 verbose parsed url   hash: null,
1551 verbose parsed url   search: null,
1551 verbose parsed url   query: null,
1551 verbose parsed url   pathname: 'configstore@0.2.3',
1551 verbose parsed url   path: 'configstore@0.2.3',
1551 verbose parsed url   href: 'configstore@0.2.3' }
1552 verbose cache add name="configstore" spec="0.2.3" args=["configstore","0.2.3"]
1553 verbose parsed url { protocol: null,
1553 verbose parsed url   slashes: null,
1553 verbose parsed url   auth: null,
1553 verbose parsed url   host: null,
1553 verbose parsed url   port: null,
1553 verbose parsed url   hostname: null,
1553 verbose parsed url   hash: null,
1553 verbose parsed url   search: null,
1553 verbose parsed url   query: null,
1553 verbose parsed url   pathname: '0.2.3',
1553 verbose parsed url   path: '0.2.3',
1553 verbose parsed url   href: '0.2.3' }
1554 verbose addNamed [ 'configstore', '0.2.3' ]
1555 verbose readDependencies using package.json deps
1556 verbose cache add [ 'request@2.27.0', null ]
1557 verbose cache add name=undefined spec="request@2.27.0" args=["request@2.27.0",null]
1558 verbose parsed url { protocol: null,
1558 verbose parsed url   slashes: null,
1558 verbose parsed url   auth: null,
1558 verbose parsed url   host: null,
1558 verbose parsed url   port: null,
1558 verbose parsed url   hostname: null,
1558 verbose parsed url   hash: null,
1558 verbose parsed url   search: null,
1558 verbose parsed url   query: null,
1558 verbose parsed url   pathname: 'request@2.27.0',
1558 verbose parsed url   path: 'request@2.27.0',
1558 verbose parsed url   href: 'request@2.27.0' }
1559 verbose cache add name="request" spec="2.27.0" args=["request","2.27.0"]
1560 verbose parsed url { protocol: null,
1560 verbose parsed url   slashes: null,
1560 verbose parsed url   auth: null,
1560 verbose parsed url   host: null,
1560 verbose parsed url   port: null,
1560 verbose parsed url   hostname: null,
1560 verbose parsed url   hash: null,
1560 verbose parsed url   search: null,
1560 verbose parsed url   query: null,
1560 verbose parsed url   pathname: '2.27.0',
1560 verbose parsed url   path: '2.27.0',
1560 verbose parsed url   href: '2.27.0' }
1561 verbose addNamed [ 'request', '2.27.0' ]
1562 verbose readDependencies using package.json deps
1563 verbose cache add [ 'touch@0.0.2', null ]
1564 verbose cache add name=undefined spec="touch@0.0.2" args=["touch@0.0.2",null]
1565 verbose parsed url { protocol: null,
1565 verbose parsed url   slashes: null,
1565 verbose parsed url   auth: null,
1565 verbose parsed url   host: null,
1565 verbose parsed url   port: null,
1565 verbose parsed url   hostname: null,
1565 verbose parsed url   hash: null,
1565 verbose parsed url   search: null,
1565 verbose parsed url   query: null,
1565 verbose parsed url   pathname: 'touch@0.0.2',
1565 verbose parsed url   path: 'touch@0.0.2',
1565 verbose parsed url   href: 'touch@0.0.2' }
1566 verbose cache add name="touch" spec="0.0.2" args=["touch","0.0.2"]
1567 verbose parsed url { protocol: null,
1567 verbose parsed url   slashes: null,
1567 verbose parsed url   auth: null,
1567 verbose parsed url   host: null,
1567 verbose parsed url   port: null,
1567 verbose parsed url   hostname: null,
1567 verbose parsed url   hash: null,
1567 verbose parsed url   search: null,
1567 verbose parsed url   query: null,
1567 verbose parsed url   pathname: '0.0.2',
1567 verbose parsed url   path: '0.0.2',
1567 verbose parsed url   href: '0.0.2' }
1568 verbose addNamed [ 'touch', '0.0.2' ]
1569 verbose addNamed [ '0.0.2', '0.0.2' ]
1570 verbose readDependencies using package.json deps
1571 verbose cache add [ 'readable-stream@1.1.13-1', null ]
1572 verbose cache add name=undefined spec="readable-stream@1.1.13-1" args=["readable-stream@1.1.13-1",null]
1573 verbose parsed url { protocol: null,
1573 verbose parsed url   slashes: null,
1573 verbose parsed url   auth: null,
1573 verbose parsed url   host: null,
1573 verbose parsed url   port: null,
1573 verbose parsed url   hostname: null,
1573 verbose parsed url   hash: null,
1573 verbose parsed url   search: null,
1573 verbose parsed url   query: null,
1573 verbose parsed url   pathname: 'readable-stream@1.1.13-1',
1573 verbose parsed url   path: 'readable-stream@1.1.13-1',
1573 verbose parsed url   href: 'readable-stream@1.1.13-1' }
1574 verbose cache add name="readable-stream" spec="1.1.13-1" args=["readable-stream","1.1.13-1"]
1575 verbose parsed url { protocol: null,
1575 verbose parsed url   slashes: null,
1575 verbose parsed url   auth: null,
1575 verbose parsed url   host: null,
1575 verbose parsed url   port: null,
1575 verbose parsed url   hostname: null,
1575 verbose parsed url   hash: null,
1575 verbose parsed url   search: null,
1575 verbose parsed url   query: null,
1575 verbose parsed url   pathname: '1.1.13-1',
1575 verbose parsed url   path: '1.1.13-1',
1575 verbose parsed url   href: '1.1.13-1' }
1576 verbose addNamed [ 'readable-stream', '1.1.13-1' ]
1577 verbose addNamed [ '1.1.13-1', '1.1.13-1' ]
1578 verbose readDependencies using package.json deps
1579 verbose cache add [ 'traverse@0.3.9', null ]
1580 verbose cache add name=undefined spec="traverse@0.3.9" args=["traverse@0.3.9",null]
1581 verbose parsed url { protocol: null,
1581 verbose parsed url   slashes: null,
1581 verbose parsed url   auth: null,
1581 verbose parsed url   host: null,
1581 verbose parsed url   port: null,
1581 verbose parsed url   hostname: null,
1581 verbose parsed url   hash: null,
1581 verbose parsed url   search: null,
1581 verbose parsed url   query: null,
1581 verbose parsed url   pathname: 'traverse@0.3.9',
1581 verbose parsed url   path: 'traverse@0.3.9',
1581 verbose parsed url   href: 'traverse@0.3.9' }
1582 verbose cache add name="traverse" spec="0.3.9" args=["traverse","0.3.9"]
1583 verbose parsed url { protocol: null,
1583 verbose parsed url   slashes: null,
1583 verbose parsed url   auth: null,
1583 verbose parsed url   host: null,
1583 verbose parsed url   port: null,
1583 verbose parsed url   hostname: null,
1583 verbose parsed url   hash: null,
1583 verbose parsed url   search: null,
1583 verbose parsed url   query: null,
1583 verbose parsed url   pathname: '0.3.9',
1583 verbose parsed url   path: '0.3.9',
1583 verbose parsed url   href: '0.3.9' }
1584 verbose addNamed [ 'traverse', '0.3.9' ]
1585 verbose addNamed [ '0.3.9', '0.3.9' ]
1586 verbose readDependencies using package.json deps
1587 verbose cache add [ 'transformers@2.1.0', null ]
1588 verbose cache add name=undefined spec="transformers@2.1.0" args=["transformers@2.1.0",null]
1589 verbose parsed url { protocol: null,
1589 verbose parsed url   slashes: null,
1589 verbose parsed url   auth: null,
1589 verbose parsed url   host: null,
1589 verbose parsed url   port: null,
1589 verbose parsed url   hostname: null,
1589 verbose parsed url   hash: null,
1589 verbose parsed url   search: null,
1589 verbose parsed url   query: null,
1589 verbose parsed url   pathname: 'transformers@2.1.0',
1589 verbose parsed url   path: 'transformers@2.1.0',
1589 verbose parsed url   href: 'transformers@2.1.0' }
1590 verbose cache add name="transformers" spec="2.1.0" args=["transformers","2.1.0"]
1591 verbose parsed url { protocol: null,
1591 verbose parsed url   slashes: null,
1591 verbose parsed url   auth: null,
1591 verbose parsed url   host: null,
1591 verbose parsed url   port: null,
1591 verbose parsed url   hostname: null,
1591 verbose parsed url   hash: null,
1591 verbose parsed url   search: null,
1591 verbose parsed url   query: null,
1591 verbose parsed url   pathname: '2.1.0',
1591 verbose parsed url   path: '2.1.0',
1591 verbose parsed url   href: '2.1.0' }
1592 verbose addNamed [ 'transformers', '2.1.0' ]
1593 verbose addNamed [ '2.1.0', '2.1.0' ]
1594 verbose readDependencies using package.json deps
1595 verbose cache add [ 'mkdirp@0.3.5', null ]
1596 verbose cache add name=undefined spec="mkdirp@0.3.5" args=["mkdirp@0.3.5",null]
1597 verbose parsed url { protocol: null,
1597 verbose parsed url   slashes: null,
1597 verbose parsed url   auth: null,
1597 verbose parsed url   host: null,
1597 verbose parsed url   port: null,
1597 verbose parsed url   hostname: null,
1597 verbose parsed url   hash: null,
1597 verbose parsed url   search: null,
1597 verbose parsed url   query: null,
1597 verbose parsed url   pathname: 'mkdirp@0.3.5',
1597 verbose parsed url   path: 'mkdirp@0.3.5',
1597 verbose parsed url   href: 'mkdirp@0.3.5' }
1598 verbose cache add name="mkdirp" spec="0.3.5" args=["mkdirp","0.3.5"]
1599 verbose parsed url { protocol: null,
1599 verbose parsed url   slashes: null,
1599 verbose parsed url   auth: null,
1599 verbose parsed url   host: null,
1599 verbose parsed url   port: null,
1599 verbose parsed url   hostname: null,
1599 verbose parsed url   hash: null,
1599 verbose parsed url   search: null,
1599 verbose parsed url   query: null,
1599 verbose parsed url   pathname: '0.3.5',
1599 verbose parsed url   path: '0.3.5',
1599 verbose parsed url   href: '0.3.5' }
1600 verbose addNamed [ 'mkdirp', '0.3.5' ]
1601 verbose readDependencies using package.json deps
1602 verbose cache add [ 'commander@2.1.0', null ]
1603 verbose cache add name=undefined spec="commander@2.1.0" args=["commander@2.1.0",null]
1604 verbose parsed url { protocol: null,
1604 verbose parsed url   slashes: null,
1604 verbose parsed url   auth: null,
1604 verbose parsed url   host: null,
1604 verbose parsed url   port: null,
1604 verbose parsed url   hostname: null,
1604 verbose parsed url   hash: null,
1604 verbose parsed url   search: null,
1604 verbose parsed url   query: null,
1604 verbose parsed url   pathname: 'commander@2.1.0',
1604 verbose parsed url   path: 'commander@2.1.0',
1604 verbose parsed url   href: 'commander@2.1.0' }
1605 verbose cache add name="commander" spec="2.1.0" args=["commander","2.1.0"]
1606 verbose parsed url { protocol: null,
1606 verbose parsed url   slashes: null,
1606 verbose parsed url   auth: null,
1606 verbose parsed url   host: null,
1606 verbose parsed url   port: null,
1606 verbose parsed url   hostname: null,
1606 verbose parsed url   hash: null,
1606 verbose parsed url   search: null,
1606 verbose parsed url   query: null,
1606 verbose parsed url   pathname: '2.1.0',
1606 verbose parsed url   path: '2.1.0',
1606 verbose parsed url   href: '2.1.0' }
1607 verbose addNamed [ 'commander', '2.1.0' ]
1608 verbose addNamed [ '2.1.0', '2.1.0' ]
1609 verbose readDependencies using package.json deps
1610 verbose cache add [ 'readdirp@0.2.5', null ]
1611 verbose cache add name=undefined spec="readdirp@0.2.5" args=["readdirp@0.2.5",null]
1612 verbose parsed url { protocol: null,
1612 verbose parsed url   slashes: null,
1612 verbose parsed url   auth: null,
1612 verbose parsed url   host: null,
1612 verbose parsed url   port: null,
1612 verbose parsed url   hostname: null,
1612 verbose parsed url   hash: null,
1612 verbose parsed url   search: null,
1612 verbose parsed url   query: null,
1612 verbose parsed url   pathname: 'readdirp@0.2.5',
1612 verbose parsed url   path: 'readdirp@0.2.5',
1612 verbose parsed url   href: 'readdirp@0.2.5' }
1613 verbose cache add name="readdirp" spec="0.2.5" args=["readdirp","0.2.5"]
1614 verbose parsed url { protocol: null,
1614 verbose parsed url   slashes: null,
1614 verbose parsed url   auth: null,
1614 verbose parsed url   host: null,
1614 verbose parsed url   port: null,
1614 verbose parsed url   hostname: null,
1614 verbose parsed url   hash: null,
1614 verbose parsed url   search: null,
1614 verbose parsed url   query: null,
1614 verbose parsed url   pathname: '0.2.5',
1614 verbose parsed url   path: '0.2.5',
1614 verbose parsed url   href: '0.2.5' }
1615 verbose addNamed [ 'readdirp', '0.2.5' ]
1616 verbose addNamed [ '0.2.5', '0.2.5' ]
1617 verbose readDependencies using package.json deps
1618 verbose cache add [ 'optimist@0.3.7', null ]
1619 verbose cache add name=undefined spec="optimist@0.3.7" args=["optimist@0.3.7",null]
1620 verbose parsed url { protocol: null,
1620 verbose parsed url   slashes: null,
1620 verbose parsed url   auth: null,
1620 verbose parsed url   host: null,
1620 verbose parsed url   port: null,
1620 verbose parsed url   hostname: null,
1620 verbose parsed url   hash: null,
1620 verbose parsed url   search: null,
1620 verbose parsed url   query: null,
1620 verbose parsed url   pathname: 'optimist@0.3.7',
1620 verbose parsed url   path: 'optimist@0.3.7',
1620 verbose parsed url   href: 'optimist@0.3.7' }
1621 verbose cache add name="optimist" spec="0.3.7" args=["optimist","0.3.7"]
1622 verbose parsed url { protocol: null,
1622 verbose parsed url   slashes: null,
1622 verbose parsed url   auth: null,
1622 verbose parsed url   host: null,
1622 verbose parsed url   port: null,
1622 verbose parsed url   hostname: null,
1622 verbose parsed url   hash: null,
1622 verbose parsed url   search: null,
1622 verbose parsed url   query: null,
1622 verbose parsed url   pathname: '0.3.7',
1622 verbose parsed url   path: '0.3.7',
1622 verbose parsed url   href: '0.3.7' }
1623 verbose addNamed [ 'optimist', '0.3.7' ]
1624 verbose addNamed [ '0.3.7', '0.3.7' ]
1625 verbose readDependencies using package.json deps
1626 verbose cache add [ 'async@0.2.10', null ]
1627 verbose cache add name=undefined spec="async@0.2.10" args=["async@0.2.10",null]
1628 verbose parsed url { protocol: null,
1628 verbose parsed url   slashes: null,
1628 verbose parsed url   auth: null,
1628 verbose parsed url   host: null,
1628 verbose parsed url   port: null,
1628 verbose parsed url   hostname: null,
1628 verbose parsed url   hash: null,
1628 verbose parsed url   search: null,
1628 verbose parsed url   query: null,
1628 verbose parsed url   pathname: 'async@0.2.10',
1628 verbose parsed url   path: 'async@0.2.10',
1628 verbose parsed url   href: 'async@0.2.10' }
1629 verbose cache add name="async" spec="0.2.10" args=["async","0.2.10"]
1630 verbose parsed url { protocol: null,
1630 verbose parsed url   slashes: null,
1630 verbose parsed url   auth: null,
1630 verbose parsed url   host: null,
1630 verbose parsed url   port: null,
1630 verbose parsed url   hostname: null,
1630 verbose parsed url   hash: null,
1630 verbose parsed url   search: null,
1630 verbose parsed url   query: null,
1630 verbose parsed url   pathname: '0.2.10',
1630 verbose parsed url   path: '0.2.10',
1630 verbose parsed url   href: '0.2.10' }
1631 verbose addNamed [ 'async', '0.2.10' ]
1632 verbose readDependencies using package.json deps
1633 verbose cache add [ 'optimist@0.3.7', null ]
1634 verbose cache add name=undefined spec="optimist@0.3.7" args=["optimist@0.3.7",null]
1635 verbose parsed url { protocol: null,
1635 verbose parsed url   slashes: null,
1635 verbose parsed url   auth: null,
1635 verbose parsed url   host: null,
1635 verbose parsed url   port: null,
1635 verbose parsed url   hostname: null,
1635 verbose parsed url   hash: null,
1635 verbose parsed url   search: null,
1635 verbose parsed url   query: null,
1635 verbose parsed url   pathname: 'optimist@0.3.7',
1635 verbose parsed url   path: 'optimist@0.3.7',
1635 verbose parsed url   href: 'optimist@0.3.7' }
1636 verbose cache add name="optimist" spec="0.3.7" args=["optimist","0.3.7"]
1637 verbose parsed url { protocol: null,
1637 verbose parsed url   slashes: null,
1637 verbose parsed url   auth: null,
1637 verbose parsed url   host: null,
1637 verbose parsed url   port: null,
1637 verbose parsed url   hostname: null,
1637 verbose parsed url   hash: null,
1637 verbose parsed url   search: null,
1637 verbose parsed url   query: null,
1637 verbose parsed url   pathname: '0.3.7',
1637 verbose parsed url   path: '0.3.7',
1637 verbose parsed url   href: '0.3.7' }
1638 verbose addNamed [ 'optimist', '0.3.7' ]
1639 verbose readDependencies using package.json deps
1640 verbose cache add [ 'async@0.2.10', null ]
1641 verbose cache add name=undefined spec="async@0.2.10" args=["async@0.2.10",null]
1642 verbose parsed url { protocol: null,
1642 verbose parsed url   slashes: null,
1642 verbose parsed url   auth: null,
1642 verbose parsed url   host: null,
1642 verbose parsed url   port: null,
1642 verbose parsed url   hostname: null,
1642 verbose parsed url   hash: null,
1642 verbose parsed url   search: null,
1642 verbose parsed url   query: null,
1642 verbose parsed url   pathname: 'async@0.2.10',
1642 verbose parsed url   path: 'async@0.2.10',
1642 verbose parsed url   href: 'async@0.2.10' }
1643 verbose cache add name="async" spec="0.2.10" args=["async","0.2.10"]
1644 verbose parsed url { protocol: null,
1644 verbose parsed url   slashes: null,
1644 verbose parsed url   auth: null,
1644 verbose parsed url   host: null,
1644 verbose parsed url   port: null,
1644 verbose parsed url   hostname: null,
1644 verbose parsed url   hash: null,
1644 verbose parsed url   search: null,
1644 verbose parsed url   query: null,
1644 verbose parsed url   pathname: '0.2.10',
1644 verbose parsed url   path: '0.2.10',
1644 verbose parsed url   href: '0.2.10' }
1645 verbose addNamed [ 'async', '0.2.10' ]
1646 silly lockFile 15cb8528-express-3-4-8 express@3.4.8
1647 verbose lock express@3.4.8 /home/maicon/.npm/15cb8528-express-3-4-8.lock
1648 silly lockFile 9e27220e-mongoose-3-6-20 mongoose@3.6.20
1649 verbose lock mongoose@3.6.20 /home/maicon/.npm/9e27220e-mongoose-3-6-20.lock
1650 silly lockFile 52152b2d-gaze-0-5-1 gaze@0.5.1
1651 verbose lock gaze@0.5.1 /home/maicon/.npm/52152b2d-gaze-0-5-1.lock
1652 silly lockFile 098b530d-async-0-2-10 async@0.2.10
1653 verbose lock async@0.2.10 /home/maicon/.npm/098b530d-async-0-2-10.lock
1654 silly lockFile b7b4fa5b-nopt-2-0-0 nopt@2.0.0
1655 verbose lock nopt@2.0.0 /home/maicon/.npm/b7b4fa5b-nopt-2-0-0.lock
1656 silly lockFile 16160008-debug-0-7-4 debug@0.7.4
1657 verbose lock debug@0.7.4 /home/maicon/.npm/16160008-debug-0-7-4.lock
1658 silly lockFile 84168241-qs-0-5-6 qs@0.5.6
1659 verbose lock qs@0.5.6 /home/maicon/.npm/84168241-qs-0-5-6.lock
1660 silly lockFile f9b80149-faye-websocket-0-4-4 faye-websocket@0.4.4
1661 verbose lock faye-websocket@0.4.4 /home/maicon/.npm/f9b80149-faye-websocket-0-4-4.lock
1662 silly lockFile ed6fc536-strip-ansi-0-1-1 strip-ansi@0.1.1
1663 verbose lock strip-ansi@0.1.1 /home/maicon/.npm/ed6fc536-strip-ansi-0-1-1.lock
1664 silly lockFile 95464470-resolve-0-3-1 resolve@0.3.1
1665 verbose lock resolve@0.3.1 /home/maicon/.npm/95464470-resolve-0-3-1.lock
1666 silly lockFile 1be903a1-nopt-1-0-10 nopt@1.0.10
1667 verbose lock nopt@1.0.10 /home/maicon/.npm/1be903a1-nopt-1-0-10.lock
1668 silly lockFile ed85396c-glob-3-2-10 glob@3.2.10
1669 verbose lock glob@3.2.10 /home/maicon/.npm/ed85396c-glob-3-2-10.lock
1670 silly lockFile 26b575d8-fstream-ignore-0-0-8 fstream-ignore@0.0.8
1671 verbose lock fstream-ignore@0.0.8 /home/maicon/.npm/26b575d8-fstream-ignore-0-0-8.lock
1672 silly lockFile caff4c32-inquirer-0-4-1 inquirer@0.4.1
1673 verbose lock inquirer@0.4.1 /home/maicon/.npm/caff4c32-inquirer-0-4-1.lock
1674 silly lockFile 15405714-handlebars-1-3-0 handlebars@1.3.0
1675 verbose lock handlebars@1.3.0 /home/maicon/.npm/15405714-handlebars-1-3-0.lock
1676 silly lockFile 67d2df2a-mkdirp-0-3-5 mkdirp@0.3.5
1677 verbose lock mkdirp@0.3.5 /home/maicon/.npm/67d2df2a-mkdirp-0-3-5.lock
1678 silly lockFile 609d7676-semver-2-2-1 semver@2.2.1
1679 verbose lock semver@2.2.1 /home/maicon/.npm/609d7676-semver-2-2-1.lock
1680 silly lockFile a8edf972-request-2-34-0 request@2.34.0
1681 verbose lock request@2.34.0 /home/maicon/.npm/a8edf972-request-2-34-0.lock
1682 silly lockFile 2c2c1b85-intersect-0-0-3 intersect@0.0.3
1683 verbose lock intersect@0.0.3 /home/maicon/.npm/2c2c1b85-intersect-0-0-3.lock
1684 silly lockFile eed3387d-bower-config-0-4-5 bower-config@0.4.5
1685 verbose lock bower-config@0.4.5 /home/maicon/.npm/eed3387d-bower-config-0-4-5.lock
1686 silly lockFile ef81ebb1-lru-cache-2-3-1 lru-cache@2.3.1
1687 verbose lock lru-cache@2.3.1 /home/maicon/.npm/ef81ebb1-lru-cache-2-3-1.lock
1688 silly lockFile 814f6e89-request-replay-0-2-0 request-replay@0.2.0
1689 verbose lock request-replay@0.2.0 /home/maicon/.npm/814f6e89-request-replay-0-2-0.lock
1690 silly lockFile 7b48fbe0-request-2-27-0 request@2.27.0
1691 verbose lock request@2.27.0 /home/maicon/.npm/7b48fbe0-request-2-27-0.lock
1692 silly lockFile cc8e51ee-q-0-9-7 q@0.9.7
1693 verbose lock q@0.9.7 /home/maicon/.npm/cc8e51ee-q-0-9-7.lock
1694 silly lockFile 037658bd-array-filter-0-0-1 array-filter@0.0.1
1695 verbose lock array-filter@0.0.1 /home/maicon/.npm/037658bd-array-filter-0-0-1.lock
1696 silly lockFile 386d7f9d-semver-2-1-0 semver@2.1.0
1697 verbose lock semver@2.1.0 /home/maicon/.npm/386d7f9d-semver-2-1-0.lock
1698 silly lockFile 55113639-configstore-0-2-3 configstore@0.2.3
1699 verbose lock configstore@0.2.3 /home/maicon/.npm/55113639-configstore-0-2-3.lock
1700 silly lockFile dd309aa9-mout-0-6-0 mout@0.6.0
1701 verbose lock mout@0.6.0 /home/maicon/.npm/dd309aa9-mout-0-6-0.lock
1702 silly lockFile 92f0553b-minimist-0-0-10 minimist@0.0.10
1703 verbose lock minimist@0.0.10 /home/maicon/.npm/92f0553b-minimist-0-0-10.lock
1704 silly lockFile 7fdafe79-ansicolors-0-2-1 ansicolors@0.2.1
1705 verbose lock ansicolors@0.2.1 /home/maicon/.npm/7fdafe79-ansicolors-0-2-1.lock
1706 silly lockFile 758953aa-esprima-1-0-4 esprima@1.0.4
1707 verbose lock esprima@1.0.4 /home/maicon/.npm/758953aa-esprima-1-0-4.lock
1708 silly lockFile 77d90afb-object-assign-0-1-2 object-assign@0.1.2
1709 verbose lock object-assign@0.1.2 /home/maicon/.npm/77d90afb-object-assign-0-1-2.lock
1710 silly lockFile 16dda9ec-touch-0-0-2 touch@0.0.2
1711 verbose lock touch@0.0.2 /home/maicon/.npm/16dda9ec-touch-0-0-2.lock
1712 silly lockFile 3d47898c-readable-stream-1-1-13-1 readable-stream@1.1.13-1
1713 verbose lock readable-stream@1.1.13-1 /home/maicon/.npm/3d47898c-readable-stream-1-1-13-1.lock
1714 silly lockFile 5c116ec2-traverse-0-3-9 traverse@0.3.9
1715 verbose lock traverse@0.3.9 /home/maicon/.npm/5c116ec2-traverse-0-3-9.lock
1716 silly lockFile 8f87aaee-transformers-2-1-0 transformers@2.1.0
1717 verbose lock transformers@2.1.0 /home/maicon/.npm/8f87aaee-transformers-2-1-0.lock
1718 silly lockFile 43e0ae83-commander-2-1-0 commander@2.1.0
1719 verbose lock commander@2.1.0 /home/maicon/.npm/43e0ae83-commander-2-1-0.lock
1720 silly lockFile 9d63ca51-readdirp-0-2-5 readdirp@0.2.5
1721 verbose lock readdirp@0.2.5 /home/maicon/.npm/9d63ca51-readdirp-0-2-5.lock
1722 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
1723 verbose lock optimist@0.3.7 /home/maicon/.npm/090e1d8d-optimist-0-3-7.lock
1724 verbose url raw express
1725 verbose url resolving [ 'https://registry.npmjs.org/', './express' ]
1726 verbose url resolved https://registry.npmjs.org/express
1727 info trying registry request attempt 1 at 20:00:51
1728 verbose etag "DZ5NKQ50MT6T79H7ACEC3VOOC"
1729 http GET https://registry.npmjs.org/express
1730 verbose url raw mongoose
1731 verbose url resolving [ 'https://registry.npmjs.org/', './mongoose' ]
1732 verbose url resolved https://registry.npmjs.org/mongoose
1733 info trying registry request attempt 1 at 20:00:51
1734 verbose etag "AC4LH4C3Y93QUO2KAP71PASFH"
1735 http GET https://registry.npmjs.org/mongoose
1736 verbose url raw gaze
1737 verbose url resolving [ 'https://registry.npmjs.org/', './gaze' ]
1738 verbose url resolved https://registry.npmjs.org/gaze
1739 info trying registry request attempt 1 at 20:00:51
1740 verbose etag "89ZS2QHTPOEQ99P7PUGYB6988"
1741 http GET https://registry.npmjs.org/gaze
1742 verbose registry.get async not expired, no request
1743 verbose url raw nopt
1744 verbose url resolving [ 'https://registry.npmjs.org/', './nopt' ]
1745 verbose url resolved https://registry.npmjs.org/nopt
1746 info trying registry request attempt 1 at 20:00:51
1747 verbose etag "5QLU65DX50UPKFOQALW73JMEO"
1748 http GET https://registry.npmjs.org/nopt
1749 verbose url raw debug
1750 verbose url resolving [ 'https://registry.npmjs.org/', './debug' ]
1751 verbose url resolved https://registry.npmjs.org/debug
1752 info trying registry request attempt 1 at 20:00:51
1753 verbose etag "C60JRWWG62QOUCBYQ778EYHBU"
1754 http GET https://registry.npmjs.org/debug
1755 verbose url raw qs
1756 verbose url resolving [ 'https://registry.npmjs.org/', './qs' ]
1757 verbose url resolved https://registry.npmjs.org/qs
1758 info trying registry request attempt 1 at 20:00:51
1759 verbose etag "EY4LXYYQ4LWO235OEZP0WY4OH"
1760 http GET https://registry.npmjs.org/qs
1761 verbose url raw faye-websocket
1762 verbose url resolving [ 'https://registry.npmjs.org/', './faye-websocket' ]
1763 verbose url resolved https://registry.npmjs.org/faye-websocket
1764 info trying registry request attempt 1 at 20:00:51
1765 verbose etag "9VQZL6Y7ZU0EIUH7VJ2YSDQC2"
1766 http GET https://registry.npmjs.org/faye-websocket
1767 verbose url raw strip-ansi
1768 verbose url resolving [ 'https://registry.npmjs.org/', './strip-ansi' ]
1769 verbose url resolved https://registry.npmjs.org/strip-ansi
1770 info trying registry request attempt 1 at 20:00:51
1771 verbose etag "WOJXNPR1MVV9VX6KQE8Z25PH"
1772 http GET https://registry.npmjs.org/strip-ansi
1773 verbose url raw resolve
1774 verbose url resolving [ 'https://registry.npmjs.org/', './resolve' ]
1775 verbose url resolved https://registry.npmjs.org/resolve
1776 info trying registry request attempt 1 at 20:00:51
1777 verbose etag "EBLF8PWL3LHCP6FDF5SA44F6C"
1778 http GET https://registry.npmjs.org/resolve
1779 verbose url raw nopt
1780 verbose url resolving [ 'https://registry.npmjs.org/', './nopt' ]
1781 verbose url resolved https://registry.npmjs.org/nopt
1782 info trying registry request attempt 1 at 20:00:51
1783 verbose etag "5QLU65DX50UPKFOQALW73JMEO"
1784 http GET https://registry.npmjs.org/nopt
1785 verbose registry.get glob not expired, no request
1786 verbose url raw fstream-ignore
1787 verbose url resolving [ 'https://registry.npmjs.org/', './fstream-ignore' ]
1788 verbose url resolved https://registry.npmjs.org/fstream-ignore
1789 info trying registry request attempt 1 at 20:00:51
1790 verbose etag "1O62VL9T7C2KOML1PS81J54HB"
1791 http GET https://registry.npmjs.org/fstream-ignore
1792 verbose url raw inquirer
1793 verbose url resolving [ 'https://registry.npmjs.org/', './inquirer' ]
1794 verbose url resolved https://registry.npmjs.org/inquirer
1795 info trying registry request attempt 1 at 20:00:51
1796 verbose etag "56VGPLTPR7OUGBMB5TNHNPNAV"
1797 http GET https://registry.npmjs.org/inquirer
1798 verbose url raw handlebars
1799 verbose url resolving [ 'https://registry.npmjs.org/', './handlebars' ]
1800 verbose url resolved https://registry.npmjs.org/handlebars
1801 info trying registry request attempt 1 at 20:00:51
1802 verbose etag "C22VKCLWZEXO0NISNTPLGLEIV"
1803 http GET https://registry.npmjs.org/handlebars
1804 verbose url raw mkdirp
1805 verbose url resolving [ 'https://registry.npmjs.org/', './mkdirp' ]
1806 verbose url resolved https://registry.npmjs.org/mkdirp
1807 info trying registry request attempt 1 at 20:00:51
1808 verbose etag "ZX76IOCGNQ0Y4AWM9E9SZVM7"
1809 http GET https://registry.npmjs.org/mkdirp
1810 verbose url raw semver
1811 verbose url resolving [ 'https://registry.npmjs.org/', './semver' ]
1812 verbose url resolved https://registry.npmjs.org/semver
1813 info trying registry request attempt 1 at 20:00:51
1814 verbose etag "5T6MUUO9XMCIT4W783K8VECVS"
1815 http GET https://registry.npmjs.org/semver
1816 verbose registry.get request not expired, no request
1817 verbose url raw intersect
1818 verbose url resolving [ 'https://registry.npmjs.org/', './intersect' ]
1819 verbose url resolved https://registry.npmjs.org/intersect
1820 info trying registry request attempt 1 at 20:00:51
1821 verbose etag "5INY0JE2N5WN8SQB3QT1L04DP"
1822 http GET https://registry.npmjs.org/intersect
1823 verbose url raw bower-config
1824 verbose url resolving [ 'https://registry.npmjs.org/', './bower-config' ]
1825 verbose url resolved https://registry.npmjs.org/bower-config
1826 info trying registry request attempt 1 at 20:00:51
1827 verbose etag "7K1Q5A5KOF51LZ9IWDBQO0KV2"
1828 http GET https://registry.npmjs.org/bower-config
1829 verbose url raw lru-cache
1830 verbose url resolving [ 'https://registry.npmjs.org/', './lru-cache' ]
1831 verbose url resolved https://registry.npmjs.org/lru-cache
1832 info trying registry request attempt 1 at 20:00:51
1833 verbose etag "6EAH4E2XKATH9G2WW7G1L4L00"
1834 http GET https://registry.npmjs.org/lru-cache
1835 verbose url raw request-replay
1836 verbose url resolving [ 'https://registry.npmjs.org/', './request-replay' ]
1837 verbose url resolved https://registry.npmjs.org/request-replay
1838 info trying registry request attempt 1 at 20:00:51
1839 verbose etag "801UYDWZI3UDCQRNWELW4QE19"
1840 http GET https://registry.npmjs.org/request-replay
1841 verbose registry.get request not expired, no request
1842 verbose url raw q
1843 verbose url resolving [ 'https://registry.npmjs.org/', './q' ]
1844 verbose url resolved https://registry.npmjs.org/q
1845 info trying registry request attempt 1 at 20:00:51
1846 verbose etag "BZBSW861DDQQDA76ALY8BWX4S"
1847 http GET https://registry.npmjs.org/q
1848 verbose url raw array-filter
1849 verbose url resolving [ 'https://registry.npmjs.org/', './array-filter' ]
1850 verbose url resolved https://registry.npmjs.org/array-filter
1851 info trying registry request attempt 1 at 20:00:51
1852 verbose etag "DCUSFFZN443VF2CQG666LWFQY"
1853 http GET https://registry.npmjs.org/array-filter
1854 verbose url raw semver
1855 verbose url resolving [ 'https://registry.npmjs.org/', './semver' ]
1856 verbose url resolved https://registry.npmjs.org/semver
1857 info trying registry request attempt 1 at 20:00:51
1858 verbose etag "5T6MUUO9XMCIT4W783K8VECVS"
1859 http GET https://registry.npmjs.org/semver
1860 verbose registry.get configstore not expired, no request
1861 verbose url raw mout
1862 verbose url resolving [ 'https://registry.npmjs.org/', './mout' ]
1863 verbose url resolved https://registry.npmjs.org/mout
1864 info trying registry request attempt 1 at 20:00:52
1865 verbose etag "EO8H8J6WJ8LMBJBXQLXVENMSZ"
1866 http GET https://registry.npmjs.org/mout
1867 verbose registry.get minimist not expired, no request
1868 verbose url raw ansicolors
1869 verbose url resolving [ 'https://registry.npmjs.org/', './ansicolors' ]
1870 verbose url resolved https://registry.npmjs.org/ansicolors
1871 info trying registry request attempt 1 at 20:00:52
1872 verbose etag "4HMIPZFGKFYX9KGNISEDHESGA"
1873 http GET https://registry.npmjs.org/ansicolors
1874 verbose registry.get esprima not expired, no request
1875 verbose url raw object-assign
1876 verbose url resolving [ 'https://registry.npmjs.org/', './object-assign' ]
1877 verbose url resolved https://registry.npmjs.org/object-assign
1878 info trying registry request attempt 1 at 20:00:52
1879 verbose etag "6BQC2FXYR4Q3O2OCKTOL4T7YA"
1880 http GET https://registry.npmjs.org/object-assign
1881 verbose registry.get touch not expired, no request
1882 verbose registry.get readable-stream not expired, no request
1883 verbose registry.get traverse not expired, no request
1884 verbose url raw transformers
1885 verbose url resolving [ 'https://registry.npmjs.org/', './transformers' ]
1886 verbose url resolved https://registry.npmjs.org/transformers
1887 info trying registry request attempt 1 at 20:00:52
1888 verbose etag "EJHDDM1TKO3FLRV315ZGMCFXQ"
1889 http GET https://registry.npmjs.org/transformers
1890 verbose url raw commander
1891 verbose url resolving [ 'https://registry.npmjs.org/', './commander' ]
1892 verbose url resolved https://registry.npmjs.org/commander
1893 info trying registry request attempt 1 at 20:00:52
1894 verbose etag "9H3SEM0K3HGUWVNL406V8YH40"
1895 http GET https://registry.npmjs.org/commander
1896 verbose registry.get readdirp not expired, no request
1897 verbose url raw optimist
1898 verbose url resolving [ 'https://registry.npmjs.org/', './optimist' ]
1899 verbose url resolved https://registry.npmjs.org/optimist
1900 info trying registry request attempt 1 at 20:00:52
1901 verbose etag "1IKU6GRZMZDCQ2MB3C2XUCU7G"
1902 http GET https://registry.npmjs.org/optimist
1903 silly lockFile 753c5e7b-y-npmjs-org-glob-glob-3-2-10-tgz https://registry.npmjs.org/glob/-/glob-3.2.10.tgz
1904 verbose lock https://registry.npmjs.org/glob/-/glob-3.2.10.tgz /home/maicon/.npm/753c5e7b-y-npmjs-org-glob-glob-3-2-10-tgz.lock
1905 silly lockFile 10db3d6b--org-readdirp-readdirp-0-2-5-tgz https://registry.npmjs.org/readdirp/-/readdirp-0.2.5.tgz
1906 verbose lock https://registry.npmjs.org/readdirp/-/readdirp-0.2.5.tgz /home/maicon/.npm/10db3d6b--org-readdirp-readdirp-0-2-5-tgz.lock
1907 verbose addRemoteTarball [ 'https://registry.npmjs.org/glob/-/glob-3.2.10.tgz',
1907 verbose addRemoteTarball   'e229a4d843fdabca3dd8cdc96c456e29c6e79f13' ]
1908 verbose addRemoteTarball [ 'https://registry.npmjs.org/readdirp/-/readdirp-0.2.5.tgz',
1908 verbose addRemoteTarball   'c4c276e52977ae25db5191fe51d008550f15d9bb' ]
1909 info retry fetch attempt 1 at 20:00:53
1910 verbose fetch to= /home/maicon/tmp/npm-3527-VXzCaPeT/1400626853327-0.9436604382935911/tmp.tgz
1911 silly lockFile 7b48fbe0-request-2-27-0 request@2.27.0
1912 silly lockFile 7b48fbe0-request-2-27-0 request@2.27.0
1913 silly lockFile 16dda9ec-touch-0-0-2 touch@0.0.2
1914 silly lockFile 16dda9ec-touch-0-0-2 touch@0.0.2
1915 silly lockFile a8edf972-request-2-34-0 request@2.34.0
1916 silly lockFile a8edf972-request-2-34-0 request@2.34.0
1917 silly lockFile 3d47898c-readable-stream-1-1-13-1 readable-stream@1.1.13-1
1918 silly lockFile 3d47898c-readable-stream-1-1-13-1 readable-stream@1.1.13-1
1919 silly lockFile 098b530d-async-0-2-10 async@0.2.10
1920 silly lockFile 098b530d-async-0-2-10 async@0.2.10
1921 silly lockFile 5c116ec2-traverse-0-3-9 traverse@0.3.9
1922 silly lockFile 5c116ec2-traverse-0-3-9 traverse@0.3.9
1923 info retry fetch attempt 1 at 20:00:53
1924 verbose fetch to= /home/maicon/tmp/npm-3527-VXzCaPeT/1400626853350-0.44935649586841464/tmp.tgz
1925 http GET https://registry.npmjs.org/glob/-/glob-3.2.10.tgz
1926 silly lockFile 758953aa-esprima-1-0-4 esprima@1.0.4
1927 silly lockFile 758953aa-esprima-1-0-4 esprima@1.0.4
1928 silly lockFile 55113639-configstore-0-2-3 configstore@0.2.3
1929 silly lockFile 55113639-configstore-0-2-3 configstore@0.2.3
1930 http GET https://registry.npmjs.org/readdirp/-/readdirp-0.2.5.tgz
1931 silly lockFile 92f0553b-minimist-0-0-10 minimist@0.0.10
1932 silly lockFile 92f0553b-minimist-0-0-10 minimist@0.0.10
1933 silly resolved [ { name: 'request',
1933 silly resolved     description: 'Simplified HTTP request client.',
1933 silly resolved     tags: [ 'http', 'simple', 'util', 'utility' ],
1933 silly resolved     version: '2.27.0',
1933 silly resolved     author: { name: 'Mikeal Rogers', email: 'mikeal.rogers@gmail.com' },
1933 silly resolved     repository: { type: 'git', url: 'http://github.com/mikeal/request.git' },
1933 silly resolved     bugs: { url: 'http://github.com/mikeal/request/issues' },
1933 silly resolved     engines: [ 'node >= 0.8.0' ],
1933 silly resolved     main: 'index.js',
1933 silly resolved     dependencies:
1933 silly resolved      { qs: '~0.6.0',
1933 silly resolved        'json-stringify-safe': '~5.0.0',
1933 silly resolved        'forever-agent': '~0.5.0',
1933 silly resolved        'tunnel-agent': '~0.3.0',
1933 silly resolved        'http-signature': '~0.10.0',
1933 silly resolved        hawk: '~1.0.0',
1933 silly resolved        'aws-sign': '~0.3.0',
1933 silly resolved        'oauth-sign': '~0.3.0',
1933 silly resolved        'cookie-jar': '~0.3.0',
1933 silly resolved        'node-uuid': '~1.4.0',
1933 silly resolved        mime: '~1.2.9',
1933 silly resolved        'form-data': '~0.1.0' },
1933 silly resolved     scripts: { test: 'node tests/run.js' },
1933 silly resolved     readme: '# Request -- Simplified HTTP client\n\n[![NPM](https://nodei.co/npm/request.png)](https://nodei.co/npm/request/)\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It supports HTTPS and follows redirects by default.\n\n```javascript\nvar request = require(\'request\');\nrequest(\'http://www.google.com\', function (error, response, body) {\n  if (!error && response.statusCode == 200) {\n    console.log(body) // Print the google web page.\n  }\n})\n```\n\n## Streaming\n\nYou can stream any response to a file stream.\n\n```javascript\nrequest(\'http://google.com/doodle.png\').pipe(fs.createWriteStream(\'doodle.png\'))\n```\n\nYou can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types, in this case `application/json`, and use the proper content-type in the PUT request if one is not already provided in the headers.\n\n```javascript\nfs.createReadStream(\'file.json\').pipe(request.put(\'http://mysite.com/obj.json\'))\n```\n\nRequest can also pipe to itself. When doing so the content-type and content-length will be preserved in the PUT headers.\n\n```javascript\nrequest.get(\'http://google.com/img.png\').pipe(request.put(\'http://mysite.com/img.png\'))\n```\n\nNow let\'s get fancy.\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    if (req.method === \'PUT\') {\n      req.pipe(request.put(\'http://mysite.com/doodle.png\'))\n    } else if (req.method === \'GET\' || req.method === \'HEAD\') {\n      request.get(\'http://mysite.com/doodle.png\').pipe(resp)\n    }\n  }\n})\n```\n\nYou can also pipe() from a http.ServerRequest instance and to a http.ServerResponse instance. The HTTP method and headers will be sent as well as the entity-body data. Which means that, if you don\'t really care about security, you can do:\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    var x = request(\'http://mysite.com/doodle.png\')\n    req.pipe(x)\n    x.pipe(resp)\n  }\n})\n```\n\nAnd since pipe() returns the destination stream in node 0.5.x you can do one line proxying :)\n\n```javascript\nreq.pipe(request(\'http://mysite.com/doodle.png\')).pipe(resp)\n```\n\nAlso, none of this new functionality conflicts with requests previous features, it just expands them.\n\n```javascript\nvar r = request.defaults({\'proxy\':\'http://localproxy.com\'})\n\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    r.get(\'http://google.com/doodle.png\').pipe(resp)\n  }\n})\n```\nYou can still use intermediate proxies, the requests will still follow HTTP forwards, etc.\n\n## Forms\n\n`request` supports `application/x-www-form-urlencoded` and `multipart/form-data` form uploads. For `multipart/related` refer to the `multipart` API.\n\nUrl encoded forms are simple\n\n```javascript\nrequest.post(\'http://service.com/upload\', {form:{key:\'value\'}})\n// or\nrequest.post(\'http://service.com/upload\').form({key:\'value\'})\n```\n\nFor `multipart/form-data` we use the [form-data](https://github.com/felixge/node-form-data) library by [@felixge](https://github.com/felixge). You don\'t need to worry about piping the form object or setting the headers, `request` will handle that for you.\n\n```javascript\nvar r = request.post(\'http://service.com/upload\')\nvar form = r.form()\nform.append(\'my_field\', \'my_value\')\nform.append(\'my_buffer\', new Buffer([1, 2, 3]))\nform.append(\'my_file\', fs.createReadStream(path.join(__dirname, \'doodle.png\'))\nform.append(\'remote_file\', request(\'http://google.com/doodle.png\'))\n```\n\n## HTTP Authentication\n\n```javascript\nrequest.get(\'http://some.server.com/\').auth(\'username\', \'password\', false);\n// or\nrequest.get(\'http://some.server.com/\', {\n  \'auth\': {\n    \'user\': \'username\',\n    \'pass\': \'password\',\n    \'sendImmediately\': false\n  }\n});\n```\n\nIf passed as an option, `auth` should be a hash containing values `user` || `username`, `password` || `pass`, and `sendImmediately` (optional).  The method form takes parameters `auth(username, password, sendImmediately)`.\n\n`sendImmediately` defaults to true, which will cause a basic authentication header to be sent.  If `sendImmediately` is `false`, then `request` will retry with a proper authentication header after receiving a 401 response from the server (which must contain a `WWW-Authenticate` header indicating the required authentication method).\n\nDigest authentication is supported, but it only works with `sendImmediately` set to `false` (otherwise `request` will send basic authentication on the initial request, which will probably cause the request to fail).\n\n## OAuth Signing\n\n```javascript\n// Twitter OAuth\nvar qs = require(\'querystring\')\n  , oauth =\n    { callback: \'http://mysite.com/callback/\'\n    , consumer_key: CONSUMER_KEY\n    , consumer_secret: CONSUMER_SECRET\n    }\n  , url = \'https://api.twitter.com/oauth/request_token\'\n  ;\nrequest.post({url:url, oauth:oauth}, function (e, r, body) {\n  // Ideally, you would take the body in the response\n  // and construct a URL that a user clicks on (like a sign in button).\n  // The verifier is only available in the response after a user has\n  // verified with twitter that they are authorizing your app.\n  var access_token = qs.parse(body)\n    , oauth =\n      { consumer_key: CONSUMER_KEY\n      , consumer_secret: CONSUMER_SECRET\n      , token: access_token.oauth_token\n      , verifier: access_token.oauth_verifier\n      }\n    , url = \'https://api.twitter.com/oauth/access_token\'\n    ;\n  request.post({url:url, oauth:oauth}, function (e, r, body) {\n    var perm_token = qs.parse(body)\n      , oauth =\n        { consumer_key: CONSUMER_KEY\n        , consumer_secret: CONSUMER_SECRET\n        , token: perm_token.oauth_token\n        , token_secret: perm_token.oauth_token_secret\n        }\n      , url = \'https://api.twitter.com/1/users/show.json?\'\n      , params =\n        { screen_name: perm_token.screen_name\n        , user_id: perm_token.user_id\n        }\n      ;\n    url += qs.stringify(params)\n    request.get({url:url, oauth:oauth, json:true}, function (e, r, user) {\n      console.log(user)\n    })\n  })\n})\n```\n\n\n\n### request(options, callback)\n\nThe first argument can be either a url or an options object. The only required option is uri, all others are optional.\n\n* `uri` || `url` - fully qualified uri or a parsed url object from url.parse()\n* `qs` - object containing querystring values to be appended to the uri\n* `method` - http method, defaults to GET\n* `headers` - http headers, defaults to {}\n* `body` - entity body for PATCH, POST and PUT requests. Must be buffer or string.\n* `form` - when passed an object this will set `body` but to a querystring representation of value and adds `Content-type: application/x-www-form-urlencoded; charset=utf-8` header. When passed no option a FormData instance is returned that will be piped to request.\n* `auth` - A hash containing values `user` || `username`, `password` || `pass`, and `sendImmediately` (optional).  See documentation above.\n* `json` - sets `body` but to JSON representation of value and adds `Content-type: application/json` header.  Additionally, parses the response body as json.\n* `multipart` - (experimental) array of objects which contains their own headers and `body` attribute. Sends `multipart/related` request. See example below.\n* `followRedirect` - follow HTTP 3xx responses as redirects. defaults to true.\n* `followAllRedirects` - follow non-GET HTTP 3xx responses as redirects. defaults to false.\n* `maxRedirects` - the maximum number of redirects to follow, defaults to 10.\n* `encoding` - Encoding to be used on `setEncoding` of response data. If set to `null`, the body is returned as a Buffer.\n* `pool` - A hash object containing the agents for these requests. If omitted this request will use the global pool which is set to node\'s default maxSockets.\n* `pool.maxSockets` - Integer containing the maximum amount of sockets in the pool.\n* `timeout` - Integer containing the number of milliseconds to wait for a request to respond before aborting the request\n* `proxy` - An HTTP proxy to be used. Support proxy Auth with Basic Auth the same way it\'s supported with the `url` parameter by embedding the auth info in the uri.\n* `oauth` - Options for OAuth HMAC-SHA1 signing, see documentation above.\n* `hawk` - Options for [Hawk signing](https://github.com/hueniverse/hawk). The `credentials` key must contain the necessary signing info, [see hawk docs for details](https://github.com/hueniverse/hawk#usage-example).\n* `strictSSL` - Set to `true` to require that SSL certificates be valid. Note: to use your own certificate authority, you need to specify an agent that was created with that ca as an option.\n* `jar` - Set to `true` if you want cookies to be remembered for future use, or define your custom cookie jar (see examples section)\n* `aws` - object containing aws signing information, should have the properties `key` and `secret` as well as `bucket` unless you\'re specifying your bucket as part of the path, or you are making a request that doesn\'t use a bucket (i.e. GET Services)\n* `httpSignature` - Options for the [HTTP Signature Scheme](https://github.com/joyent/node-http-signature/blob/master/http_signing.md) using [Joyent\'s library](https://github.com/joyent/node-http-signature). The `keyId` and `key` properties must be specified. See the docs for other options.\n* `localAddress` - Local interface to bind for network connections.\n\n\nThe callback argument gets 3 arguments. The first is an error when applicable (usually from the http.Client option not the http.ClientRequest object). The second is an http.ClientResponse object. The third is the response body String or Buffer.\n\n## Convenience methods\n\nThere are also shorthand methods for different HTTP METHODs and some other conveniences.\n\n### request.defaults(options)\n\nThis method returns a wrapper around the normal request API that defaults to whatever options you pass in to it.\n\n### request.put\n\nSame as request() but defaults to `method: "PUT"`.\n\n```javascript\nrequest.put(url)\n```\n\n### request.patch\n\nSame as request() but defaults to `method: "PATCH"`.\n\n```javascript\nrequest.patch(url)\n```\n\n### request.post\n\nSame as request() but defaults to `method: "POST"`.\n\n```javascript\nrequest.post(url)\n```\n\n### request.head\n\nSame as request() but defaults to `method: "HEAD"`.\n\n```javascript\nrequest.head(url)\n```\n\n### request.del\n\nSame as request() but defaults to `method: "DELETE"`.\n\n```javascript\nrequest.del(url)\n```\n\n### request.get\n\nAlias to normal request method for uniformity.\n\n```javascript\nrequest.get(url)\n```\n### request.cookie\n\nFunction that creates a new cookie.\n\n```javascript\nrequest.cookie(\'cookie_string_here\')\n```\n### request.jar\n\nFunction that creates a new cookie jar.\n\n```javascript\nrequest.jar()\n```\n\n\n## Examples:\n\n```javascript\n  var request = require(\'request\')\n    , rand = Math.floor(Math.random()*100000000).toString()\n    ;\n  request(\n    { method: \'PUT\'\n    , uri: \'http://mikeal.iriscouch.com/testjs/\' + rand\n    , multipart:\n      [ { \'content-type\': \'application/json\'\n        ,  body: JSON.stringify({foo: \'bar\', _attachments: {\'message.txt\': {follows: true, length: 18, \'content_type\': \'text/plain\' }}})\n        }\n      , { body: \'I am an attachment\' }\n      ]\n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log(\'document saved as: http://mikeal.iriscouch.com/testjs/\'+ rand)\n      } else {\n        console.log(\'error: \'+ response.statusCode)\n        console.log(body)\n      }\n    }\n  )\n```\nCookies are disabled by default (else, they would be used in subsequent requests). To enable cookies set jar to true (either in defaults or in the options sent).\n\n```javascript\nvar request = request.defaults({jar: true})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\n\nIf you to use a custom cookie jar (instead of letting request use its own global cookie jar) you do so by setting the jar default or by specifying it as an option:\n\n```javascript\nvar j = request.jar()\nvar request = request.defaults({jar:j})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\nOR\n\n```javascript\nvar j = request.jar()\nvar cookie = request.cookie(\'your_cookie_here\')\nj.add(cookie)\nrequest({url: \'http://www.google.com\', jar: j}, function () {\n  request(\'http://images.google.com\')\n})\n```\n',
1933 silly resolved     readmeFilename: 'README.md',
1933 silly resolved     homepage: 'https://github.com/mikeal/request',
1933 silly resolved     _id: 'request@2.27.0',
1933 silly resolved     _shasum: 'dfb1a224dd3a5a9bade4337012503d710e538668',
1933 silly resolved     _from: 'request@2.27.0',
1933 silly resolved     _resolved: 'https://registry.npmjs.org/request/-/request-2.27.0.tgz' } ]
1934 info install request@2.27.0 into /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client
1935 info installOne request@2.27.0
1936 silly resolved [ { name: 'request',
1936 silly resolved     description: 'Simplified HTTP request client.',
1936 silly resolved     tags: [ 'http', 'simple', 'util', 'utility' ],
1936 silly resolved     version: '2.27.0',
1936 silly resolved     author: { name: 'Mikeal Rogers', email: 'mikeal.rogers@gmail.com' },
1936 silly resolved     repository: { type: 'git', url: 'http://github.com/mikeal/request.git' },
1936 silly resolved     bugs: { url: 'http://github.com/mikeal/request/issues' },
1936 silly resolved     engines: [ 'node >= 0.8.0' ],
1936 silly resolved     main: 'index.js',
1936 silly resolved     dependencies:
1936 silly resolved      { qs: '~0.6.0',
1936 silly resolved        'json-stringify-safe': '~5.0.0',
1936 silly resolved        'forever-agent': '~0.5.0',
1936 silly resolved        'tunnel-agent': '~0.3.0',
1936 silly resolved        'http-signature': '~0.10.0',
1936 silly resolved        hawk: '~1.0.0',
1936 silly resolved        'aws-sign': '~0.3.0',
1936 silly resolved        'oauth-sign': '~0.3.0',
1936 silly resolved        'cookie-jar': '~0.3.0',
1936 silly resolved        'node-uuid': '~1.4.0',
1936 silly resolved        mime: '~1.2.9',
1936 silly resolved        'form-data': '~0.1.0' },
1936 silly resolved     scripts: { test: 'node tests/run.js' },
1936 silly resolved     readme: '# Request -- Simplified HTTP client\n\n[![NPM](https://nodei.co/npm/request.png)](https://nodei.co/npm/request/)\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It supports HTTPS and follows redirects by default.\n\n```javascript\nvar request = require(\'request\');\nrequest(\'http://www.google.com\', function (error, response, body) {\n  if (!error && response.statusCode == 200) {\n    console.log(body) // Print the google web page.\n  }\n})\n```\n\n## Streaming\n\nYou can stream any response to a file stream.\n\n```javascript\nrequest(\'http://google.com/doodle.png\').pipe(fs.createWriteStream(\'doodle.png\'))\n```\n\nYou can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types, in this case `application/json`, and use the proper content-type in the PUT request if one is not already provided in the headers.\n\n```javascript\nfs.createReadStream(\'file.json\').pipe(request.put(\'http://mysite.com/obj.json\'))\n```\n\nRequest can also pipe to itself. When doing so the content-type and content-length will be preserved in the PUT headers.\n\n```javascript\nrequest.get(\'http://google.com/img.png\').pipe(request.put(\'http://mysite.com/img.png\'))\n```\n\nNow let\'s get fancy.\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    if (req.method === \'PUT\') {\n      req.pipe(request.put(\'http://mysite.com/doodle.png\'))\n    } else if (req.method === \'GET\' || req.method === \'HEAD\') {\n      request.get(\'http://mysite.com/doodle.png\').pipe(resp)\n    }\n  }\n})\n```\n\nYou can also pipe() from a http.ServerRequest instance and to a http.ServerResponse instance. The HTTP method and headers will be sent as well as the entity-body data. Which means that, if you don\'t really care about security, you can do:\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    var x = request(\'http://mysite.com/doodle.png\')\n    req.pipe(x)\n    x.pipe(resp)\n  }\n})\n```\n\nAnd since pipe() returns the destination stream in node 0.5.x you can do one line proxying :)\n\n```javascript\nreq.pipe(request(\'http://mysite.com/doodle.png\')).pipe(resp)\n```\n\nAlso, none of this new functionality conflicts with requests previous features, it just expands them.\n\n```javascript\nvar r = request.defaults({\'proxy\':\'http://localproxy.com\'})\n\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    r.get(\'http://google.com/doodle.png\').pipe(resp)\n  }\n})\n```\nYou can still use intermediate proxies, the requests will still follow HTTP forwards, etc.\n\n## Forms\n\n`request` supports `application/x-www-form-urlencoded` and `multipart/form-data` form uploads. For `multipart/related` refer to the `multipart` API.\n\nUrl encoded forms are simple\n\n```javascript\nrequest.post(\'http://service.com/upload\', {form:{key:\'value\'}})\n// or\nrequest.post(\'http://service.com/upload\').form({key:\'value\'})\n```\n\nFor `multipart/form-data` we use the [form-data](https://github.com/felixge/node-form-data) library by [@felixge](https://github.com/felixge). You don\'t need to worry about piping the form object or setting the headers, `request` will handle that for you.\n\n```javascript\nvar r = request.post(\'http://service.com/upload\')\nvar form = r.form()\nform.append(\'my_field\', \'my_value\')\nform.append(\'my_buffer\', new Buffer([1, 2, 3]))\nform.append(\'my_file\', fs.createReadStream(path.join(__dirname, \'doodle.png\'))\nform.append(\'remote_file\', request(\'http://google.com/doodle.png\'))\n```\n\n## HTTP Authentication\n\n```javascript\nrequest.get(\'http://some.server.com/\').auth(\'username\', \'password\', false);\n// or\nrequest.get(\'http://some.server.com/\', {\n  \'auth\': {\n    \'user\': \'username\',\n    \'pass\': \'password\',\n    \'sendImmediately\': false\n  }\n});\n```\n\nIf passed as an option, `auth` should be a hash containing values `user` || `username`, `password` || `pass`, and `sendImmediately` (optional).  The method form takes parameters `auth(username, password, sendImmediately)`.\n\n`sendImmediately` defaults to true, which will cause a basic authentication header to be sent.  If `sendImmediately` is `false`, then `request` will retry with a proper authentication header after receiving a 401 response from the server (which must contain a `WWW-Authenticate` header indicating the required authentication method).\n\nDigest authentication is supported, but it only works with `sendImmediately` set to `false` (otherwise `request` will send basic authentication on the initial request, which will probably cause the request to fail).\n\n## OAuth Signing\n\n```javascript\n// Twitter OAuth\nvar qs = require(\'querystring\')\n  , oauth =\n    { callback: \'http://mysite.com/callback/\'\n    , consumer_key: CONSUMER_KEY\n    , consumer_secret: CONSUMER_SECRET\n    }\n  , url = \'https://api.twitter.com/oauth/request_token\'\n  ;\nrequest.post({url:url, oauth:oauth}, function (e, r, body) {\n  // Ideally, you would take the body in the response\n  // and construct a URL that a user clicks on (like a sign in button).\n  // The verifier is only available in the response after a user has\n  // verified with twitter that they are authorizing your app.\n  var access_token = qs.parse(body)\n    , oauth =\n      { consumer_key: CONSUMER_KEY\n      , consumer_secret: CONSUMER_SECRET\n      , token: access_token.oauth_token\n      , verifier: access_token.oauth_verifier\n      }\n    , url = \'https://api.twitter.com/oauth/access_token\'\n    ;\n  request.post({url:url, oauth:oauth}, function (e, r, body) {\n    var perm_token = qs.parse(body)\n      , oauth =\n        { consumer_key: CONSUMER_KEY\n        , consumer_secret: CONSUMER_SECRET\n        , token: perm_token.oauth_token\n        , token_secret: perm_token.oauth_token_secret\n        }\n      , url = \'https://api.twitter.com/1/users/show.json?\'\n      , params =\n        { screen_name: perm_token.screen_name\n        , user_id: perm_token.user_id\n        }\n      ;\n    url += qs.stringify(params)\n    request.get({url:url, oauth:oauth, json:true}, function (e, r, user) {\n      console.log(user)\n    })\n  })\n})\n```\n\n\n\n### request(options, callback)\n\nThe first argument can be either a url or an options object. The only required option is uri, all others are optional.\n\n* `uri` || `url` - fully qualified uri or a parsed url object from url.parse()\n* `qs` - object containing querystring values to be appended to the uri\n* `method` - http method, defaults to GET\n* `headers` - http headers, defaults to {}\n* `body` - entity body for PATCH, POST and PUT requests. Must be buffer or string.\n* `form` - when passed an object this will set `body` but to a querystring representation of value and adds `Content-type: application/x-www-form-urlencoded; charset=utf-8` header. When passed no option a FormData instance is returned that will be piped to request.\n* `auth` - A hash containing values `user` || `username`, `password` || `pass`, and `sendImmediately` (optional).  See documentation above.\n* `json` - sets `body` but to JSON representation of value and adds `Content-type: application/json` header.  Additionally, parses the response body as json.\n* `multipart` - (experimental) array of objects which contains their own headers and `body` attribute. Sends `multipart/related` request. See example below.\n* `followRedirect` - follow HTTP 3xx responses as redirects. defaults to true.\n* `followAllRedirects` - follow non-GET HTTP 3xx responses as redirects. defaults to false.\n* `maxRedirects` - the maximum number of redirects to follow, defaults to 10.\n* `encoding` - Encoding to be used on `setEncoding` of response data. If set to `null`, the body is returned as a Buffer.\n* `pool` - A hash object containing the agents for these requests. If omitted this request will use the global pool which is set to node\'s default maxSockets.\n* `pool.maxSockets` - Integer containing the maximum amount of sockets in the pool.\n* `timeout` - Integer containing the number of milliseconds to wait for a request to respond before aborting the request\n* `proxy` - An HTTP proxy to be used. Support proxy Auth with Basic Auth the same way it\'s supported with the `url` parameter by embedding the auth info in the uri.\n* `oauth` - Options for OAuth HMAC-SHA1 signing, see documentation above.\n* `hawk` - Options for [Hawk signing](https://github.com/hueniverse/hawk). The `credentials` key must contain the necessary signing info, [see hawk docs for details](https://github.com/hueniverse/hawk#usage-example).\n* `strictSSL` - Set to `true` to require that SSL certificates be valid. Note: to use your own certificate authority, you need to specify an agent that was created with that ca as an option.\n* `jar` - Set to `true` if you want cookies to be remembered for future use, or define your custom cookie jar (see examples section)\n* `aws` - object containing aws signing information, should have the properties `key` and `secret` as well as `bucket` unless you\'re specifying your bucket as part of the path, or you are making a request that doesn\'t use a bucket (i.e. GET Services)\n* `httpSignature` - Options for the [HTTP Signature Scheme](https://github.com/joyent/node-http-signature/blob/master/http_signing.md) using [Joyent\'s library](https://github.com/joyent/node-http-signature). The `keyId` and `key` properties must be specified. See the docs for other options.\n* `localAddress` - Local interface to bind for network connections.\n\n\nThe callback argument gets 3 arguments. The first is an error when applicable (usually from the http.Client option not the http.ClientRequest object). The second is an http.ClientResponse object. The third is the response body String or Buffer.\n\n## Convenience methods\n\nThere are also shorthand methods for different HTTP METHODs and some other conveniences.\n\n### request.defaults(options)\n\nThis method returns a wrapper around the normal request API that defaults to whatever options you pass in to it.\n\n### request.put\n\nSame as request() but defaults to `method: "PUT"`.\n\n```javascript\nrequest.put(url)\n```\n\n### request.patch\n\nSame as request() but defaults to `method: "PATCH"`.\n\n```javascript\nrequest.patch(url)\n```\n\n### request.post\n\nSame as request() but defaults to `method: "POST"`.\n\n```javascript\nrequest.post(url)\n```\n\n### request.head\n\nSame as request() but defaults to `method: "HEAD"`.\n\n```javascript\nrequest.head(url)\n```\n\n### request.del\n\nSame as request() but defaults to `method: "DELETE"`.\n\n```javascript\nrequest.del(url)\n```\n\n### request.get\n\nAlias to normal request method for uniformity.\n\n```javascript\nrequest.get(url)\n```\n### request.cookie\n\nFunction that creates a new cookie.\n\n```javascript\nrequest.cookie(\'cookie_string_here\')\n```\n### request.jar\n\nFunction that creates a new cookie jar.\n\n```javascript\nrequest.jar()\n```\n\n\n## Examples:\n\n```javascript\n  var request = require(\'request\')\n    , rand = Math.floor(Math.random()*100000000).toString()\n    ;\n  request(\n    { method: \'PUT\'\n    , uri: \'http://mikeal.iriscouch.com/testjs/\' + rand\n    , multipart:\n      [ { \'content-type\': \'application/json\'\n        ,  body: JSON.stringify({foo: \'bar\', _attachments: {\'message.txt\': {follows: true, length: 18, \'content_type\': \'text/plain\' }}})\n        }\n      , { body: \'I am an attachment\' }\n      ]\n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log(\'document saved as: http://mikeal.iriscouch.com/testjs/\'+ rand)\n      } else {\n        console.log(\'error: \'+ response.statusCode)\n        console.log(body)\n      }\n    }\n  )\n```\nCookies are disabled by default (else, they would be used in subsequent requests). To enable cookies set jar to true (either in defaults or in the options sent).\n\n```javascript\nvar request = request.defaults({jar: true})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\n\nIf you to use a custom cookie jar (instead of letting request use its own global cookie jar) you do so by setting the jar default or by specifying it as an option:\n\n```javascript\nvar j = request.jar()\nvar request = request.defaults({jar:j})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\nOR\n\n```javascript\nvar j = request.jar()\nvar cookie = request.cookie(\'your_cookie_here\')\nj.add(cookie)\nrequest({url: \'http://www.google.com\', jar: j}, function () {\n  request(\'http://images.google.com\')\n})\n```\n',
1936 silly resolved     readmeFilename: 'README.md',
1936 silly resolved     homepage: 'https://github.com/mikeal/request',
1936 silly resolved     _id: 'request@2.27.0',
1936 silly resolved     _shasum: 'dfb1a224dd3a5a9bade4337012503d710e538668',
1936 silly resolved     _from: 'request@2.27.0',
1936 silly resolved     _resolved: 'https://registry.npmjs.org/request/-/request-2.27.0.tgz' } ]
1937 info install request@2.27.0 into /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/update-notifier
1938 info installOne request@2.27.0
1939 silly resolved [ { name: 'request',
1939 silly resolved     description: 'Simplified HTTP request client.',
1939 silly resolved     tags: [ 'http', 'simple', 'util', 'utility' ],
1939 silly resolved     version: '2.27.0',
1939 silly resolved     author: { name: 'Mikeal Rogers', email: 'mikeal.rogers@gmail.com' },
1939 silly resolved     repository: { type: 'git', url: 'http://github.com/mikeal/request.git' },
1939 silly resolved     bugs: { url: 'http://github.com/mikeal/request/issues' },
1939 silly resolved     engines: [ 'node >= 0.8.0' ],
1939 silly resolved     main: 'index.js',
1939 silly resolved     dependencies:
1939 silly resolved      { qs: '~0.6.0',
1939 silly resolved        'json-stringify-safe': '~5.0.0',
1939 silly resolved        'forever-agent': '~0.5.0',
1939 silly resolved        'tunnel-agent': '~0.3.0',
1939 silly resolved        'http-signature': '~0.10.0',
1939 silly resolved        hawk: '~1.0.0',
1939 silly resolved        'aws-sign': '~0.3.0',
1939 silly resolved        'oauth-sign': '~0.3.0',
1939 silly resolved        'cookie-jar': '~0.3.0',
1939 silly resolved        'node-uuid': '~1.4.0',
1939 silly resolved        mime: '~1.2.9',
1939 silly resolved        'form-data': '~0.1.0' },
1939 silly resolved     scripts: { test: 'node tests/run.js' },
1939 silly resolved     readme: '# Request -- Simplified HTTP client\n\n[![NPM](https://nodei.co/npm/request.png)](https://nodei.co/npm/request/)\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It supports HTTPS and follows redirects by default.\n\n```javascript\nvar request = require(\'request\');\nrequest(\'http://www.google.com\', function (error, response, body) {\n  if (!error && response.statusCode == 200) {\n    console.log(body) // Print the google web page.\n  }\n})\n```\n\n## Streaming\n\nYou can stream any response to a file stream.\n\n```javascript\nrequest(\'http://google.com/doodle.png\').pipe(fs.createWriteStream(\'doodle.png\'))\n```\n\nYou can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types, in this case `application/json`, and use the proper content-type in the PUT request if one is not already provided in the headers.\n\n```javascript\nfs.createReadStream(\'file.json\').pipe(request.put(\'http://mysite.com/obj.json\'))\n```\n\nRequest can also pipe to itself. When doing so the content-type and content-length will be preserved in the PUT headers.\n\n```javascript\nrequest.get(\'http://google.com/img.png\').pipe(request.put(\'http://mysite.com/img.png\'))\n```\n\nNow let\'s get fancy.\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    if (req.method === \'PUT\') {\n      req.pipe(request.put(\'http://mysite.com/doodle.png\'))\n    } else if (req.method === \'GET\' || req.method === \'HEAD\') {\n      request.get(\'http://mysite.com/doodle.png\').pipe(resp)\n    }\n  }\n})\n```\n\nYou can also pipe() from a http.ServerRequest instance and to a http.ServerResponse instance. The HTTP method and headers will be sent as well as the entity-body data. Which means that, if you don\'t really care about security, you can do:\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    var x = request(\'http://mysite.com/doodle.png\')\n    req.pipe(x)\n    x.pipe(resp)\n  }\n})\n```\n\nAnd since pipe() returns the destination stream in node 0.5.x you can do one line proxying :)\n\n```javascript\nreq.pipe(request(\'http://mysite.com/doodle.png\')).pipe(resp)\n```\n\nAlso, none of this new functionality conflicts with requests previous features, it just expands them.\n\n```javascript\nvar r = request.defaults({\'proxy\':\'http://localproxy.com\'})\n\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    r.get(\'http://google.com/doodle.png\').pipe(resp)\n  }\n})\n```\nYou can still use intermediate proxies, the requests will still follow HTTP forwards, etc.\n\n## Forms\n\n`request` supports `application/x-www-form-urlencoded` and `multipart/form-data` form uploads. For `multipart/related` refer to the `multipart` API.\n\nUrl encoded forms are simple\n\n```javascript\nrequest.post(\'http://service.com/upload\', {form:{key:\'value\'}})\n// or\nrequest.post(\'http://service.com/upload\').form({key:\'value\'})\n```\n\nFor `multipart/form-data` we use the [form-data](https://github.com/felixge/node-form-data) library by [@felixge](https://github.com/felixge). You don\'t need to worry about piping the form object or setting the headers, `request` will handle that for you.\n\n```javascript\nvar r = request.post(\'http://service.com/upload\')\nvar form = r.form()\nform.append(\'my_field\', \'my_value\')\nform.append(\'my_buffer\', new Buffer([1, 2, 3]))\nform.append(\'my_file\', fs.createReadStream(path.join(__dirname, \'doodle.png\'))\nform.append(\'remote_file\', request(\'http://google.com/doodle.png\'))\n```\n\n## HTTP Authentication\n\n```javascript\nrequest.get(\'http://some.server.com/\').auth(\'username\', \'password\', false);\n// or\nrequest.get(\'http://some.server.com/\', {\n  \'auth\': {\n    \'user\': \'username\',\n    \'pass\': \'password\',\n    \'sendImmediately\': false\n  }\n});\n```\n\nIf passed as an option, `auth` should be a hash containing values `user` || `username`, `password` || `pass`, and `sendImmediately` (optional).  The method form takes parameters `auth(username, password, sendImmediately)`.\n\n`sendImmediately` defaults to true, which will cause a basic authentication header to be sent.  If `sendImmediately` is `false`, then `request` will retry with a proper authentication header after receiving a 401 response from the server (which must contain a `WWW-Authenticate` header indicating the required authentication method).\n\nDigest authentication is supported, but it only works with `sendImmediately` set to `false` (otherwise `request` will send basic authentication on the initial request, which will probably cause the request to fail).\n\n## OAuth Signing\n\n```javascript\n// Twitter OAuth\nvar qs = require(\'querystring\')\n  , oauth =\n    { callback: \'http://mysite.com/callback/\'\n    , consumer_key: CONSUMER_KEY\n    , consumer_secret: CONSUMER_SECRET\n    }\n  , url = \'https://api.twitter.com/oauth/request_token\'\n  ;\nrequest.post({url:url, oauth:oauth}, function (e, r, body) {\n  // Ideally, you would take the body in the response\n  // and construct a URL that a user clicks on (like a sign in button).\n  // The verifier is only available in the response after a user has\n  // verified with twitter that they are authorizing your app.\n  var access_token = qs.parse(body)\n    , oauth =\n      { consumer_key: CONSUMER_KEY\n      , consumer_secret: CONSUMER_SECRET\n      , token: access_token.oauth_token\n      , verifier: access_token.oauth_verifier\n      }\n    , url = \'https://api.twitter.com/oauth/access_token\'\n    ;\n  request.post({url:url, oauth:oauth}, function (e, r, body) {\n    var perm_token = qs.parse(body)\n      , oauth =\n        { consumer_key: CONSUMER_KEY\n        , consumer_secret: CONSUMER_SECRET\n        , token: perm_token.oauth_token\n        , token_secret: perm_token.oauth_token_secret\n        }\n      , url = \'https://api.twitter.com/1/users/show.json?\'\n      , params =\n        { screen_name: perm_token.screen_name\n        , user_id: perm_token.user_id\n        }\n      ;\n    url += qs.stringify(params)\n    request.get({url:url, oauth:oauth, json:true}, function (e, r, user) {\n      console.log(user)\n    })\n  })\n})\n```\n\n\n\n### request(options, callback)\n\nThe first argument can be either a url or an options object. The only required option is uri, all others are optional.\n\n* `uri` || `url` - fully qualified uri or a parsed url object from url.parse()\n* `qs` - object containing querystring values to be appended to the uri\n* `method` - http method, defaults to GET\n* `headers` - http headers, defaults to {}\n* `body` - entity body for PATCH, POST and PUT requests. Must be buffer or string.\n* `form` - when passed an object this will set `body` but to a querystring representation of value and adds `Content-type: application/x-www-form-urlencoded; charset=utf-8` header. When passed no option a FormData instance is returned that will be piped to request.\n* `auth` - A hash containing values `user` || `username`, `password` || `pass`, and `sendImmediately` (optional).  See documentation above.\n* `json` - sets `body` but to JSON representation of value and adds `Content-type: application/json` header.  Additionally, parses the response body as json.\n* `multipart` - (experimental) array of objects which contains their own headers and `body` attribute. Sends `multipart/related` request. See example below.\n* `followRedirect` - follow HTTP 3xx responses as redirects. defaults to true.\n* `followAllRedirects` - follow non-GET HTTP 3xx responses as redirects. defaults to false.\n* `maxRedirects` - the maximum number of redirects to follow, defaults to 10.\n* `encoding` - Encoding to be used on `setEncoding` of response data. If set to `null`, the body is returned as a Buffer.\n* `pool` - A hash object containing the agents for these requests. If omitted this request will use the global pool which is set to node\'s default maxSockets.\n* `pool.maxSockets` - Integer containing the maximum amount of sockets in the pool.\n* `timeout` - Integer containing the number of milliseconds to wait for a request to respond before aborting the request\n* `proxy` - An HTTP proxy to be used. Support proxy Auth with Basic Auth the same way it\'s supported with the `url` parameter by embedding the auth info in the uri.\n* `oauth` - Options for OAuth HMAC-SHA1 signing, see documentation above.\n* `hawk` - Options for [Hawk signing](https://github.com/hueniverse/hawk). The `credentials` key must contain the necessary signing info, [see hawk docs for details](https://github.com/hueniverse/hawk#usage-example).\n* `strictSSL` - Set to `true` to require that SSL certificates be valid. Note: to use your own certificate authority, you need to specify an agent that was created with that ca as an option.\n* `jar` - Set to `true` if you want cookies to be remembered for future use, or define your custom cookie jar (see examples section)\n* `aws` - object containing aws signing information, should have the properties `key` and `secret` as well as `bucket` unless you\'re specifying your bucket as part of the path, or you are making a request that doesn\'t use a bucket (i.e. GET Services)\n* `httpSignature` - Options for the [HTTP Signature Scheme](https://github.com/joyent/node-http-signature/blob/master/http_signing.md) using [Joyent\'s library](https://github.com/joyent/node-http-signature). The `keyId` and `key` properties must be specified. See the docs for other options.\n* `localAddress` - Local interface to bind for network connections.\n\n\nThe callback argument gets 3 arguments. The first is an error when applicable (usually from the http.Client option not the http.ClientRequest object). The second is an http.ClientResponse object. The third is the response body String or Buffer.\n\n## Convenience methods\n\nThere are also shorthand methods for different HTTP METHODs and some other conveniences.\n\n### request.defaults(options)\n\nThis method returns a wrapper around the normal request API that defaults to whatever options you pass in to it.\n\n### request.put\n\nSame as request() but defaults to `method: "PUT"`.\n\n```javascript\nrequest.put(url)\n```\n\n### request.patch\n\nSame as request() but defaults to `method: "PATCH"`.\n\n```javascript\nrequest.patch(url)\n```\n\n### request.post\n\nSame as request() but defaults to `method: "POST"`.\n\n```javascript\nrequest.post(url)\n```\n\n### request.head\n\nSame as request() but defaults to `method: "HEAD"`.\n\n```javascript\nrequest.head(url)\n```\n\n### request.del\n\nSame as request() but defaults to `method: "DELETE"`.\n\n```javascript\nrequest.del(url)\n```\n\n### request.get\n\nAlias to normal request method for uniformity.\n\n```javascript\nrequest.get(url)\n```\n### request.cookie\n\nFunction that creates a new cookie.\n\n```javascript\nrequest.cookie(\'cookie_string_here\')\n```\n### request.jar\n\nFunction that creates a new cookie jar.\n\n```javascript\nrequest.jar()\n```\n\n\n## Examples:\n\n```javascript\n  var request = require(\'request\')\n    , rand = Math.floor(Math.random()*100000000).toString()\n    ;\n  request(\n    { method: \'PUT\'\n    , uri: \'http://mikeal.iriscouch.com/testjs/\' + rand\n    , multipart:\n      [ { \'content-type\': \'application/json\'\n        ,  body: JSON.stringify({foo: \'bar\', _attachments: {\'message.txt\': {follows: true, length: 18, \'content_type\': \'text/plain\' }}})\n        }\n      , { body: \'I am an attachment\' }\n      ]\n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log(\'document saved as: http://mikeal.iriscouch.com/testjs/\'+ rand)\n      } else {\n        console.log(\'error: \'+ response.statusCode)\n        console.log(body)\n      }\n    }\n  )\n```\nCookies are disabled by default (else, they would be used in subsequent requests). To enable cookies set jar to true (either in defaults or in the options sent).\n\n```javascript\nvar request = request.defaults({jar: true})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\n\nIf you to use a custom cookie jar (instead of letting request use its own global cookie jar) you do so by setting the jar default or by specifying it as an option:\n\n```javascript\nvar j = request.jar()\nvar request = request.defaults({jar:j})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\nOR\n\n```javascript\nvar j = request.jar()\nvar cookie = request.cookie(\'your_cookie_here\')\nj.add(cookie)\nrequest({url: \'http://www.google.com\', jar: j}, function () {\n  request(\'http://images.google.com\')\n})\n```\n',
1939 silly resolved     readmeFilename: 'README.md',
1939 silly resolved     homepage: 'https://github.com/mikeal/request',
1939 silly resolved     _id: 'request@2.27.0',
1939 silly resolved     _shasum: 'dfb1a224dd3a5a9bade4337012503d710e538668',
1939 silly resolved     _from: 'request@2.27.0',
1939 silly resolved     _resolved: 'https://registry.npmjs.org/request/-/request-2.27.0.tgz' } ]
1940 info install request@2.27.0 into /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight
1941 info installOne request@2.27.0
1942 silly resolved [ { author:
1942 silly resolved      { name: 'Isaac Z. Schlueter',
1942 silly resolved        email: 'i@izs.me',
1942 silly resolved        url: 'http://blog.izs.me/' },
1942 silly resolved     name: 'touch',
1942 silly resolved     description: 'like touch(1) in node',
1942 silly resolved     version: '0.0.2',
1942 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/node-touch.git' },
1942 silly resolved     main: 'touch.js',
1942 silly resolved     engines: { node: '>=0.6' },
1942 silly resolved     dependencies: { nopt: '~1.0.10' },
1942 silly resolved     readme: '# node-touch\n\nFor all your node touching needs.\n\n## CLI Usage:\n\nSee `man touch`\n\n## API Usage:\n\n```javascript\nvar touch = require("touch")\n```\n\nGives you the following functions:\n\n* `touch(filename, options, cb)`\n* `touch.sync(filename, options)`\n* `touch.ftouch(fd, options, cb)`\n* `touch.ftouchSync(fd, options)`\n\n## Options\n\n* `force` like `touch -f` Boolean\n* `time` like `touch -t <date>` Can be a Date object, or any parseable\n  Date string, or epoch ms number.\n* `atime` like `touch -a` Can be either a Boolean, or a Date.\n* `mtime` like `touch -m` Can be either a Boolean, or a Date.\n* `ref` like `touch -r <file>` Must be path to a file.\n* `nocreate` like `touch -c` Boolean\n\nIf neither `atime` nor `mtime` are set, then both values are set.  If\none of them is set, then the other is not.\n',
1942 silly resolved     readmeFilename: 'README.md',
1942 silly resolved     bugs: { url: 'https://github.com/isaacs/node-touch/issues' },
1942 silly resolved     homepage: 'https://github.com/isaacs/node-touch',
1942 silly resolved     _id: 'touch@0.0.2',
1942 silly resolved     _shasum: 'a65a777795e5cbbe1299499bdc42281ffb21b5f4',
1942 silly resolved     _from: 'touch@0.0.2',
1942 silly resolved     _resolved: 'https://registry.npmjs.org/touch/-/touch-0.0.2.tgz' } ]
1943 info install touch@0.0.2 into /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip
1944 info installOne touch@0.0.2
1945 silly resolved [ { name: 'request',
1945 silly resolved     description: 'Simplified HTTP request client.',
1945 silly resolved     tags: [ 'http', 'simple', 'util', 'utility' ],
1945 silly resolved     version: '2.34.0',
1945 silly resolved     author: { name: 'Mikeal Rogers', email: 'mikeal.rogers@gmail.com' },
1945 silly resolved     repository: { type: 'git', url: 'http://github.com/mikeal/request.git' },
1945 silly resolved     bugs: { url: 'http://github.com/mikeal/request/issues' },
1945 silly resolved     license: 'Apache, Version 2.0',
1945 silly resolved     engines: [ 'node >= 0.8.0' ],
1945 silly resolved     main: 'index.js',
1945 silly resolved     dependencies:
1945 silly resolved      { qs: '~0.6.0',
1945 silly resolved        'json-stringify-safe': '~5.0.0',
1945 silly resolved        'forever-agent': '~0.5.0',
1945 silly resolved        'node-uuid': '~1.4.0',
1945 silly resolved        mime: '~1.2.9',
1945 silly resolved        'tough-cookie': '>=0.12.0',
1945 silly resolved        'form-data': '~0.1.0',
1945 silly resolved        'tunnel-agent': '~0.3.0',
1945 silly resolved        'http-signature': '~0.10.0',
1945 silly resolved        'oauth-sign': '~0.3.0',
1945 silly resolved        hawk: '~1.0.0',
1945 silly resolved        'aws-sign2': '~0.5.0' },
1945 silly resolved     optionalDependencies:
1945 silly resolved      { 'tough-cookie': '>=0.12.0',
1945 silly resolved        'form-data': '~0.1.0',
1945 silly resolved        'tunnel-agent': '~0.3.0',
1945 silly resolved        'http-signature': '~0.10.0',
1945 silly resolved        'oauth-sign': '~0.3.0',
1945 silly resolved        hawk: '~1.0.0',
1945 silly resolved        'aws-sign2': '~0.5.0' },
1945 silly resolved     scripts: { test: 'node tests/run.js' },
1945 silly resolved     readme: '# Request -- Simplified HTTP client\n\n[![NPM](https://nodei.co/npm/request.png)](https://nodei.co/npm/request/)\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It supports HTTPS and follows redirects by default.\n\n```javascript\nvar request = require(\'request\');\nrequest(\'http://www.google.com\', function (error, response, body) {\n  if (!error && response.statusCode == 200) {\n    console.log(body) // Print the google web page.\n  }\n})\n```\n\n## Streaming\n\nYou can stream any response to a file stream.\n\n```javascript\nrequest(\'http://google.com/doodle.png\').pipe(fs.createWriteStream(\'doodle.png\'))\n```\n\nYou can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types (in this case `application/json`) and use the proper `content-type` in the PUT request (if the headers don’t already provide one).\n\n```javascript\nfs.createReadStream(\'file.json\').pipe(request.put(\'http://mysite.com/obj.json\'))\n```\n\nRequest can also `pipe` to itself. When doing so, `content-type` and `content-length` are preserved in the PUT headers.\n\n```javascript\nrequest.get(\'http://google.com/img.png\').pipe(request.put(\'http://mysite.com/img.png\'))\n```\n\nNow let’s get fancy.\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    if (req.method === \'PUT\') {\n      req.pipe(request.put(\'http://mysite.com/doodle.png\'))\n    } else if (req.method === \'GET\' || req.method === \'HEAD\') {\n      request.get(\'http://mysite.com/doodle.png\').pipe(resp)\n    }\n  }\n})\n```\n\nYou can also `pipe()` from `http.ServerRequest` instances, as well as to `http.ServerResponse` instances. The HTTP method, headers, and entity-body data will be sent. Which means that, if you don\'t really care about security, you can do:\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    var x = request(\'http://mysite.com/doodle.png\')\n    req.pipe(x)\n    x.pipe(resp)\n  }\n})\n```\n\nAnd since `pipe()` returns the destination stream in ≥ Node 0.5.x you can do one line proxying. :)\n\n```javascript\nreq.pipe(request(\'http://mysite.com/doodle.png\')).pipe(resp)\n```\n\nAlso, none of this new functionality conflicts with requests previous features, it just expands them.\n\n```javascript\nvar r = request.defaults({\'proxy\':\'http://localproxy.com\'})\n\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    r.get(\'http://google.com/doodle.png\').pipe(resp)\n  }\n})\n```\n\nYou can still use intermediate proxies, the requests will still follow HTTP forwards, etc.\n\n## UNIX Socket \n\n`request` supports the `unix://` protocol for all requests. The path is assumed to be absolute to the root of the host file system. \n\nHTTP paths are extracted from the supplied URL by testing each level of the full URL against net.connect for a socket response.\n\nThus the following request will GET `/httppath` from the HTTP server listening on `/tmp/unix.socket`\n\n```javascript\nrequest.get(\'unix://tmp/unix.socket/httppath\')\n```\n\n## Forms\n\n`request` supports `application/x-www-form-urlencoded` and `multipart/form-data` form uploads. For `multipart/related` refer to the `multipart` API.\n\nURL-encoded forms are simple.\n\n```javascript\nrequest.post(\'http://service.com/upload\', {form:{key:\'value\'}})\n// or\nrequest.post(\'http://service.com/upload\').form({key:\'value\'})\n```\n\nFor `multipart/form-data` we use the [form-data](https://github.com/felixge/node-form-data) library by [@felixge](https://github.com/felixge). You don’t need to worry about piping the form object or setting the headers, `request` will handle that for you.\n\n```javascript\nvar r = request.post(\'http://service.com/upload\')\nvar form = r.form()\nform.append(\'my_field\', \'my_value\')\nform.append(\'my_buffer\', new Buffer([1, 2, 3]))\nform.append(\'my_file\', fs.createReadStream(path.join(__dirname, \'doodle.png\'))\nform.append(\'remote_file\', request(\'http://google.com/doodle.png\'))\n```\n\n## HTTP Authentication\n\n```javascript\nrequest.get(\'http://some.server.com/\').auth(\'username\', \'password\', false);\n// or\nrequest.get(\'http://some.server.com/\', {\n  \'auth\': {\n    \'user\': \'username\',\n    \'pass\': \'password\',\n    \'sendImmediately\': false\n  }\n});\n```\n\nIf passed as an option, `auth` should be a hash containing values `user` || `username`, `password` || `pass`, and `sendImmediately` (optional).  The method form takes parameters `auth(username, password, sendImmediately)`.\n\n`sendImmediately` defaults to `true`, which causes a basic authentication header to be sent.  If `sendImmediately` is `false`, then `request` will retry with a proper authentication header after receiving a `401` response from the server (which must contain a `WWW-Authenticate` header indicating the required authentication method).\n\nDigest authentication is supported, but it only works with `sendImmediately` set to `false`; otherwise `request` will send basic authentication on the initial request, which will probably cause the request to fail.\n\n## OAuth Signing\n\n```javascript\n// Twitter OAuth\nvar qs = require(\'querystring\')\n  , oauth =\n    { callback: \'http://mysite.com/callback/\'\n    , consumer_key: CONSUMER_KEY\n    , consumer_secret: CONSUMER_SECRET\n    }\n  , url = \'https://api.twitter.com/oauth/request_token\'\n  ;\nrequest.post({url:url, oauth:oauth}, function (e, r, body) {\n  // Ideally, you would take the body in the response\n  // and construct a URL that a user clicks on (like a sign in button).\n  // The verifier is only available in the response after a user has\n  // verified with twitter that they are authorizing your app.\n  var access_token = qs.parse(body)\n    , oauth =\n      { consumer_key: CONSUMER_KEY\n      , consumer_secret: CONSUMER_SECRET\n      , token: access_token.oauth_token\n      , verifier: access_token.oauth_verifier\n      }\n    , url = \'https://api.twitter.com/oauth/access_token\'\n    ;\n  request.post({url:url, oauth:oauth}, function (e, r, body) {\n    var perm_token = qs.parse(body)\n      , oauth =\n        { consumer_key: CONSUMER_KEY\n        , consumer_secret: CONSUMER_SECRET\n        , token: perm_token.oauth_token\n        , token_secret: perm_token.oauth_token_secret\n        }\n      , url = \'https://api.twitter.com/1.1/users/show.json?\'\n      , params =\n        { screen_name: perm_token.screen_name\n        , user_id: perm_token.user_id\n        }\n      ;\n    url += qs.stringify(params)\n    request.get({url:url, oauth:oauth, json:true}, function (e, r, user) {\n      console.log(user)\n    })\n  })\n})\n```\n\n### Custom HTTP Headers\n\nHTTP Headers, such as `User-Agent`, can be set in the `options` object.\nIn the example below, we call the github API to find out the number\nof stars and forks for the request repository. This requires a\ncustom `User-Agent` header as well as https.\n\n```javascript\nvar request = require(\'request\');\n\nvar options = {\n\turl: \'https://api.github.com/repos/mikeal/request\',\n\theaders: {\n\t\t\'User-Agent\': \'request\'\n\t}\n};\n\nfunction callback(error, response, body) {\n\tif (!error && response.statusCode == 200) {\n\t\tvar info = JSON.parse(body);\n\t\tconsole.log(info.stargazers_count + " Stars");\n\t\tconsole.log(info.forks_count + " Forks");\n\t}\n}\n\nrequest(options, callback);\n```\n\n### request(options, callback)\n\nThe first argument can be either a `url` or an `options` object. The only required option is `uri`; all others are optional.\n\n* `uri` || `url` - fully qualified uri or a parsed url object from `url.parse()`\n* `qs` - object containing querystring values to be appended to the `uri`\n* `method` - http method (default: `"GET"`)\n* `headers` - http headers (default: `{}`)\n* `body` - entity body for PATCH, POST and PUT requests. Must be a `Buffer` or `String`.\n* `form` - when passed an object, this sets `body` to a querystring representation of value, and adds `Content-type: application/x-www-form-urlencoded; charset=utf-8` header. When passed no options, a `FormData` instance is returned (and is piped to request).\n* `auth` - A hash containing values `user` || `username`, `password` || `pass`, and `sendImmediately` (optional).  See documentation above.\n* `json` - sets `body` but to JSON representation of value and adds `Content-type: application/json` header.  Additionally, parses the response body as JSON.\n* `multipart` - (experimental) array of objects which contains their own headers and `body` attribute. Sends `multipart/related` request. See example below.\n* `followRedirect` - follow HTTP 3xx responses as redirects (default: `true`)\n* `followAllRedirects` - follow non-GET HTTP 3xx responses as redirects (default: `false`)\n* `maxRedirects` - the maximum number of redirects to follow (default: `10`)\n* `encoding` - Encoding to be used on `setEncoding` of response data. If `null`, the `body` is returned as a `Buffer`.\n* `pool` - A hash object containing the agents for these requests. If omitted, the request will use the global pool (which is set to node\'s default `maxSockets`)\n* `pool.maxSockets` - Integer containing the maximum amount of sockets in the pool.\n* `timeout` - Integer containing the number of milliseconds to wait for a request to respond before aborting the request\n* `proxy` - An HTTP proxy to be used. Supports proxy Auth with Basic Auth, identical to support for the `url` parameter (by embedding the auth info in the `uri`)\n* `oauth` - Options for OAuth HMAC-SHA1 signing. See documentation above.\n* `hawk` - Options for [Hawk signing](https://github.com/hueniverse/hawk). The `credentials` key must contain the necessary signing info, [see hawk docs for details](https://github.com/hueniverse/hawk#usage-example).\n* `strictSSL` - If `true`, requires SSL certificates be valid. **Note:** to use your own certificate authority, you need to specify an agent that was created with that CA as an option.\n* `jar` - If `true`, remember cookies for future use (or define your custom cookie jar; see examples section)\n* `aws` - `object` containing AWS signing information. Should have the properties `key`, `secret`. Also requires the property `bucket`, unless you’re specifying your `bucket` as part of the path, or the request doesn’t use a bucket (i.e. GET Services)\n* `httpSignature` - Options for the [HTTP Signature Scheme](https://github.com/joyent/node-http-signature/blob/master/http_signing.md) using [Joyent\'s library](https://github.com/joyent/node-http-signature). The `keyId` and `key` properties must be specified. See the docs for other options.\n* `localAddress` - Local interface to bind for network connections.\n\n\nThe callback argument gets 3 arguments: \n\n1. An `error` when applicable (usually from [`http.ClientRequest`](http://nodejs.org/api/http.html#http_class_http_clientrequest) object)\n2. An [`http.IncomingMessage`](http://nodejs.org/api/http.html#http_http_incomingmessage) object\n3. The third is the `response` body (`String` or `Buffer`, or JSON object if the `json` option is supplied)\n\n## Convenience methods\n\nThere are also shorthand methods for different HTTP METHODs and some other conveniences.\n\n### request.defaults(options)\n\nThis method returns a wrapper around the normal request API that defaults to whatever options you pass in to it.\n\n### request.put\n\nSame as `request()`, but defaults to `method: "PUT"`.\n\n```javascript\nrequest.put(url)\n```\n\n### request.patch\n\nSame as `request()`, but defaults to `method: "PATCH"`.\n\n```javascript\nrequest.patch(url)\n```\n\n### request.post\n\nSame as `request()`, but defaults to `method: "POST"`.\n\n```javascript\nrequest.post(url)\n```\n\n### request.head\n\nSame as request() but defaults to `method: "HEAD"`.\n\n```javascript\nrequest.head(url)\n```\n\n### request.del\n\nSame as `request()`, but defaults to `method: "DELETE"`.\n\n```javascript\nrequest.del(url)\n```\n\n### request.get\n\nSame as `request()` (for uniformity).\n\n```javascript\nrequest.get(url)\n```\n### request.cookie\n\nFunction that creates a new cookie.\n\n```javascript\nrequest.cookie(\'cookie_string_here\')\n```\n### request.jar\n\nFunction that creates a new cookie jar.\n\n```javascript\nrequest.jar()\n```\n\n\n## Examples:\n\n```javascript\n  var request = require(\'request\')\n    , rand = Math.floor(Math.random()*100000000).toString()\n    ;\n  request(\n    { method: \'PUT\'\n    , uri: \'http://mikeal.iriscouch.com/testjs/\' + rand\n    , multipart:\n      [ { \'content-type\': \'application/json\'\n        ,  body: JSON.stringify({foo: \'bar\', _attachments: {\'message.txt\': {follows: true, length: 18, \'content_type\': \'text/plain\' }}})\n        }\n      , { body: \'I am an attachment\' }\n      ]\n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log(\'document saved as: http://mikeal.iriscouch.com/testjs/\'+ rand)\n      } else {\n        console.log(\'error: \'+ response.statusCode)\n        console.log(body)\n      }\n    }\n  )\n```\n\nCookies are disabled by default (else, they would be used in subsequent requests). To enable cookies, set `jar` to `true` (either in `defaults` or `options`).\n\n```javascript\nvar request = request.defaults({jar: true})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\n\nTo use a custom cookie jar (instead `request`’s global cookie jar), set `jar` to an instance of `request.jar()` (either in `defaults` or `options`)\n\n```javascript\nvar j = request.jar()\nvar request = request.defaults({jar:j})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\n\nOR\n\n```javascript\nvar j = request.jar()\nvar cookie = request.cookie(\'your_cookie_here\')\nj.setCookie(cookie, uri);\nrequest({url: \'http://www.google.com\', jar: j}, function () {\n  request(\'http://images.google.com\')\n})\n```\n',
1945 silly resolved     readmeFilename: 'README.md',
1945 silly resolved     homepage: 'https://github.com/mikeal/request',
1945 silly resolved     _id: 'request@2.34.0',
1945 silly resolved     _shasum: 'b5d8b9526add4a2d4629f4d417124573996445ae',
1945 silly resolved     _from: 'request@2.34.0',
1945 silly resolved     _resolved: 'https://registry.npmjs.org/request/-/request-2.34.0.tgz' } ]
1946 info install request@2.34.0 into /home/maicon/Dev/Projetos/AMEN/node_modules/bower
1947 info installOne request@2.34.0
1948 silly resolved [ { name: 'readable-stream',
1948 silly resolved     version: '1.1.13-1',
1948 silly resolved     description: 'Streams3, a user-land copy of the stream library from Node.js v0.11.x',
1948 silly resolved     main: 'readable.js',
1948 silly resolved     dependencies:
1948 silly resolved      { 'core-util-is': '~1.0.0',
1948 silly resolved        isarray: '0.0.1',
1948 silly resolved        string_decoder: '~0.10.x',
1948 silly resolved        inherits: '~2.0.1' },
1948 silly resolved     devDependencies: { tap: '~0.2.6' },
1948 silly resolved     scripts: { test: 'tap test/simple/*.js' },
1948 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/readable-stream' },
1948 silly resolved     keywords: [ 'readable', 'stream', 'pipe' ],
1948 silly resolved     browser: { util: false },
1948 silly resolved     author:
1948 silly resolved      { name: 'Isaac Z. Schlueter',
1948 silly resolved        email: 'i@izs.me',
1948 silly resolved        url: 'http://blog.izs.me/' },
1948 silly resolved     license: 'MIT',
1948 silly resolved     readme: '# readable-stream\n\n***Node-core streams for userland***\n\n[![NPM](https://nodei.co/npm/readable-stream.png?downloads=true)](https://nodei.co/npm/readable-stream/)\n[![NPM](https://nodei.co/npm-dl/readable-stream.png)](https://nodei.co/npm/readable-stream/)\n\nThis package is a mirror of the Streams2 and Streams3 implementations in Node-core.\n\nIf you want to guarantee a stable streams base, regardless of what version of Node you, or the users of your libraries are using, use **readable-stream** *only* and avoid the *"stream"* module in Node-core.\n\n**readable-stream** comes in two major versions, v1.0.x and v1.1.x. The former tracks the Streams2 implementation in Node 0.10, including bug-fixes and minor improvements as they are added. The latter tracks Streams3 as it develops in Node 0.11; we will likely see a v1.2.x branch for Node 0.12.\n\n**readable-stream** uses proper patch-level versioning so if you pin to `"~1.0.0"` you’ll get the latest Node 0.10 Streams2 implementation, including any fixes and minor non-breaking improvements. The patch-level versions of 1.0.x and 1.1.x should mirror the patch-level versions of Node-core releases. You should prefer the **1.0.x** releases for now and when you’re ready to start using Streams3, pin to `"~1.1.0"`\n\n',
1948 silly resolved     readmeFilename: 'README.md',
1948 silly resolved     bugs: { url: 'https://github.com/isaacs/readable-stream/issues' },
1948 silly resolved     homepage: 'https://github.com/isaacs/readable-stream',
1948 silly resolved     _id: 'readable-stream@1.1.13-1',
1948 silly resolved     _shasum: 'fc6f04f3366bf37bae21bec2e411c1b4d2cf1a46',
1948 silly resolved     _from: 'readable-stream@1.1.13-1',
1948 silly resolved     _resolved: 'https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.13-1.tgz' } ]
1949 info install readable-stream@1.1.13-1 into /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip
1950 info installOne readable-stream@1.1.13-1
1951 silly resolved [ { name: 'async',
1951 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
1951 silly resolved     main: './lib/async',
1951 silly resolved     author: { name: 'Caolan McMahon' },
1951 silly resolved     version: '0.2.10',
1951 silly resolved     repository: { type: 'git', url: 'https://github.com/caolan/async.git' },
1951 silly resolved     bugs: { url: 'https://github.com/caolan/async/issues' },
1951 silly resolved     licenses: [ [Object] ],
1951 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
1951 silly resolved     jam: { main: 'lib/async.js', include: [Object] },
1951 silly resolved     scripts: { test: 'nodeunit test/test-async.js' },
1951 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser. Also supports [component](https://github.com/component/component).\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, each…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls\n\n### Binding a context to an iterator\n\nThis section is really about bind, not about async. If you are wondering how to\nmake async execute your iterators in a given context, or are confused as to why\na method of another library isn\'t working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){ \n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its \n  // \'home\' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](http://github.com/caolan/async).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it\'s been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [each](#each)\n* [eachSeries](#eachSeries)\n* [eachLimit](#eachLimit)\n* [map](#map)\n* [mapSeries](#mapSeries)\n* [mapLimit](#mapLimit)\n* [filter](#filter)\n* [filterSeries](#filterSeries)\n* [reject](#reject)\n* [rejectSeries](#rejectSeries)\n* [reduce](#reduce)\n* [reduceRight](#reduceRight)\n* [detect](#detect)\n* [detectSeries](#detectSeries)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n* [concatSeries](#concatSeries)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [parallelLimit](#parallellimittasks-limit-callback)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [forever](#forever)\n* [waterfall](#waterfall)\n* [compose](#compose)\n* [applyEach](#applyEach)\n* [applyEachSeries](#applyEachSeries)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n<a name="each" />\n### each(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the each function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="forEachSeries" />\n<a name="eachSeries" />\n### eachSeries(arr, iterator, callback)\n\nThe same as each only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n<a name="eachLimit" />\n### eachLimit(arr, limit, iterator, callback)\n\nThe same as each only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.eachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="mapLimit" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.mapLimit([\'file1\',\'file2\',\'file3\'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then it\'s probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback(err, reduction) which accepts an optional error as its first \n  argument, and the state of the reduction as the second. If an error is \n  passed to the callback, the reduction is stopped and the main callback is \n  immediately called with the error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, sortValue) which must be called once it\n  has completed with an error (which can be null) and a value to use as the sort\n  criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, results) which must be called once it \n  has completed with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of "limit" \ntasks executing at any time.\n\nNote that the tasks are not executed in batches, so there is no guarantee that \nthe first "limit" tasks will complete before any others are started.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback(err) which must be called once it has completed with an \n  optional error argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name="forever" />\n### forever(fn, callback)\n\nCalls the asynchronous function \'fn\' repeatedly, in series, indefinitely.\nIf an error is passed to fn\'s callback then \'callback\' is called with the\nerror, otherwise it will never be called.\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a \n  callback(err, result1, result2, ...) it must call on completion. The first\n  argument is an error (which can be null) and any further arguments will be \n  passed as arguments in order to the next task.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback){\n        callback(null, \'three\');\n    },\n    function(arg1, callback){\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n   // result now equals \'done\'    \n});\n```\n\n---------------------------------------\n<a name="compose" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions f(), g() and h() would produce the result of\nf(g(h())), only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* functions... - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name="applyEach" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling the\ncallback after all functions have completed. If you only provide the first\nargument then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* fns - the asynchronous functions to all call with the same arguments\n* args... - any number of separate arguments to pass to the function\n* callback - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], \'bucket\', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n---------------------------------------\n\n<a name="applyEachSeries" />\n### applyEachSeries(arr, iterator, callback)\n\nThe same as applyEach only the functions are applied in series.\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task, which must call its callback(err) argument when finished, with an \n  optional error as an argument.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* unshift(task, [callback]) - add a new task to the front of the queue.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing an array of\n  queued tasks, which must call its callback(err) argument when finished, with \n  an optional error as an argument.\n* payload - An optional integer for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log(\'hello \' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\nNote, all functions are called with a results object as a second argument, \nso it is unsafe to pass functions in the tasks object which cannot handle the\nextra argument. For example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, \'data.txt\', \'utf-8\')\n}, callback);\n```\n\nwill have the effect of calling readFile with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile(\'data.txt\', \'utf-8\', cb, {});\n```\n\nInstead, wrap the call to readFile in a function which does not forward the \nresults object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile(\'data.txt\', \'utf-8\', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The \n  function receives two arguments: (1) a callback(err, result) which must be \n  called when finished, passing an error (which can be null) and the result of \n  the function\'s execution, and (2) a results object, containing the results of\n  the previously executed functions.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. Results will always be passed\n\tbut if an error occurred, no other tasks will be performed, and the results\n\tobject will only contain partial results.\n  \n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let\'s email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. It\'s also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name="timesSeries" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
1951 silly resolved     readmeFilename: 'README.md',
1951 silly resolved     homepage: 'https://github.com/caolan/async',
1951 silly resolved     _id: 'async@0.2.10',
1951 silly resolved     _shasum: 'b6bbe0b0674b9d719708ca38de8c237cb526c3d1',
1951 silly resolved     _from: 'async@0.2.10',
1951 silly resolved     _resolved: 'https://registry.npmjs.org/async/-/async-0.2.10.tgz' } ]
1952 info install async@0.2.10 into /home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch
1953 info installOne async@0.2.10
1954 silly resolved [ { name: 'async',
1954 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
1954 silly resolved     main: './lib/async',
1954 silly resolved     author: { name: 'Caolan McMahon' },
1954 silly resolved     version: '0.2.10',
1954 silly resolved     repository: { type: 'git', url: 'https://github.com/caolan/async.git' },
1954 silly resolved     bugs: { url: 'https://github.com/caolan/async/issues' },
1954 silly resolved     licenses: [ [Object] ],
1954 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
1954 silly resolved     jam: { main: 'lib/async.js', include: [Object] },
1954 silly resolved     scripts: { test: 'nodeunit test/test-async.js' },
1954 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser. Also supports [component](https://github.com/component/component).\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, each…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls\n\n### Binding a context to an iterator\n\nThis section is really about bind, not about async. If you are wondering how to\nmake async execute your iterators in a given context, or are confused as to why\na method of another library isn\'t working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){ \n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its \n  // \'home\' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](http://github.com/caolan/async).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it\'s been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [each](#each)\n* [eachSeries](#eachSeries)\n* [eachLimit](#eachLimit)\n* [map](#map)\n* [mapSeries](#mapSeries)\n* [mapLimit](#mapLimit)\n* [filter](#filter)\n* [filterSeries](#filterSeries)\n* [reject](#reject)\n* [rejectSeries](#rejectSeries)\n* [reduce](#reduce)\n* [reduceRight](#reduceRight)\n* [detect](#detect)\n* [detectSeries](#detectSeries)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n* [concatSeries](#concatSeries)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [parallelLimit](#parallellimittasks-limit-callback)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [forever](#forever)\n* [waterfall](#waterfall)\n* [compose](#compose)\n* [applyEach](#applyEach)\n* [applyEachSeries](#applyEachSeries)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n<a name="each" />\n### each(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the each function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="forEachSeries" />\n<a name="eachSeries" />\n### eachSeries(arr, iterator, callback)\n\nThe same as each only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n<a name="eachLimit" />\n### eachLimit(arr, limit, iterator, callback)\n\nThe same as each only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.eachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="mapLimit" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.mapLimit([\'file1\',\'file2\',\'file3\'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then it\'s probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback(err, reduction) which accepts an optional error as its first \n  argument, and the state of the reduction as the second. If an error is \n  passed to the callback, the reduction is stopped and the main callback is \n  immediately called with the error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, sortValue) which must be called once it\n  has completed with an error (which can be null) and a value to use as the sort\n  criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, results) which must be called once it \n  has completed with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of "limit" \ntasks executing at any time.\n\nNote that the tasks are not executed in batches, so there is no guarantee that \nthe first "limit" tasks will complete before any others are started.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback(err) which must be called once it has completed with an \n  optional error argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name="forever" />\n### forever(fn, callback)\n\nCalls the asynchronous function \'fn\' repeatedly, in series, indefinitely.\nIf an error is passed to fn\'s callback then \'callback\' is called with the\nerror, otherwise it will never be called.\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a \n  callback(err, result1, result2, ...) it must call on completion. The first\n  argument is an error (which can be null) and any further arguments will be \n  passed as arguments in order to the next task.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback){\n        callback(null, \'three\');\n    },\n    function(arg1, callback){\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n   // result now equals \'done\'    \n});\n```\n\n---------------------------------------\n<a name="compose" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions f(), g() and h() would produce the result of\nf(g(h())), only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* functions... - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name="applyEach" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling the\ncallback after all functions have completed. If you only provide the first\nargument then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* fns - the asynchronous functions to all call with the same arguments\n* args... - any number of separate arguments to pass to the function\n* callback - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], \'bucket\', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n---------------------------------------\n\n<a name="applyEachSeries" />\n### applyEachSeries(arr, iterator, callback)\n\nThe same as applyEach only the functions are applied in series.\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task, which must call its callback(err) argument when finished, with an \n  optional error as an argument.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* unshift(task, [callback]) - add a new task to the front of the queue.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing an array of\n  queued tasks, which must call its callback(err) argument when finished, with \n  an optional error as an argument.\n* payload - An optional integer for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log(\'hello \' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\nNote, all functions are called with a results object as a second argument, \nso it is unsafe to pass functions in the tasks object which cannot handle the\nextra argument. For example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, \'data.txt\', \'utf-8\')\n}, callback);\n```\n\nwill have the effect of calling readFile with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile(\'data.txt\', \'utf-8\', cb, {});\n```\n\nInstead, wrap the call to readFile in a function which does not forward the \nresults object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile(\'data.txt\', \'utf-8\', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The \n  function receives two arguments: (1) a callback(err, result) which must be \n  called when finished, passing an error (which can be null) and the result of \n  the function\'s execution, and (2) a results object, containing the results of\n  the previously executed functions.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. Results will always be passed\n\tbut if an error occurred, no other tasks will be performed, and the results\n\tobject will only contain partial results.\n  \n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let\'s email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. It\'s also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name="timesSeries" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
1954 silly resolved     readmeFilename: 'README.md',
1954 silly resolved     homepage: 'https://github.com/caolan/async',
1954 silly resolved     _id: 'async@0.2.10',
1954 silly resolved     _shasum: 'b6bbe0b0674b9d719708ca38de8c237cb526c3d1',
1954 silly resolved     _from: 'async@0.2.10',
1954 silly resolved     _resolved: 'https://registry.npmjs.org/async/-/async-0.2.10.tgz' } ]
1955 info install async@0.2.10 into /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client
1956 info installOne async@0.2.10
1957 silly resolved [ { name: 'async',
1957 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
1957 silly resolved     main: './lib/async',
1957 silly resolved     author: { name: 'Caolan McMahon' },
1957 silly resolved     version: '0.2.10',
1957 silly resolved     repository: { type: 'git', url: 'https://github.com/caolan/async.git' },
1957 silly resolved     bugs: { url: 'https://github.com/caolan/async/issues' },
1957 silly resolved     licenses: [ [Object] ],
1957 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
1957 silly resolved     jam: { main: 'lib/async.js', include: [Object] },
1957 silly resolved     scripts: { test: 'nodeunit test/test-async.js' },
1957 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser. Also supports [component](https://github.com/component/component).\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, each…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls\n\n### Binding a context to an iterator\n\nThis section is really about bind, not about async. If you are wondering how to\nmake async execute your iterators in a given context, or are confused as to why\na method of another library isn\'t working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){ \n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its \n  // \'home\' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](http://github.com/caolan/async).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it\'s been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [each](#each)\n* [eachSeries](#eachSeries)\n* [eachLimit](#eachLimit)\n* [map](#map)\n* [mapSeries](#mapSeries)\n* [mapLimit](#mapLimit)\n* [filter](#filter)\n* [filterSeries](#filterSeries)\n* [reject](#reject)\n* [rejectSeries](#rejectSeries)\n* [reduce](#reduce)\n* [reduceRight](#reduceRight)\n* [detect](#detect)\n* [detectSeries](#detectSeries)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n* [concatSeries](#concatSeries)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [parallelLimit](#parallellimittasks-limit-callback)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [forever](#forever)\n* [waterfall](#waterfall)\n* [compose](#compose)\n* [applyEach](#applyEach)\n* [applyEachSeries](#applyEachSeries)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n<a name="each" />\n### each(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the each function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="forEachSeries" />\n<a name="eachSeries" />\n### eachSeries(arr, iterator, callback)\n\nThe same as each only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n<a name="eachLimit" />\n### eachLimit(arr, limit, iterator, callback)\n\nThe same as each only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.eachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="mapLimit" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.mapLimit([\'file1\',\'file2\',\'file3\'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then it\'s probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback(err, reduction) which accepts an optional error as its first \n  argument, and the state of the reduction as the second. If an error is \n  passed to the callback, the reduction is stopped and the main callback is \n  immediately called with the error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, sortValue) which must be called once it\n  has completed with an error (which can be null) and a value to use as the sort\n  criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, results) which must be called once it \n  has completed with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of "limit" \ntasks executing at any time.\n\nNote that the tasks are not executed in batches, so there is no guarantee that \nthe first "limit" tasks will complete before any others are started.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback(err) which must be called once it has completed with an \n  optional error argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name="forever" />\n### forever(fn, callback)\n\nCalls the asynchronous function \'fn\' repeatedly, in series, indefinitely.\nIf an error is passed to fn\'s callback then \'callback\' is called with the\nerror, otherwise it will never be called.\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a \n  callback(err, result1, result2, ...) it must call on completion. The first\n  argument is an error (which can be null) and any further arguments will be \n  passed as arguments in order to the next task.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback){\n        callback(null, \'three\');\n    },\n    function(arg1, callback){\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n   // result now equals \'done\'    \n});\n```\n\n---------------------------------------\n<a name="compose" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions f(), g() and h() would produce the result of\nf(g(h())), only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* functions... - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name="applyEach" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling the\ncallback after all functions have completed. If you only provide the first\nargument then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* fns - the asynchronous functions to all call with the same arguments\n* args... - any number of separate arguments to pass to the function\n* callback - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], \'bucket\', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n---------------------------------------\n\n<a name="applyEachSeries" />\n### applyEachSeries(arr, iterator, callback)\n\nThe same as applyEach only the functions are applied in series.\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task, which must call its callback(err) argument when finished, with an \n  optional error as an argument.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* unshift(task, [callback]) - add a new task to the front of the queue.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing an array of\n  queued tasks, which must call its callback(err) argument when finished, with \n  an optional error as an argument.\n* payload - An optional integer for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log(\'hello \' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\nNote, all functions are called with a results object as a second argument, \nso it is unsafe to pass functions in the tasks object which cannot handle the\nextra argument. For example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, \'data.txt\', \'utf-8\')\n}, callback);\n```\n\nwill have the effect of calling readFile with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile(\'data.txt\', \'utf-8\', cb, {});\n```\n\nInstead, wrap the call to readFile in a function which does not forward the \nresults object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile(\'data.txt\', \'utf-8\', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The \n  function receives two arguments: (1) a callback(err, result) which must be \n  called when finished, passing an error (which can be null) and the result of \n  the function\'s execution, and (2) a results object, containing the results of\n  the previously executed functions.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. Results will always be passed\n\tbut if an error occurred, no other tasks will be performed, and the results\n\tobject will only contain partial results.\n  \n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let\'s email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. It\'s also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name="timesSeries" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
1957 silly resolved     readmeFilename: 'README.md',
1957 silly resolved     homepage: 'https://github.com/caolan/async',
1957 silly resolved     _id: 'async@0.2.10',
1957 silly resolved     _shasum: 'b6bbe0b0674b9d719708ca38de8c237cb526c3d1',
1957 silly resolved     _from: 'async@0.2.10',
1957 silly resolved     _resolved: 'https://registry.npmjs.org/async/-/async-0.2.10.tgz' } ]
1958 info install async@0.2.10 into /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight
1959 info installOne async@0.2.10
1960 silly resolved [ { name: 'async',
1960 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
1960 silly resolved     main: './lib/async',
1960 silly resolved     author: { name: 'Caolan McMahon' },
1960 silly resolved     version: '0.2.10',
1960 silly resolved     repository: { type: 'git', url: 'https://github.com/caolan/async.git' },
1960 silly resolved     bugs: { url: 'https://github.com/caolan/async/issues' },
1960 silly resolved     licenses: [ [Object] ],
1960 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
1960 silly resolved     jam: { main: 'lib/async.js', include: [Object] },
1960 silly resolved     scripts: { test: 'nodeunit test/test-async.js' },
1960 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser. Also supports [component](https://github.com/component/component).\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, each…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls\n\n### Binding a context to an iterator\n\nThis section is really about bind, not about async. If you are wondering how to\nmake async execute your iterators in a given context, or are confused as to why\na method of another library isn\'t working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){ \n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its \n  // \'home\' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](http://github.com/caolan/async).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it\'s been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [each](#each)\n* [eachSeries](#eachSeries)\n* [eachLimit](#eachLimit)\n* [map](#map)\n* [mapSeries](#mapSeries)\n* [mapLimit](#mapLimit)\n* [filter](#filter)\n* [filterSeries](#filterSeries)\n* [reject](#reject)\n* [rejectSeries](#rejectSeries)\n* [reduce](#reduce)\n* [reduceRight](#reduceRight)\n* [detect](#detect)\n* [detectSeries](#detectSeries)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n* [concatSeries](#concatSeries)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [parallelLimit](#parallellimittasks-limit-callback)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [forever](#forever)\n* [waterfall](#waterfall)\n* [compose](#compose)\n* [applyEach](#applyEach)\n* [applyEachSeries](#applyEachSeries)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n<a name="each" />\n### each(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the each function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="forEachSeries" />\n<a name="eachSeries" />\n### eachSeries(arr, iterator, callback)\n\nThe same as each only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n<a name="eachLimit" />\n### eachLimit(arr, limit, iterator, callback)\n\nThe same as each only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.eachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="mapLimit" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.mapLimit([\'file1\',\'file2\',\'file3\'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then it\'s probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback(err, reduction) which accepts an optional error as its first \n  argument, and the state of the reduction as the second. If an error is \n  passed to the callback, the reduction is stopped and the main callback is \n  immediately called with the error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, sortValue) which must be called once it\n  has completed with an error (which can be null) and a value to use as the sort\n  criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, results) which must be called once it \n  has completed with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of "limit" \ntasks executing at any time.\n\nNote that the tasks are not executed in batches, so there is no guarantee that \nthe first "limit" tasks will complete before any others are started.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback(err) which must be called once it has completed with an \n  optional error argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name="forever" />\n### forever(fn, callback)\n\nCalls the asynchronous function \'fn\' repeatedly, in series, indefinitely.\nIf an error is passed to fn\'s callback then \'callback\' is called with the\nerror, otherwise it will never be called.\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a \n  callback(err, result1, result2, ...) it must call on completion. The first\n  argument is an error (which can be null) and any further arguments will be \n  passed as arguments in order to the next task.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback){\n        callback(null, \'three\');\n    },\n    function(arg1, callback){\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n   // result now equals \'done\'    \n});\n```\n\n---------------------------------------\n<a name="compose" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions f(), g() and h() would produce the result of\nf(g(h())), only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* functions... - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name="applyEach" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling the\ncallback after all functions have completed. If you only provide the first\nargument then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* fns - the asynchronous functions to all call with the same arguments\n* args... - any number of separate arguments to pass to the function\n* callback - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], \'bucket\', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n---------------------------------------\n\n<a name="applyEachSeries" />\n### applyEachSeries(arr, iterator, callback)\n\nThe same as applyEach only the functions are applied in series.\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task, which must call its callback(err) argument when finished, with an \n  optional error as an argument.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* unshift(task, [callback]) - add a new task to the front of the queue.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing an array of\n  queued tasks, which must call its callback(err) argument when finished, with \n  an optional error as an argument.\n* payload - An optional integer for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log(\'hello \' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\nNote, all functions are called with a results object as a second argument, \nso it is unsafe to pass functions in the tasks object which cannot handle the\nextra argument. For example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, \'data.txt\', \'utf-8\')\n}, callback);\n```\n\nwill have the effect of calling readFile with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile(\'data.txt\', \'utf-8\', cb, {});\n```\n\nInstead, wrap the call to readFile in a function which does not forward the \nresults object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile(\'data.txt\', \'utf-8\', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The \n  function receives two arguments: (1) a callback(err, result) which must be \n  called when finished, passing an error (which can be null) and the result of \n  the function\'s execution, and (2) a results object, containing the results of\n  the previously executed functions.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. Results will always be passed\n\tbut if an error occurred, no other tasks will be performed, and the results\n\tobject will only contain partial results.\n  \n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let\'s email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. It\'s also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name="timesSeries" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
1960 silly resolved     readmeFilename: 'README.md',
1960 silly resolved     homepage: 'https://github.com/caolan/async',
1960 silly resolved     _id: 'async@0.2.10',
1960 silly resolved     _shasum: 'b6bbe0b0674b9d719708ca38de8c237cb526c3d1',
1960 silly resolved     _from: 'async@0.2.10',
1960 silly resolved     _resolved: 'https://registry.npmjs.org/async/-/async-0.2.10.tgz' } ]
1961 info install async@0.2.10 into /home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/with/node_modules/uglify-js
1962 info installOne async@0.2.10
1963 silly resolved [ { name: 'async',
1963 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
1963 silly resolved     main: './lib/async',
1963 silly resolved     author: { name: 'Caolan McMahon' },
1963 silly resolved     version: '0.2.10',
1963 silly resolved     repository: { type: 'git', url: 'https://github.com/caolan/async.git' },
1963 silly resolved     bugs: { url: 'https://github.com/caolan/async/issues' },
1963 silly resolved     licenses: [ [Object] ],
1963 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
1963 silly resolved     jam: { main: 'lib/async.js', include: [Object] },
1963 silly resolved     scripts: { test: 'nodeunit test/test-async.js' },
1963 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser. Also supports [component](https://github.com/component/component).\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, each…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls\n\n### Binding a context to an iterator\n\nThis section is really about bind, not about async. If you are wondering how to\nmake async execute your iterators in a given context, or are confused as to why\na method of another library isn\'t working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){ \n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its \n  // \'home\' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](http://github.com/caolan/async).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it\'s been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [each](#each)\n* [eachSeries](#eachSeries)\n* [eachLimit](#eachLimit)\n* [map](#map)\n* [mapSeries](#mapSeries)\n* [mapLimit](#mapLimit)\n* [filter](#filter)\n* [filterSeries](#filterSeries)\n* [reject](#reject)\n* [rejectSeries](#rejectSeries)\n* [reduce](#reduce)\n* [reduceRight](#reduceRight)\n* [detect](#detect)\n* [detectSeries](#detectSeries)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n* [concatSeries](#concatSeries)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [parallelLimit](#parallellimittasks-limit-callback)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [forever](#forever)\n* [waterfall](#waterfall)\n* [compose](#compose)\n* [applyEach](#applyEach)\n* [applyEachSeries](#applyEachSeries)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n<a name="each" />\n### each(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the each function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="forEachSeries" />\n<a name="eachSeries" />\n### eachSeries(arr, iterator, callback)\n\nThe same as each only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n<a name="eachLimit" />\n### eachLimit(arr, limit, iterator, callback)\n\nThe same as each only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.eachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="mapLimit" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.mapLimit([\'file1\',\'file2\',\'file3\'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then it\'s probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback(err, reduction) which accepts an optional error as its first \n  argument, and the state of the reduction as the second. If an error is \n  passed to the callback, the reduction is stopped and the main callback is \n  immediately called with the error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, sortValue) which must be called once it\n  has completed with an error (which can be null) and a value to use as the sort\n  criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, results) which must be called once it \n  has completed with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of "limit" \ntasks executing at any time.\n\nNote that the tasks are not executed in batches, so there is no guarantee that \nthe first "limit" tasks will complete before any others are started.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback(err) which must be called once it has completed with an \n  optional error argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name="forever" />\n### forever(fn, callback)\n\nCalls the asynchronous function \'fn\' repeatedly, in series, indefinitely.\nIf an error is passed to fn\'s callback then \'callback\' is called with the\nerror, otherwise it will never be called.\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a \n  callback(err, result1, result2, ...) it must call on completion. The first\n  argument is an error (which can be null) and any further arguments will be \n  passed as arguments in order to the next task.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback){\n        callback(null, \'three\');\n    },\n    function(arg1, callback){\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n   // result now equals \'done\'    \n});\n```\n\n---------------------------------------\n<a name="compose" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions f(), g() and h() would produce the result of\nf(g(h())), only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* functions... - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name="applyEach" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling the\ncallback after all functions have completed. If you only provide the first\nargument then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* fns - the asynchronous functions to all call with the same arguments\n* args... - any number of separate arguments to pass to the function\n* callback - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], \'bucket\', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n---------------------------------------\n\n<a name="applyEachSeries" />\n### applyEachSeries(arr, iterator, callback)\n\nThe same as applyEach only the functions are applied in series.\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task, which must call its callback(err) argument when finished, with an \n  optional error as an argument.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* unshift(task, [callback]) - add a new task to the front of the queue.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing an array of\n  queued tasks, which must call its callback(err) argument when finished, with \n  an optional error as an argument.\n* payload - An optional integer for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log(\'hello \' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\nNote, all functions are called with a results object as a second argument, \nso it is unsafe to pass functions in the tasks object which cannot handle the\nextra argument. For example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, \'data.txt\', \'utf-8\')\n}, callback);\n```\n\nwill have the effect of calling readFile with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile(\'data.txt\', \'utf-8\', cb, {});\n```\n\nInstead, wrap the call to readFile in a function which does not forward the \nresults object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile(\'data.txt\', \'utf-8\', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The \n  function receives two arguments: (1) a callback(err, result) which must be \n  called when finished, passing an error (which can be null) and the result of \n  the function\'s execution, and (2) a results object, containing the results of\n  the previously executed functions.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. Results will always be passed\n\tbut if an error occurred, no other tasks will be performed, and the results\n\tobject will only contain partial results.\n  \n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let\'s email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. It\'s also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name="timesSeries" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
1963 silly resolved     readmeFilename: 'README.md',
1963 silly resolved     homepage: 'https://github.com/caolan/async',
1963 silly resolved     _id: 'async@0.2.10',
1963 silly resolved     _shasum: 'b6bbe0b0674b9d719708ca38de8c237cb526c3d1',
1963 silly resolved     _from: 'async@0.2.10',
1963 silly resolved     _resolved: 'https://registry.npmjs.org/async/-/async-0.2.10.tgz' } ]
1964 info install async@0.2.10 into /home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/constantinople/node_modules/uglify-js
1965 info installOne async@0.2.10
1966 silly resolved [ { name: 'traverse',
1966 silly resolved     version: '0.3.9',
1966 silly resolved     description: 'Traverse and transform objects by visiting every node on a recursive walk',
1966 silly resolved     author: { name: 'James Halliday' },
1966 silly resolved     license: 'MIT/X11',
1966 silly resolved     main: './index',
1966 silly resolved     repository:
1966 silly resolved      { type: 'git',
1966 silly resolved        url: 'http://github.com/substack/js-traverse.git' },
1966 silly resolved     devDependencies: { expresso: '0.7.x' },
1966 silly resolved     scripts: { test: 'expresso' },
1966 silly resolved     readme: 'traverse\n========\n\nTraverse and transform objects by visiting every node on a recursive walk.\n\nexamples\n========\n\ntransform negative numbers in-place\n-----------------------------------\n\nnegative.js\n\n````javascript\nvar traverse = require(\'traverse\');\nvar obj = [ 5, 6, -3, [ 7, 8, -2, 1 ], { f : 10, g : -13 } ];\n\ntraverse(obj).forEach(function (x) {\n    if (x < 0) this.update(x + 128);\n});\n\nconsole.dir(obj);\n````\n\nOutput:\n\n    [ 5, 6, 125, [ 7, 8, 126, 1 ], { f: 10, g: 115 } ]\n\ncollect leaf nodes\n------------------\n\nleaves.js\n\n````javascript\nvar traverse = require(\'traverse\');\n\nvar obj = {\n    a : [1,2,3],\n    b : 4,\n    c : [5,6],\n    d : { e : [7,8], f : 9 },\n};\n\nvar leaves = traverse(obj).reduce(function (acc, x) {\n    if (this.isLeaf) acc.push(x);\n    return acc;\n}, []);\n\nconsole.dir(leaves);\n````\n\nOutput:\n\n    [ 1, 2, 3, 4, 5, 6, 7, 8, 9 ]\n\ncontext\n=======\n\nEach method that takes a callback has a context (its `this` object) with these\nattributes:\n\nthis.node\n---------\n\nThe present node on the recursive walk\n\nthis.path\n---------\n\nAn array of string keys from the root to the present node\n\nthis.parent\n-----------\n\nThe context of the node\'s parent.\nThis is `undefined` for the root node.\n\nthis.key\n--------\n\nThe name of the key of the present node in its parent.\nThis is `undefined` for the root node.\n\nthis.isRoot, this.notRoot\n-------------------------\n\nWhether the present node is the root node\n\nthis.isLeaf, this.notLeaf\n-------------------------\n\nWhether or not the present node is a leaf node (has no children)\n\nthis.level\n----------\n\nDepth of the node within the traversal\n\nthis.circular\n-------------\n\nIf the node equals one of its parents, the `circular` attribute is set to the\ncontext of that parent and the traversal progresses no deeper.\n\nthis.update(value)\n------------------\n\nSet a new value for the present node.\n\nthis.remove()\n-------------\n\nRemove the current element from the output. If the node is in an Array it will\nbe spliced off. Otherwise it will be deleted from its parent.\n\nthis.delete()\n-------------\n\nDelete the current element from its parent in the output. Calls `delete` even on\nArrays.\n\nthis.before(fn)\n---------------\n\nCall this function before any of the children are traversed.\n\nthis.after(fn)\n--------------\n\nCall this function after any of the children are traversed.\n\nthis.pre(fn)\n------------\n\nCall this function before each of the children are traversed.\n\nthis.post(fn)\n-------------\n\nCall this function after each of the children are traversed.\n\nmethods\n=======\n\n.map(fn)\n--------\n\nExecute `fn` for each node in the object and return a new object with the\nresults of the walk. To update nodes in the result use `this.update(value)`.\n\n.forEach(fn)\n------------\n\nExecute `fn` for each node in the object but unlike `.map()`, when\n`this.update()` is called it updates the object in-place.\n\n.reduce(fn, acc)\n----------------\n\nFor each node in the object, perform a\n[left-fold](http://en.wikipedia.org/wiki/Fold_(higher-order_function))\nwith the return value of `fn(acc, node)`.\n\nIf `acc` isn\'t specified, `acc` is set to the root object for the first step\nand the root element is skipped.\n\n.deepEqual(obj)\n---------------\n\nReturns a boolean, whether the instance value is equal to the supplied object\nalong a deep traversal using some opinionated choices.\n\nSome notes:\n\n* RegExps are equal if their .toString()s match, but not functions since\nfunctions can close over different variables.\n\n* Date instances are compared using `.getTime()` just like `assert.deepEqual()`.\n\n* Circular references must refer to the same paths within the data structure for\nboth objects. For instance, in this snippet:\n\n````javascript\nvar a = [1];\na.push(a); // a = [ 1, *a ]\n\nvar b = [1];\nb.push(a); // b = [ 1, [ 1, *a ] ]\n````\n\n`a` is not the same as `b` since even though the expansion is the same, the\ncircular references in each refer to different paths into the data structure.\n\nHowever, in:\n\n````javascript\nvar c = [1];\nc.push(c); // c = [ 1, *c ];\n````\n\n`c` is equal to `a` in a `deepEqual()` because they have the same terminal node\nstructure.\n\n* Arguments objects are not arrays and neither are they the same as regular\nobjects.\n\n* Instances created with `new` of String, Boolean, and Number types are never\nequal to the native versions.\n\n.paths()\n--------\n\nReturn an `Array` of every possible non-cyclic path in the object.\nPaths are `Array`s of string keys.\n\n.nodes()\n--------\n\nReturn an `Array` of every node in the object.\n\n.clone()\n--------\n\nCreate a deep clone of the object.\n\ninstallation\n============\n\nUsing npm:\n    npm install traverse\n\nOr check out the repository and link your development copy:\n    git clone http://github.com/substack/js-traverse.git\n    cd js-traverse\n    npm link .\n\nYou can test traverse with "expresso":http://github.com/visionmedia/expresso\n(`npm install expresso`):\n    js-traverse $ expresso\n    \n    100% wahoo, your stuff is not broken!\n\nhash transforms\n===============\n\nThis library formerly had a hash transformation component. It has been\n[moved to the hashish package](https://github.com/substack/node-hashish).\n',
1966 silly resolved     readmeFilename: 'README.markdown',
1966 silly resolved     bugs: { url: 'https://github.com/substack/js-traverse/issues' },
1966 silly resolved     homepage: 'https://github.com/substack/js-traverse',
1966 silly resolved     _id: 'traverse@0.3.9',
1966 silly resolved     _shasum: '717b8f220cc0bb7b44e40514c22b2e8bbc70d8b9',
1966 silly resolved     _from: 'traverse@0.3.9',
1966 silly resolved     _resolved: 'https://registry.npmjs.org/traverse/-/traverse-0.3.9.tgz' } ]
1967 info install traverse@0.3.9 into /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip/node_modules/binary/node_modules/chainsaw
1968 info installOne traverse@0.3.9
1969 silly resolved [ { name: 'esprima',
1969 silly resolved     description: 'ECMAScript parsing infrastructure for multipurpose analysis',
1969 silly resolved     homepage: 'http://esprima.org',
1969 silly resolved     main: 'esprima.js',
1969 silly resolved     bin:
1969 silly resolved      { esparse: './bin/esparse.js',
1969 silly resolved        esvalidate: './bin/esvalidate.js' },
1969 silly resolved     files:
1969 silly resolved      [ 'bin',
1969 silly resolved        'test/run.js',
1969 silly resolved        'test/runner.js',
1969 silly resolved        'test/test.js',
1969 silly resolved        'test/compat.js',
1969 silly resolved        'test/reflect.js',
1969 silly resolved        'esprima.js' ],
1969 silly resolved     version: '1.0.4',
1969 silly resolved     engines: { node: '>=0.4.0' },
1969 silly resolved     maintainers: [ [Object] ],
1969 silly resolved     repository: { type: 'git', url: 'http://github.com/ariya/esprima.git' },
1969 silly resolved     licenses: [ [Object] ],
1969 silly resolved     keywords: [ 'ast', 'ecmascript', 'javascript', 'parser', 'syntax' ],
1969 silly resolved     scripts:
1969 silly resolved      { test: 'node test/run.js',
1969 silly resolved        benchmark: 'node test/benchmarks.js',
1969 silly resolved        'benchmark-quick': 'node test/benchmarks.js quick' },
1969 silly resolved     readme: '**Esprima** ([esprima.org](http://esprima.org)) is a high performance,\nstandard-compliant [ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-262.htm)\nparser written in ECMAScript (also popularly known as\n[JavaScript](http://en.wikipedia.org/wiki/JavaScript>JavaScript)).\nEsprima is created and maintained by [Ariya Hidayat](http://twitter.com/ariyahidayat),\nwith the help of [many contributors](https://github.com/ariya/esprima/contributors).\n\nEsprima runs on web browsers (IE 6+, Firefox 1+, Safari 3+, Chrome 1+, Konqueror 4.6+, Opera 8+) as well as\n[Node.js](http://nodejs.org).\n\n### Features\n\n- Full support for [ECMAScript 5.1](http://www.ecma-international.org/publications/standards/Ecma-262.htm)(ECMA-262)\n- Sensible [syntax tree format](http://esprima.org/doc/index.html#ast) compatible with Mozilla\n[Parser AST](https://developer.mozilla.org/en/SpiderMonkey/Parser_API)\n- Heavily tested (> 550 [unit tests](http://esprima.org/test/) with solid 100% statement coverage)\n- Optional tracking of syntax node location (index-based and line-column)\n- Experimental support for ES6/Harmony (module, class, destructuring, ...)\n\nEsprima is blazing fast (see the [benchmark suite](http://esprima.org/test/benchmarks.html)).\nIt is up to 3x faster than UglifyJS v1 and it is still [competitive](http://esprima.org/test/compare.html)\nwith the new generation of fast parsers.\n\n### Applications\n\nEsprima serves as the basis for many popular JavaScript development tools:\n\n- Code coverage analysis: [node-cover](https://github.com/itay/node-cover), [Istanbul](https://github.com/yahoo/Istanbul)\n- Documentation tool: [JFDoc](https://github.com/thejohnfreeman/jfdoc), [JSDuck](https://github.com/senchalabs/jsduck)\n- Language extension: [LLJS](http://mbebenita.github.com/LLJS/) (low-level JS),\n[Sweet.js](http://sweetjs.org/) (macro)\n- ES6/Harmony transpiler: [Six](https://github.com/matthewrobb/six), [Harmonizr](https://github.com/jdiamond/harmonizr)\n- Eclipse Orion smart editing ([outline view](https://github.com/aclement/esprima-outline), [content assist](http://contraptionsforprogramming.blogspot.com/2012/02/better-javascript-content-assist-in.html))\n- Source code modification: [Esmorph](https://github.com/ariya/esmorph), [Code Painter](https://github.com/fawek/codepainter),\n- Source transformation: [node-falafel](https://github.com/substack/node-falafel), [Esmangle](https://github.com/Constellation/esmangle), [escodegen](https://github.com/Constellation/escodegen)\n\n### Questions?\n- [Documentation](http://esprima.org/doc)\n- [Issue tracker](http://issues.esprima.org): [known problems](http://code.google.com/p/esprima/issues/list?q=Defect)\nand [future plans](http://code.google.com/p/esprima/issues/list?q=Enhancement)\n- [Mailing list](http://groups.google.com/group/esprima)\n- [Contribution guide](http://esprima.org/doc/index.html#contribution)\n\nFollow [@Esprima](http://twitter.com/Esprima) on Twitter to get the\ndevelopment updates.\nFeedback and contribution are welcomed!\n\n### License\n\nCopyright (C) 2012, 2011 [Ariya Hidayat](http://ariya.ofilabs.com/about)\n and other contributors.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n',
1969 silly resolved     readmeFilename: 'README.md',
1969 silly resolved     bugs: { url: 'https://github.com/ariya/esprima/issues' },
1969 silly resolved     _id: 'esprima@1.0.4',
1969 silly resolved     _shasum: '9f557e08fc3b4d26ece9dd34f8fbf476b62585ad',
1969 silly resolved     _from: 'esprima@1.0.4',
1969 silly resolved     _resolved: 'https://registry.npmjs.org/esprima/-/esprima-1.0.4.tgz' } ]
1970 info install esprima@1.0.4 into /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/cardinal/node_modules/redeyed
1971 info installOne esprima@1.0.4
1972 info /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client/node_modules/request unbuild
1973 info preuninstall request@2.27.0
1974 info /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/update-notifier/node_modules/request unbuild
1975 info preuninstall request@2.27.0
1976 info /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight/node_modules/request unbuild
1977 info preuninstall request@2.27.0
1978 info /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip/node_modules/touch unbuild
1979 info preuninstall touch@0.0.2
1980 info /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/request unbuild
1981 info preuninstall request@2.34.0
1982 info /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip/node_modules/readable-stream unbuild
1983 info preuninstall readable-stream@1.1.13-1
1984 silly resolved [ { name: 'configstore',
1984 silly resolved     version: '0.2.3',
1984 silly resolved     description: 'Easily load and save config without having to think about where and how',
1984 silly resolved     keywords:
1984 silly resolved      [ 'conf',
1984 silly resolved        'config',
1984 silly resolved        'configuration',
1984 silly resolved        'settings',
1984 silly resolved        'store',
1984 silly resolved        'editable',
1984 silly resolved        'yaml',
1984 silly resolved        'yml' ],
1984 silly resolved     homepage: 'https://github.com/yeoman/configstore',
1984 silly resolved     bugs: { url: 'https://github.com/yeoman/configstore/issues' },
1984 silly resolved     author:
1984 silly resolved      { name: 'Sindre Sorhus',
1984 silly resolved        email: 'sindresorhus@gmail.com',
1984 silly resolved        url: 'http://sindresorhus.com' },
1984 silly resolved     main: 'configstore.js',
1984 silly resolved     repository: { type: 'git', url: 'git://github.com/yeoman/configstore.git' },
1984 silly resolved     scripts: { test: 'mocha' },
1984 silly resolved     engines: { node: '>=0.10.0' },
1984 silly resolved     licenses: [ [Object] ],
1984 silly resolved     dependencies:
1984 silly resolved      { mkdirp: '~0.3.5',
1984 silly resolved        'js-yaml': '~3.0.1',
1984 silly resolved        osenv: '0.0.3',
1984 silly resolved        'graceful-fs': '~2.0.1',
1984 silly resolved        uuid: '~1.4.1',
1984 silly resolved        'object-assign': '~0.1.1' },
1984 silly resolved     devDependencies: { mocha: '*' },
1984 silly resolved     files: [ 'configstore.js' ],
1984 silly resolved     readme: '# configstore [![Build Status](https://secure.travis-ci.org/yeoman/configstore.png?branch=master)](http://travis-ci.org/yeoman/configstore)\n\nEasily load and persist config without having to think about where and how.\n\nConfig is stored in a YAML file to make it simple for users to edit the config directly themselves. The file is located in `$XDG_CONFIG_HOME` or `~/.config`. Eg: `~/.config/configstore/id-of-your-choosing.yml`\n\n\n## Example usage\n\n```js\nvar Configstore = require(\'configstore\');\nvar packageName = require(\'./package\').name;\n\n// Init a Configstore instance with an unique ID eg. package name\n// and optionally some default values\nvar conf = new Configstore(packageName, { foo: \'bar\' });\n\nconf.set(\'awesome\', true);\nconsole.log(conf.get(\'awesome\'));  // true\nconsole.log(conf.get(\'foo\'));      // bar\n\nconf.del(\'awesome\');\nconsole.log(conf.get(\'awesome\'));  // undefined\n```\n\n\n## Documentation\n\n### Methods\n\n#### .set(key, val)\n\nSet an item\n\n#### .get(key)\n\nGet an item\n\n#### .del(key)\n\nDelete an item\n\n### Properties\n\n#### .all\n\nGet all items as an object or replace the current config with an object:\n\n```js\nconf.all = {\n\thello: \'world\'\n};\n```\n\n#### .size\n\nGet the item count\n\n#### .path\n\nGet the path to the config file. Can be used to show the user where the config file is located or even better open it for them.\n\n\n## License\n\n[BSD license](http://opensource.org/licenses/bsd-license.php)  \nCopyright Google\n',
1984 silly resolved     readmeFilename: 'readme.md',
1984 silly resolved     _id: 'configstore@0.2.3',
1984 silly resolved     _shasum: 'b1bdc4ad823a25423dc15d220fcc1ae1d7efab02',
1984 silly resolved     _from: 'configstore@0.2.3',
1984 silly resolved     _resolved: 'https://registry.npmjs.org/configstore/-/configstore-0.2.3.tgz' } ]
1985 info install configstore@0.2.3 into /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/update-notifier
1986 info installOne configstore@0.2.3
1987 silly resolved [ { name: 'configstore',
1987 silly resolved     version: '0.2.3',
1987 silly resolved     description: 'Easily load and save config without having to think about where and how',
1987 silly resolved     keywords:
1987 silly resolved      [ 'conf',
1987 silly resolved        'config',
1987 silly resolved        'configuration',
1987 silly resolved        'settings',
1987 silly resolved        'store',
1987 silly resolved        'editable',
1987 silly resolved        'yaml',
1987 silly resolved        'yml' ],
1987 silly resolved     homepage: 'https://github.com/yeoman/configstore',
1987 silly resolved     bugs: { url: 'https://github.com/yeoman/configstore/issues' },
1987 silly resolved     author:
1987 silly resolved      { name: 'Sindre Sorhus',
1987 silly resolved        email: 'sindresorhus@gmail.com',
1987 silly resolved        url: 'http://sindresorhus.com' },
1987 silly resolved     main: 'configstore.js',
1987 silly resolved     repository: { type: 'git', url: 'git://github.com/yeoman/configstore.git' },
1987 silly resolved     scripts: { test: 'mocha' },
1987 silly resolved     engines: { node: '>=0.10.0' },
1987 silly resolved     licenses: [ [Object] ],
1987 silly resolved     dependencies:
1987 silly resolved      { mkdirp: '~0.3.5',
1987 silly resolved        'js-yaml': '~3.0.1',
1987 silly resolved        osenv: '0.0.3',
1987 silly resolved        'graceful-fs': '~2.0.1',
1987 silly resolved        uuid: '~1.4.1',
1987 silly resolved        'object-assign': '~0.1.1' },
1987 silly resolved     devDependencies: { mocha: '*' },
1987 silly resolved     files: [ 'configstore.js' ],
1987 silly resolved     readme: '# configstore [![Build Status](https://secure.travis-ci.org/yeoman/configstore.png?branch=master)](http://travis-ci.org/yeoman/configstore)\n\nEasily load and persist config without having to think about where and how.\n\nConfig is stored in a YAML file to make it simple for users to edit the config directly themselves. The file is located in `$XDG_CONFIG_HOME` or `~/.config`. Eg: `~/.config/configstore/id-of-your-choosing.yml`\n\n\n## Example usage\n\n```js\nvar Configstore = require(\'configstore\');\nvar packageName = require(\'./package\').name;\n\n// Init a Configstore instance with an unique ID eg. package name\n// and optionally some default values\nvar conf = new Configstore(packageName, { foo: \'bar\' });\n\nconf.set(\'awesome\', true);\nconsole.log(conf.get(\'awesome\'));  // true\nconsole.log(conf.get(\'foo\'));      // bar\n\nconf.del(\'awesome\');\nconsole.log(conf.get(\'awesome\'));  // undefined\n```\n\n\n## Documentation\n\n### Methods\n\n#### .set(key, val)\n\nSet an item\n\n#### .get(key)\n\nGet an item\n\n#### .del(key)\n\nDelete an item\n\n### Properties\n\n#### .all\n\nGet all items as an object or replace the current config with an object:\n\n```js\nconf.all = {\n\thello: \'world\'\n};\n```\n\n#### .size\n\nGet the item count\n\n#### .path\n\nGet the path to the config file. Can be used to show the user where the config file is located or even better open it for them.\n\n\n## License\n\n[BSD license](http://opensource.org/licenses/bsd-license.php)  \nCopyright Google\n',
1987 silly resolved     readmeFilename: 'readme.md',
1987 silly resolved     _id: 'configstore@0.2.3',
1987 silly resolved     _shasum: 'b1bdc4ad823a25423dc15d220fcc1ae1d7efab02',
1987 silly resolved     _from: 'configstore@0.2.3',
1987 silly resolved     _resolved: 'https://registry.npmjs.org/configstore/-/configstore-0.2.3.tgz' } ]
1988 info install configstore@0.2.3 into /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight
1989 info installOne configstore@0.2.3
1990 info /home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch/node_modules/async unbuild
1991 info preuninstall async@0.2.10
1992 info /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client/node_modules/async unbuild
1993 info preuninstall async@0.2.10
1994 info /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight/node_modules/async unbuild
1995 info preuninstall async@0.2.10
1996 info /home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/async unbuild
1997 info preuninstall async@0.2.10
1998 info /home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/async unbuild
1999 info preuninstall async@0.2.10
2000 info /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip/node_modules/binary/node_modules/chainsaw/node_modules/traverse unbuild
2001 info preuninstall traverse@0.3.9
2002 silly resolved [ { name: 'minimist',
2002 silly resolved     version: '0.0.10',
2002 silly resolved     description: 'parse argument options',
2002 silly resolved     main: 'index.js',
2002 silly resolved     devDependencies: { tape: '~1.0.4', tap: '~0.4.0' },
2002 silly resolved     scripts: { test: 'tap test/*.js' },
2002 silly resolved     testling: { files: 'test/*.js', browsers: [Object] },
2002 silly resolved     repository: { type: 'git', url: 'git://github.com/substack/minimist.git' },
2002 silly resolved     homepage: 'https://github.com/substack/minimist',
2002 silly resolved     keywords: [ 'argv', 'getopt', 'parser', 'optimist' ],
2002 silly resolved     author:
2002 silly resolved      { name: 'James Halliday',
2002 silly resolved        email: 'mail@substack.net',
2002 silly resolved        url: 'http://substack.net' },
2002 silly resolved     license: 'MIT',
2002 silly resolved     readme: '# minimist\n\nparse argument options\n\nThis module is the guts of optimist\'s argument parser without all the\nfanciful decoration.\n\n[![browser support](https://ci.testling.com/substack/minimist.png)](http://ci.testling.com/substack/minimist)\n\n[![build status](https://secure.travis-ci.org/substack/minimist.png)](http://travis-ci.org/substack/minimist)\n\n# example\n\n``` js\nvar argv = require(\'minimist\')(process.argv.slice(2));\nconsole.dir(argv);\n```\n\n```\n$ node example/parse.js -a beep -b boop\n{ _: [], a: \'beep\', b: \'boop\' }\n```\n\n```\n$ node example/parse.js -x 3 -y 4 -n5 -abc --beep=boop foo bar baz\n{ _: [ \'foo\', \'bar\', \'baz\' ],\n  x: 3,\n  y: 4,\n  n: 5,\n  a: true,\n  b: true,\n  c: true,\n  beep: \'boop\' }\n```\n\n# methods\n\n``` js\nvar parseArgs = require(\'minimist\')\n```\n\n## var argv = parseArgs(args, opts={})\n\nReturn an argument object `argv` populated with the array arguments from `args`.\n\n`argv._` contains all the arguments that didn\'t have an option associated with\nthem.\n\nNumeric-looking arguments will be returned as numbers unless `opts.string` or\n`opts.boolean` is set for that argument name.\n\nAny arguments after `\'--\'` will not be parsed and will end up in `argv._`.\n\noptions can be:\n\n* `opts.string` - a string or array of strings argument names to always treat as\nstrings\n* `opts.boolean` - a string or array of strings to always treat as booleans\n* `opts.alias` - an object mapping string names to strings or arrays of string\nargument names to use as aliases\n* `opts.default` - an object mapping string argument names to default values\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install minimist\n```\n\n# license\n\nMIT\n',
2002 silly resolved     readmeFilename: 'readme.markdown',
2002 silly resolved     bugs: { url: 'https://github.com/substack/minimist/issues' },
2002 silly resolved     _id: 'minimist@0.0.10',
2002 silly resolved     _shasum: 'de3f98543dbf96082be48ad1a0c7cda836301dcf',
2002 silly resolved     _from: 'minimist@0.0.10',
2002 silly resolved     _resolved: 'https://registry.npmjs.org/minimist/-/minimist-0.0.10.tgz' } ]
2003 info install minimist@0.0.10 into /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-config/node_modules/optimist
2004 info installOne minimist@0.0.10
2005 info /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/cardinal/node_modules/redeyed/node_modules/esprima unbuild
2006 info preuninstall esprima@1.0.4
2007 info uninstall request@2.27.0
2008 info uninstall request@2.27.0
2009 info uninstall request@2.27.0
2010 info uninstall touch@0.0.2
2011 info uninstall request@2.34.0
2012 info uninstall readable-stream@1.1.13-1
2013 info /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/update-notifier/node_modules/configstore unbuild
2014 info preuninstall configstore@0.2.3
2015 info /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight/node_modules/configstore unbuild
2016 info preuninstall configstore@0.2.3
2017 info uninstall async@0.2.10
2018 info uninstall async@0.2.10
2019 info uninstall async@0.2.10
2020 info uninstall async@0.2.10
2021 info uninstall async@0.2.10
2022 info uninstall traverse@0.3.9
2023 info /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-config/node_modules/optimist/node_modules/minimist unbuild
2024 info preuninstall minimist@0.0.10
2025 info uninstall esprima@1.0.4
2026 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client/node_modules unbuild request@2.27.0
2027 info postuninstall request@2.27.0
2028 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/update-notifier/node_modules unbuild request@2.27.0
2029 info postuninstall request@2.27.0
2030 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight/node_modules unbuild request@2.27.0
2031 info postuninstall request@2.27.0
2032 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip/node_modules unbuild touch@0.0.2
2033 info postuninstall touch@0.0.2
2034 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules unbuild request@2.34.0
2035 info postuninstall request@2.34.0
2036 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip/node_modules unbuild readable-stream@1.1.13-1
2037 info postuninstall readable-stream@1.1.13-1
2038 info uninstall configstore@0.2.3
2039 info uninstall configstore@0.2.3
2040 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch/node_modules unbuild async@0.2.10
2041 info postuninstall async@0.2.10
2042 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client/node_modules unbuild async@0.2.10
2043 info postuninstall async@0.2.10
2044 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight/node_modules unbuild async@0.2.10
2045 info postuninstall async@0.2.10
2046 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules unbuild async@0.2.10
2047 info postuninstall async@0.2.10
2048 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules unbuild async@0.2.10
2049 info postuninstall async@0.2.10
2050 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip/node_modules/binary/node_modules/chainsaw/node_modules unbuild traverse@0.3.9
2051 info postuninstall traverse@0.3.9
2052 info uninstall minimist@0.0.10
2053 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/cardinal/node_modules/redeyed/node_modules unbuild esprima@1.0.4
2054 verbose /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/cardinal/node_modules/redeyed/node_modules/.bin,[object Object] binRoot
2055 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/update-notifier/node_modules unbuild configstore@0.2.3
2056 info postuninstall configstore@0.2.3
2057 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight/node_modules unbuild configstore@0.2.3
2058 info postuninstall configstore@0.2.3
2059 info /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/cardinal/node_modules/redeyed/node_modules/esprima unbuild
2060 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-config/node_modules/optimist/node_modules unbuild minimist@0.0.10
2061 info postuninstall minimist@0.0.10
2062 info preuninstall esprima@1.0.4
2063 info uninstall esprima@1.0.4
2064 verbose false,/home/maicon/Dev/Projetos/AMEN/node_modules,/home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/cardinal/node_modules/redeyed/node_modules unbuild esprima@1.0.4
2065 verbose /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/cardinal/node_modules/redeyed/node_modules/.bin,[object Object] binRoot
2066 verbose tar unpack /home/maicon/.npm/async/0.2.10/package.tgz
2067 silly lockFile 2cddc4f5-contrib-watch-node-modules-async tar:///home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch/node_modules/async
2068 verbose lock tar:///home/maicon/Dev/Projetos/AMEN/node_modules/grunt-contrib-watch/node_modules/async /home/maicon/.npm/2cddc4f5-contrib-watch-node-modules-async.lock
2069 silly lockFile cfd070fb-con-npm-async-0-2-10-package-tgz tar:///home/maicon/.npm/async/0.2.10/package.tgz
2070 verbose lock tar:///home/maicon/.npm/async/0.2.10/package.tgz /home/maicon/.npm/cfd070fb-con-npm-async-0-2-10-package-tgz.lock
2071 verbose tar unpack /home/maicon/.npm/async/0.2.10/package.tgz
2072 silly lockFile c85934e6-gistry-client-node-modules-async tar:///home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client/node_modules/async
2073 verbose lock tar:///home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-registry-client/node_modules/async /home/maicon/.npm/c85934e6-gistry-client-node-modules-async.lock
2074 silly lockFile cfd070fb-con-npm-async-0-2-10-package-tgz tar:///home/maicon/.npm/async/0.2.10/package.tgz
2075 verbose lock tar:///home/maicon/.npm/async/0.2.10/package.tgz /home/maicon/.npm/cfd070fb-con-npm-async-0-2-10-package-tgz.lock
2076 verbose tar unpack /home/maicon/.npm/async/0.2.10/package.tgz
2077 silly lockFile d0424435-dules-insight-node-modules-async tar:///home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight/node_modules/async
2078 verbose lock tar:///home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/insight/node_modules/async /home/maicon/.npm/d0424435-dules-insight-node-modules-async.lock
2079 silly lockFile cfd070fb-con-npm-async-0-2-10-package-tgz tar:///home/maicon/.npm/async/0.2.10/package.tgz
2080 verbose lock tar:///home/maicon/.npm/async/0.2.10/package.tgz /home/maicon/.npm/cfd070fb-con-npm-async-0-2-10-package-tgz.lock
2081 verbose tar unpack /home/maicon/.npm/async/0.2.10/package.tgz
2082 silly lockFile 504828c5-les-uglify-js-node-modules-async tar:///home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/async
2083 verbose lock tar:///home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/async /home/maicon/.npm/504828c5-les-uglify-js-node-modules-async.lock
2084 silly lockFile cfd070fb-con-npm-async-0-2-10-package-tgz tar:///home/maicon/.npm/async/0.2.10/package.tgz
2085 verbose lock tar:///home/maicon/.npm/async/0.2.10/package.tgz /home/maicon/.npm/cfd070fb-con-npm-async-0-2-10-package-tgz.lock
2086 verbose tar unpack /home/maicon/.npm/async/0.2.10/package.tgz
2087 silly lockFile 5bb5b982-les-uglify-js-node-modules-async tar:///home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/async
2088 verbose lock tar:///home/maicon/Dev/Projetos/AMEN/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/async /home/maicon/.npm/5bb5b982-les-uglify-js-node-modules-async.lock
2089 silly lockFile cfd070fb-con-npm-async-0-2-10-package-tgz tar:///home/maicon/.npm/async/0.2.10/package.tgz
2090 verbose lock tar:///home/maicon/.npm/async/0.2.10/package.tgz /home/maicon/.npm/cfd070fb-con-npm-async-0-2-10-package-tgz.lock
2091 verbose tar unpack /home/maicon/.npm/traverse/0.3.9/package.tgz
2092 silly lockFile 005cee30-s-chainsaw-node-modules-traverse tar:///home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip/node_modules/binary/node_modules/chainsaw/node_modules/traverse
2093 verbose lock tar:///home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip/node_modules/binary/node_modules/chainsaw/node_modules/traverse /home/maicon/.npm/005cee30-s-chainsaw-node-modules-traverse.lock
2094 silly lockFile 1875eef0-n-npm-traverse-0-3-9-package-tgz tar:///home/maicon/.npm/traverse/0.3.9/package.tgz
2095 verbose lock tar:///home/maicon/.npm/traverse/0.3.9/package.tgz /home/maicon/.npm/1875eef0-n-npm-traverse-0-3-9-package-tgz.lock
2096 info postuninstall esprima@1.0.4
2097 verbose tar unpack /home/maicon/.npm/minimist/0.0.10/package.tgz
2098 silly lockFile 7007ea89-s-optimist-node-modules-minimist tar:///home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-config/node_modules/optimist/node_modules/minimist
2099 verbose lock tar:///home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/bower-config/node_modules/optimist/node_modules/minimist /home/maicon/.npm/7007ea89-s-optimist-node-modules-minimist.lock
2100 silly lockFile 25b2d7f9--npm-minimist-0-0-10-package-tgz tar:///home/maicon/.npm/minimist/0.0.10/package.tgz
2101 verbose lock tar:///home/maicon/.npm/minimist/0.0.10/package.tgz /home/maicon/.npm/25b2d7f9--npm-minimist-0-0-10-package-tgz.lock
2102 silly gunzTarPerm modes [ '755', '644' ]
2103 silly gunzTarPerm modes [ '755', '644' ]
2104 silly gunzTarPerm modes [ '755', '644' ]
2105 verbose tar unpack /home/maicon/.npm/touch/0.0.2/package.tgz
2106 silly lockFile 3ae17dd5-ecompress-zip-node-modules-touch tar:///home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip/node_modules/touch
2107 verbose lock tar:///home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip/node_modules/touch /home/maicon/.npm/3ae17dd5-ecompress-zip-node-modules-touch.lock
2108 silly lockFile 5ec179ec-icon-npm-touch-0-0-2-package-tgz tar:///home/maicon/.npm/touch/0.0.2/package.tgz
2109 verbose lock tar:///home/maicon/.npm/touch/0.0.2/package.tgz /home/maicon/.npm/5ec179ec-icon-npm-touch-0-0-2-package-tgz.lock
2110 verbose tar unpack /home/maicon/.npm/readable-stream/1.1.13-1/package.tgz
2111 silly lockFile b4342d57-zip-node-modules-readable-stream tar:///home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip/node_modules/readable-stream
2112 verbose lock tar:///home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/decompress-zip/node_modules/readable-stream /home/maicon/.npm/b4342d57-zip-node-modules-readable-stream.lock
2113 silly lockFile 3eb27d93-able-stream-1-1-13-1-package-tgz tar:///home/maicon/.npm/readable-stream/1.1.13-1/package.tgz
2114 verbose lock tar:///home/maicon/.npm/readable-stream/1.1.13-1/package.tgz /home/maicon/.npm/3eb27d93-able-stream-1-1-13-1-package-tgz.lock
2115 silly gunzTarPerm extractEntry package.json
2116 silly gunzTarPerm extractEntry index.js
2117 silly gunzTarPerm modes [ '755', '644' ]
2118 silly gunzTarPerm modes [ '755', '644' ]
2119 silly gunzTarPerm extractEntry package.json
2120 error Refusing to delete: /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/cardinal/node_modules/redeyed/node_modules/.bin/esparse not in /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/cardinal/node_modules/redeyed/node_modules/esprima
File exists: /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/cardinal/node_modules/redeyed/node_modules/.bin/esparse
Move it away, and try again.
2121 error System Linux 3.5.0-48-generic
2122 error command "node" "/usr/bin/npm" "update"
2123 error cwd /home/maicon/Dev/Projetos/AMEN
2124 error node -v v0.10.26
2125 error npm -v 1.4.10
2126 error path /home/maicon/Dev/Projetos/AMEN/node_modules/bower/node_modules/cardinal/node_modules/redeyed/node_modules/.bin/esparse
2127 error code EEXIST
2128 verbose exit [ 1, true ]
